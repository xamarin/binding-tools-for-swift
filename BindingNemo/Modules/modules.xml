<BindingNemo version="1.0" encoding="UTF-8">
<xamreflect version="1.0">
   <modulelist>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftObjectiveC" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="ObjectiveC.NSZone">
               </Struct>
               <Struct name="ObjectiveC.ObjCBool">
                  <property>
                     <name>boolValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="ObjectiveC.Selector">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="ObjectiveC.Selector" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="ObjectiveC.Selector" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
            </innerstructs>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftXCTest" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftCore" swiftVersion="??">
         <typedeclaration kind="class" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerclasses>
               <Class name="Swift.AnyKeyPath">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rootType</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>valueType</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.AnyKeyPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.AnyKeyPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Class>
               <Class name="Swift.AnyObject">
               </Class>
               <Class name="Swift.KeyPath">
               </Class>
               <Class name="Swift.ManagedBuffer">
                  <property>
                     <name>capacity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>firstElementAddress</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>header</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>headerAddress</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>create</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.ManagedBuffer(Self, ???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="minimumCapacity: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="makingHeaderWith: Swift.ManagedBuffer(Self ???) -> Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeMutablePointerToElements</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeMutablePointerToHeader</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeMutablePointers</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UnsafeMutablePointer(???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Class>
               <Class name="Swift.PartialKeyPath">
               </Class>
               <Class name="Swift.ReferenceWritableKeyPath">
               </Class>
               <Class name="Swift.WritableKeyPath">
               </Class>
            </innerclasses>
         </typedeclaration>
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="Swift.AnyBidirectionalCollection">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>underestimatedCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>drop</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyBidirectionalCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dropFirst</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyBidirectionalCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dropLast</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyBidirectionalCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>filter</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>forEach</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyIndex</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyIterator(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>map</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>prefix</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyBidirectionalCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>suffix</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyBidirectionalCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.AnyCollection">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>underestimatedCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>drop</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dropFirst</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dropLast</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>filter</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>forEach</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyIndex</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyIterator(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>map</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>prefix</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>suffix</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.AnyHashable">
                  <property>
                     <name>base</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.AnyHashable" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.AnyHashable" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.AnyIndex">
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.AnyIterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.AnyRandomAccessCollection">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>underestimatedCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>drop</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyRandomAccessCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dropFirst</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyRandomAccessCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dropLast</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyRandomAccessCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>filter</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>forEach</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyIndex</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyIterator(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>map</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>prefix</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyRandomAccessCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>suffix</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyRandomAccessCollection(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.AnySequence">
                  <property>
                     <name>underestimatedCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>drop</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnySequence(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dropFirst</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnySequence(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dropLast</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>filter</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>forEach</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.AnyIterator(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>map</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>prefix</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>suffix</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Array">
                  <property>
                     <name>capacity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Array(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Array(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Array(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Array(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Array(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remove</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="at: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>removeAll</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>reserveCapacity</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>reserveCapacityForAppend</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="newElementsCount: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withContiguousMutableStorageIfAvailable</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withContiguousStorageIfAvailable</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeBufferPointer</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withUnsafeMutableBufferPointer</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeMutableBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.ArraySlice">
                  <property>
                     <name>capacity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remove</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="at: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>removeAll</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>reserveCapacity</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>reserveCapacityForAppend</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="newElementsCount: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withContiguousMutableStorageIfAvailable</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withContiguousStorageIfAvailable</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeBufferPointer</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withUnsafeMutableBufferPointer</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeMutableBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.AutoreleasingUnsafeMutablePointer">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>pointee</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Bool">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>!</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Prefix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>&amp;&amp;</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="() -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>random</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="using: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>toggle</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>||</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="() -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.CVaListPointer">
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Character">
                  <property>
                     <name>asciiValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hexDigitValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isASCII</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isCased</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isCurrencySymbol</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isHexDigit</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isLetter</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isLowercase</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isMathSymbol</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isNewline</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isNumber</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isPunctuation</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSymbol</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isUppercase</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isWhitespace</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isWholeNumber</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>unicodeScalars</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf16</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf8</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>wholeNumberValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Character" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Character" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Character" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Character" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>lowercased</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>uppercased</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>write</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.ClosedRange">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isEmpty</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lowerBound</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>upperBound</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.ClosedRange(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.ClosedRange(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>clamped</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.ClosedRange(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.ClosedRange(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>contains</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>overlaps</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>relative</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Range(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.CodingUserInfoKey">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.CodingUserInfoKey" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.CodingUserInfoKey" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.CollectionDifference">
                  <func>
                     <name>inverse</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.CollectionDifference(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.CollectionDifference.Index">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.CollectionOfOne">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.CollectionOfOne.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.ContiguousArray">
                  <property>
                     <name>capacity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remove</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="at: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>removeAll</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>reserveCapacity</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>reserveCapacityForAppend</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="newElementsCount: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withContiguousMutableStorageIfAvailable</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withContiguousStorageIfAvailable</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeBufferPointer</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withUnsafeMutableBufferPointer</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeMutableBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.DecodingError.Context">
                  <property>
                     <name>codingPath</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>underlyingError</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.DefaultIndicies">
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>formIndex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Self.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Index</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Self.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.DefaultStringInterpolation">
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>appendInterpolation</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>appendLiteral</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>make</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>write</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary">
                  <property>
                     <name>capacity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isEmpty</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>compactMapValues</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Dictionary(Self, ???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>filter</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Dictionary(Self, ???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(key: Self value: ???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>mapValues</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Dictionary(Self, ???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>popFirst</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(key: Self, value: ???)?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>removeAll</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>removeValue</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>reserveCapacity</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary.Index">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary.Iterator">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(key: Self, value: ???)?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary.Keys">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isEmpty</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Dictionary.Keys.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary.Values">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isEmpty</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Dictionary.Values.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.Double">
                  <property>
                     <name>binade</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>bitPattern</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>exponent</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>exponentBitCount</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>exponentBitPattern</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>greatestFiniteMagnitude</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>infinity</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isCanonical</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isFinite</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isInfinite</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isNaN</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isNormal</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSignMinus</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSignalingNaN</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSubnormal</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isZero</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leastNonzeroMagnitude</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leastNormalMagnitude</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>magnitude</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nan</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nextUp</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>pi</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>quietNaN</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>sign</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>signalingNaN</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significand</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significandBitCount</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significandBitPattern</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significandWidth</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ulp</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ulpOfOne</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Double</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Double</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Double</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Double</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addProduct</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>advanced</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Double</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Double</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formRemainder</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formSquareRoot</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formTruncatingRemainder</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isEqual</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isLess</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="than: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isLessThanOrEqualTo</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>negate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>round</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>write</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Double.SIMD16Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Double.SIMD2Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Double.SIMD32Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Double.SIMD4Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Double.SIMD64Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Double.SIMD8Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.DropFirstSequence">
                  <func>
                     <name>dropFirst</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.DropFirstSequence(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Iterator</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.DropWhileSequence">
                  <func>
                     <name>drop</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.DropWhileSequence(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self.Element -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.DropWhileSequence.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.EmptyCollection">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.EmptyCollection(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.EmptyCollection(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.EmptyCollection.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.EncodingError.Context">
                  <property>
                     <name>codingPath</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>underlyingError</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.EnumeratedSequence">
               </Struct>
               <Struct name="Swift.EnumeratedSequence.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(offset: Int, element: Self.Element)?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.FlattenSequence">
               </Struct>
               <Struct name="Swift.FlattenSequence.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element.Element?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.Float">
                  <property>
                     <name>binade</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>bitPattern</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>exponent</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>exponentBitCount</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>exponentBitPattern</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>greatestFiniteMagnitude</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>infinity</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isCanonical</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isFinite</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isInfinite</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isNaN</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isNormal</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSignMinus</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSignalingNaN</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSubnormal</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isZero</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leastNonzeroMagnitude</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leastNormalMagnitude</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>magnitude</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nan</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nextUp</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>pi</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>quietNaN</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>sign</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>signalingNaN</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significand</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significandBitCount</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significandBitPattern</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significandWidth</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ulp</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ulpOfOne</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Float</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Float</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Float</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Float</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addProduct</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>advanced</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Float</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Float</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formRemainder</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formSquareRoot</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formTruncatingRemainder</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isEqual</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isLess</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="than: Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isLessThanOrEqualTo</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>negate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>round</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>write</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Float.SIMD16Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Float.SIMD2Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Float.SIMD32Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Float.SIMD4Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Float.SIMD64Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Float.SIMD8Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Float16">
                  <property>
                     <name>binade</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>bitPattern</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>exponent</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>exponentBitCount</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>exponentBitPattern</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>greatestFiniteMagnitude</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>infinity</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isCanonical</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isFinite</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isInfinite</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isNaN</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isNormal</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSignMinus</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSignalingNaN</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSubnormal</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isZero</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leastNonzeroMagnitude</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leastNormalMagnitude</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>magnitude</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nan</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nextUp</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>pi</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>quietNaN</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>sign</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>signalingNaN</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significand</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significandBitCount</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significandBitPattern</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significandWidth</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ulp</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ulpOfOne</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Float16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Float16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Float16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Float16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addProduct</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>advanced</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Float16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Float16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formRemainder</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formSquareRoot</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formTruncatingRemainder</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isEqual</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isLess</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="than: Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isLessThanOrEqualTo</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>negate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>round</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>write</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Float16.SIMD16Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Float16.SIMD2Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Float16.SIMD32Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Float16.SIMD4Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Float16.SIMD64Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Float16.SIMD8Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Float80">
               </Struct>
               <Struct name="Swift.Hasher">
                  <func>
                     <name>combine</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="bytes: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>finalize</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.IndexingIterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.Int">
                  <property>
                     <name>bitWidth</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>byteSwapped</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leadingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>magnitude</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nonzeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>trailingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>words</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>%</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>%=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Int, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>advanced</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Int, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividingFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(quotient: Int, remainder: Int)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Int low: UInt)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(high: Int, low: UInt)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Int, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remainderReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Int, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>signum</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subtractingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Int, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int.SIMD16Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int.SIMD2Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int.SIMD32Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int.SIMD4Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int.SIMD64Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int.SIMD8Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int.Words">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int16">
                  <property>
                     <name>bitWidth</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>byteSwapped</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leadingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>magnitude</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nonzeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>trailingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>words</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>%</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>%=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int16, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int16, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividingFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(quotient: Swift.Int16, remainder: Swift.Int16)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.Int16 low: Swift.UInt16)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(high: Swift.Int16, low: Swift.UInt16)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int16, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remainderReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int16, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>signum</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subtractingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int16, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int16.SIMD16Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int16.SIMD2Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int16.SIMD32Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int16.SIMD4Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int16.SIMD64Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int16.SIMD8Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int16.Words">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int32">
                  <property>
                     <name>bitWidth</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>byteSwapped</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leadingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>magnitude</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nonzeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>trailingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>words</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>%</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>%=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int32, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int32, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividingFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(quotient: Swift.Int32, remainder: Swift.Int32)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.Int32 low: Swift.UInt32)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(high: Swift.Int32, low: Swift.UInt32)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int32, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remainderReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int32, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>signum</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subtractingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int32, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int32.SIMD16Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int32.SIMD2Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int32.SIMD32Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int32.SIMD4Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int32.SIMD64Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int32.SIMD8Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int32.Words">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int64">
                  <property>
                     <name>bitWidth</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>byteSwapped</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leadingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>magnitude</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nonzeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>trailingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>words</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>%</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>%=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int64, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int64, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividingFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(quotient: Swift.Int64, remainder: Swift.Int64)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.Int64 low: Swift.UInt64)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(high: Swift.Int64, low: Swift.UInt64)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int64, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remainderReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int64, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>signum</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subtractingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int64, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int64.SIMD16Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int64.SIMD2Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int64.SIMD32Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int64.SIMD4Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int64.SIMD64Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int64.SIMD8Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int64.Words">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int8">
                  <property>
                     <name>bitWidth</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>byteSwapped</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leadingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>magnitude</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nonzeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>trailingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>words</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>%</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>%=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int8, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int8, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividingFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(quotient: Swift.Int8, remainder: Swift.Int8)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.Int8 low: Swift.UInt8)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(high: Swift.Int8, low: Swift.UInt8)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int8, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remainderReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int8, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>signum</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subtractingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.Int8, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Int8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int8.SIMD16Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int8.SIMD2Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int8.SIMD32Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int8.SIMD4Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int8.SIMD64Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int8.SIMD8Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Int8.Words">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.IteratorSequence">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.JoinedSequence">
               </Struct>
               <Struct name="Swift.JoinedSequence.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element.Element?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.KeyValuePairs">
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.KeyedDecodingContainer">
                  <property>
                     <name>allKeys</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>codingPath</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>contains</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeNil</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>nestedContainer</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.KeyedDecodingContainer(???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>nestedUnkeyedContainer</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnkeyedDecodingContainer</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>superDecoder</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Decoder</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.KeyedEncodingContainer">
                  <property>
                     <name>codingPath</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeConditional</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": ???" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeNil</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>nestedContainer</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.KeyedEncodingContainer(???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>nestedUnkeyedContainer</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnkeyedEncodingContainer</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>superEncoder</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Encoder</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.LazyDropWhileSequence">
               </Struct>
               <Struct name="Swift.LazyDropWhileSequence.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.LazyFilterSequence">
                  <func>
                     <name>filter</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.LazyFilterSequence(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.LazyFilterSequence.Iterator">
                  <property>
                     <name>base</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.LazyMapSequence">
                  <property>
                     <name>underestimatedCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>map</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.LazyMapSequence(Self, ???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.LazyMapSequence.Iterator">
                  <property>
                     <name>base</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.LazyPrefixWhileSequence">
               </Struct>
               <Struct name="Swift.LazyPrefixWhileSequence.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.LazySequence">
                  <property>
                     <name>elements</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>underestimatedCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Iterator</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.ManagedBufferPointer">
                  <property>
                     <name>buffer</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>capacity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>header</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.ManagedBufferPointer(Self ???)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.ManagedBufferPointer(Self ???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isUniqueReference</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withUnsafeMutablePointerToElements</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeMutablePointerToHeader</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeMutablePointers</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UnsafeMutablePointer(???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Mirror">
                  <property>
                     <name>children</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>displayStyle</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>subjectType</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>superclassMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>descendant</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Any?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.MirrorPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Array(Swift.MirrorPath)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.ObjectIdentifier">
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.ObjectIdentifier" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.ObjectIdentifier" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.ObjectIdentifier" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.ObjectIdentifier" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.OpaquePointer">
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.OpaquePointer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.OpaquePointer" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.PartialRangeFrom">
                  <property>
                     <name>lowerBound</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>contains</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>relative</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Range(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.PartialRangeThrough">
                  <property>
                     <name>upperBound</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>contains</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>relative</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Range(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.PartialRangeUpTo">
                  <property>
                     <name>upperBound</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>contains</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>relative</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Range(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.PrefixSequence">
                  <func>
                     <name>prefix</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.PrefixSequence(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.PrefixSequence.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.Range">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isEmpty</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lowerBound</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>upperBound</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Range(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Range(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>clamped</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Range(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Range(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>contains</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>overlaps</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>relative</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Range(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Repeated">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>repeatedValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.ReversedCollection">
                  <func>
                     <name>reversed</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.ReversedCollection.Index">
                  <property>
                     <name>base</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.ReversedCollection.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.SIMD16">
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>evenHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>highHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lowHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>oddHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.SIMD2">
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>x</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>y</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.SIMD3">
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>x</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>y</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>z</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.SIMD32">
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>evenHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>highHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lowHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>oddHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.SIMD4">
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>evenHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>highHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lowHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>oddHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>w</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>x</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>y</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>z</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.SIMD64">
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>evenHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>highHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lowHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>oddHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.SIMD8">
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>evenHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>highHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lowHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>oddHalf</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.SIMDMask">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>random</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.SIMDMask(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="using: ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Set">
                  <property>
                     <name>capacity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isEmpty</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Set(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Set(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>contains</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>filter</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Set(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formIntersection</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>intersection</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Set(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isDisjoint</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="with: Swift.Set(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isStrictSubset</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Swift.Set(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isStrictSuperset</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Swift.Set(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isSubset</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Swift.Set(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isSuperset</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Swift.Set(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>popFirst</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>remove</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>removeAll</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>removeFirst</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>reserveCapacity</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subtract</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>subtracting</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Set(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Set.Index">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Set.Iterator">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.Slice">
                  <property>
                     <name>base</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Self.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Self.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Self.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Index</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Self.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.StaticString">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hasPointerRepresentation</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isASCII</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>unicodeScalar</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf8CodeUnitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf8Start</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>withUTF8Buffer</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.StrideThrough">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>underestimatedCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.StrideThroughIterator(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.StrideThroughIterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.StrideTo">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>underestimatedCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.StrideToIterator(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.StrideToIterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.String">
                  <property>
                     <name>characters</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isEmpty</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>unicodeScalars</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf16</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf8</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf8CString</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>append</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeCString</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>(result: Swift.String, repairsMade: Bool)?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UnsafePointer(Self.CodeUnit)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="repairingInvalidCodeUnits: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hasPrefix</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>hasSuffix</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String.Index</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>insert</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="at: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>lowercased</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String.Iterator</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>max</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>min</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remove</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Character</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="at: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>removeAll</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>removeSubrange</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>replaceSubrange</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Swift.String.Index)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>reserveCapacity</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>uppercased</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withCString</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="encodedAs: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafePointer(???A1.CodeUnit) -> Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withMutableCharacters</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withUnsafeBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>write</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.String.Index">
                  <property>
                     <name>characterStride</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>encodedOffset</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isZeroPosition</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nextEncoded</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nextTranscoded</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>orderingValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>priorEncoded</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>priorTranscoded</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>strippingTranscoding</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>transcodedOffset</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encoded</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String.Index</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="offsetBy: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>samePosition</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String.Index?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.String.UnicodeScalarView" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>transcoded</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String.Index</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="withOffset: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>utf16Offset</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.String.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Character?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.String.UTF16View">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String.Index</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String.UTF16View.Iterator</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.String.UTF16View.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt16?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.String.UTF8View">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String.Index</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withContiguousStorageIfAvailable</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.String.UnicodeScalarView">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>append</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String.Index</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String.UnicodeScalarView.Iterator</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>replaceSubrange</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Swift.String.Index)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>reserveCapacity</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.String.UnicodeScalarView.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Unicode.Scalar?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.Substring">
                  <property>
                     <name>characters</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>unicodeScalars</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf16</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf8</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>append</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>filter</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String.Index</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>lowercased</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>replaceSubrange</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Swift.String.Index)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Swift.Substring" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>uppercased</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withCString</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="encodedAs: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafePointer(???A1.CodeUnit) -> Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withMutableCharacters</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withUnsafeBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>write</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Substring.UTF16View">
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String.Index</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Substring.UTF8View">
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String.Index</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Substring.UnicodeScalarView">
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String.Index</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>replaceSubrange</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Swift.String.Index)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.SystemRandomNumberGenerator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.UInt">
                  <property>
                     <name>bitWidth</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>byteSwapped</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leadingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nonzeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>trailingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>words</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>%</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>UInt</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>%=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>UInt</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>UInt</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>UInt</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>UInt</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>UInt</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>UInt</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>UInt</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>UInt</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: UInt, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: UInt, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividingFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(quotient: UInt, remainder: UInt)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: UInt low: UInt)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(high: UInt, low: UInt)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: UInt, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remainderReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: UInt, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>signum</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>UInt</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subtractingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: UInt, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>UInt</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt.SIMD16Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt.SIMD2Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt.SIMD32Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt.SIMD4Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt.SIMD64Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt.SIMD8Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt.Words">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt16">
                  <property>
                     <name>bitWidth</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>byteSwapped</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leadingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nonzeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>trailingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>words</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>%</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>%=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt16, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt16, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividingFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(quotient: Swift.UInt16, remainder: Swift.UInt16)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.UInt16 low: Swift.UInt16)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(high: Swift.UInt16, low: Swift.UInt16)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt16, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remainderReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt16, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>signum</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subtractingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt16, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt16.SIMD16Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt16.SIMD2Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt16.SIMD32Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt16.SIMD4Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt16.SIMD64Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt16.SIMD8Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt16.Words">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt32">
                  <property>
                     <name>bitWidth</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>byteSwapped</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leadingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nonzeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>trailingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>words</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>%</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>%=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt32, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt32, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividingFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(quotient: Swift.UInt32, remainder: Swift.UInt32)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.UInt32 low: Swift.UInt32)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(high: Swift.UInt32, low: Swift.UInt32)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt32, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remainderReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt32, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>signum</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subtractingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt32, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt32.SIMD16Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt32.SIMD2Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt32.SIMD32Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt32.SIMD4Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt32.SIMD64Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt32.SIMD8Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt32.Words">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt64">
                  <property>
                     <name>bitWidth</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>byteSwapped</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leadingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nonzeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>trailingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>words</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>%</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>%=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt64, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt64, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividingFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(quotient: Swift.UInt64, remainder: Swift.UInt64)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.UInt64 low: Swift.UInt64)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(high: Swift.UInt64, low: Swift.UInt64)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt64, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remainderReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt64, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>signum</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subtractingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt64, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt64.SIMD16Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt64.SIMD2Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt64.SIMD32Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt64.SIMD4Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt64.SIMD64Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt64.SIMD8Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt64.Words">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt8">
                  <property>
                     <name>bitWidth</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>byteSwapped</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leadingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nonzeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>trailingZeroBitCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>words</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>%</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>%=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt8, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt8, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividingFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(quotient: Swift.UInt8, remainder: Swift.UInt8)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.UInt8 low: Swift.UInt8)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedFullWidth</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(high: Swift.UInt8, low: Swift.UInt8)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt8, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remainderReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt8, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>signum</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subtractingReportingOverflow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Swift.UInt8, overflow: Bool)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt8.SIMD16Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt8.SIMD2Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt8.SIMD32Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt8.SIMD4Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt8.SIMD64Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt8.SIMD8Storage">
                  <property>
                     <name>scalarCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.UInt8.Words">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UnfoldSequence">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.ASCII.Parser">
                  <func>
                     <name>parseScalar</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Unicode.ParseResult(Swift.CollectionOfOne(Swift.UInt8))</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.CanonicalCombiningClass">
                  <property>
                     <name>above</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>aboveLeft</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>aboveRight</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>attachedAbove</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>attachedAboveRight</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>attachedBelow</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>attachedBelowLeft</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>below</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>belowLeft</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>belowRight</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>doubleAbove</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>doubleBelow</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>iotaSubscript</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>kanaVoicing</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>left</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>notReordered</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nukta</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>overlay</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>right</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>virama</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Unicode.CanonicalCombiningClass" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Unicode.CanonicalCombiningClass" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Unicode.CanonicalCombiningClass" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Unicode.CanonicalCombiningClass" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.Scalar">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isASCII</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>properties</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf16</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf8</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>escaped</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="asASCII: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUTF8CodeUnits</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>write</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.Scalar.Properties">
                  <property>
                     <name>age</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>canonicalCombiningClass</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>changesWhenCaseFolded</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>changesWhenCaseMapped</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>changesWhenLowercased</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>changesWhenNFKCCaseFolded</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>changesWhenTitlecased</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>changesWhenUppercased</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>generalCategory</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isASCIIHexDigit</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isAlphabetic</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isBidiControl</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isBidiMirrored</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isCaseIgnorable</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isCased</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isDash</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isDefaultIgnorableCodePoint</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isDeprecated</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isDiacritic</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isEmoji</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isEmojiModifier</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isEmojiModifierBase</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isEmojiPresentation</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isExtender</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isFullCompositionExclusion</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isGraphemeBase</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isGraphemeExtend</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isHexDigit</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isIDContinue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isIDSBinaryOperator</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isIDSTrinaryOperator</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isIDStart</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isIdeographic</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isJoinControl</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isLogicalOrderException</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isLowercase</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isMath</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isNoncharacterCodePoint</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isPatternSyntax</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isPatternWhitespace</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isQuotationMark</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isRadical</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSentenceTerminal</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSoftDotted</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isTerminalPunctuation</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isUnifiedIdeograph</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isUppercase</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isVariationSelector</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isWhitespace</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isXIDContinue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isXIDStart</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lowercaseMapping</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>name</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nameAlias</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>numericType</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>numericValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>titlecaseMapping</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>uppercaseMapping</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Unicode.Scalar.UTF16View">
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Unicode.Scalar.UTF8View">
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Unicode.UTF16.ForwardParser">
               </Struct>
               <Struct name="Swift.Unicode.UTF16.ReverseParser">
               </Struct>
               <Struct name="Swift.Unicode.UTF32.Parser">
                  <func>
                     <name>parseScalar</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Unicode.ParseResult(Swift.CollectionOfOne(Swift.UInt32))</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.UTF8.ForwardParser">
               </Struct>
               <Struct name="Swift.Unicode.UTF8.ReverseParser">
               </Struct>
               <Struct name="Swift.Unmanaged">
                  <func>
                     <name>autorelease</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Unmanaged(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>fromOpaque</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Unmanaged(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>passRetained</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Unmanaged(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>passUnretained</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Unmanaged(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>release</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>retain</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Unmanaged(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>takeRetainedValue</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>takeUnretainedValue</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>toOpaque</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnsafeMutableRawPointer</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeBufferPointer">
                  <property>
                     <name>baseAddress</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>deallocate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withContiguousStorageIfAvailable</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withMemoryRebound</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafeBufferPointer(???) -> ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeBufferPointer.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeMutableBufferPointer">
                  <property>
                     <name>baseAddress</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>allocate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UnsafeMutableBufferPointer(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>assign</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="repeating: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>deallocate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>initialize</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(???B0.Iterator, Int)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>swapAt</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withContiguousMutableStorageIfAvailable</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withContiguousStorageIfAvailable</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withMemoryRebound</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafeMutableBufferPointer(???) -> ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeMutablePointer">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>pointee</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>allocate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UnsafeMutablePointer(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>assign</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.UnsafePointer(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>deallocate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>deinitialize</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnsafeMutableRawPointer</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>initialize</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>move</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>moveAssign</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>moveInitialize</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withMemoryRebound</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafeMutablePointer(???) -> ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeMutableRawBufferPointer">
                  <property>
                     <name>baseAddress</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>allocate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UnsafeMutableRawBufferPointer</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>bindMemory</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnsafeMutableBufferPointer(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>copyBytes</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>copyMemory</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>deallocate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>initializeMemory</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(unwritten: Self.Iterator, initialized: Swift.UnsafeMutableBufferPointer(Self.Element))</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>load</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromByteOffset: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnsafeRawBufferPointer.Iterator</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>storeBytes</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="toByteOffset: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>swapAt</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeMutableRawPointer">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>advanced</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnsafeMutableRawPointer</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>allocate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UnsafeMutableRawPointer</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="bytes: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="alignedTo: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>assumingMemoryBound</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnsafeMutablePointer(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>bindMemory</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnsafeMutablePointer(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>copyBytes</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.UnsafeRawPointer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>copyMemory</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.UnsafeRawPointer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="byteCount: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>deallocate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="bytes: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="alignedTo: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>initializeMemory</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnsafeMutablePointer(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="at: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>load</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromByteOffset: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>moveInitializeMemory</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnsafeMutablePointer(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>storeBytes</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="toByteOffset: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UnsafePointer">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>pointee</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>deallocate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withMemoryRebound</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafePointer(???) -> ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeRawBufferPointer">
                  <property>
                     <name>baseAddress</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>bindMemory</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnsafeBufferPointer(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>deallocate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>load</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromByteOffset: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnsafeRawBufferPointer.Iterator</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withUnsafeBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeRawBufferPointer.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt8?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeRawPointer">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>advanced</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnsafeRawPointer</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>assumingMemoryBound</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnsafePointer(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>bindMemory</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnsafePointer(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>deallocate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>load</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromByteOffset: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Zip2Sequence">
                  <property>
                     <name>underestimatedCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Swift.Zip2Sequence.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(Self.Element, ???A1.Element)?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="Swift.CollectionDifference.Change">
               </Enum>
               <Enum name="Swift.CommandLine">
                  <property>
                     <name>argc</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>arguments</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>unsafeArgv</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Enum>
               <Enum name="Swift.DecodingError">
                  <func>
                     <name>dataCorruptedError</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.DecodingError</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.SingleValueDecodingContainer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="debugDescription: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.EncodingError">
               </Enum>
               <Enum name="Swift.FloatingPointClassification">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.FloatingPointClassification" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.FloatingPointClassification" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.FloatingPointRoundingRule">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.FloatingPointRoundingRule" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.FloatingPointRoundingRule" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.FloatingPointSign">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.FloatingPointSign" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.FloatingPointSign" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.MemoryLayout">
                  <property>
                     <name>alignment</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>size</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>stride</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>alignment</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="ofValue: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>offset</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Swift.PartialKeyPath(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>size</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="ofValue: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>stride</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="ofValue: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Mirror.AncestorRepresentation">
               </Enum>
               <Enum name="Swift.Mirror.DisplayStyle">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Mirror.DisplayStyle" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Mirror.DisplayStyle" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Never">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Never" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Never" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Never" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Never" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Optional">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>unsafelyUnwrapped</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>flatMap</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>map</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Enum>
               <Enum name="Swift.Result">
                  <func>
                     <name>flatMap</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Result(???, ???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>flatMapError</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Result(Self, ???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>get</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>map</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Result(???, ???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>mapError</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Result(Self, ???)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Unicode">
               </Enum>
               <Enum name="Swift.Unicode.ASCII">
                  <property>
                     <name>encodedReplacementCharacter</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>decode</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Unicode.Scalar</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.CollectionOfOne(Swift.UInt8)?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>transcode</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.CollectionOfOne(Swift.UInt8)?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Self.EncodedScalar" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.GeneralCategory">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Unicode.GeneralCategory" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Unicode.GeneralCategory" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.NumericType">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Unicode.NumericType" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Unicode.NumericType" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.ParseResult">
               </Enum>
               <Enum name="Swift.Unicode.UTF16">
                  <func>
                     <name>decode</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnicodeDecodingResult</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="into: Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isLeadSurrogate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isTrailSurrogate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>leadSurrogate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>trailSurrogate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>transcodedLength</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>(count: Int, isASCII: Bool)?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="decodedAs: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="repairingIllFormedSequences: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>width</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.UTF32">
                  <property>
                     <name>encodedReplacementCharacter</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Unicode.UTF32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Unicode.UTF32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decode</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnicodeDecodingResult</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Unicode.Scalar</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="into: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.UTF8">
                  <func>
                     <name>decode</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnicodeDecodingResult</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="into: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isContinuation</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Enum>
               <Enum name="Swift.UnicodeDecodingResult">
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UnicodeDecodingResult" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UnicodeDecodingResult" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
            </innerenums>
         </typedeclaration>
         <typedeclaration kind="protocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerprotocols>
               <Protocol name="Swift.AdditiveArithmetic">
                  <func>
                     <name>+</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>zero</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.BidirectionalCollection">
                  <func>
                     <name>distance</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="to: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="before: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Index</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="before: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Index?</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="offsetBy: Int" type="Named" isVariadic="False"/>
                           <parameter publicName="limitedBy: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Index</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="offsetBy: Int" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.BinaryFloatingPoint">
                  <func>
                     <name>binade</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>exponentBitCount</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>exponentBitPattern</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.RawExponent</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>significandBitCount</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>significandBitPattern</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.RawSignificand</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>significandWidth</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.BinaryInteger">
                  <func>
                     <name>%</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>%=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;&lt;</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;&lt;=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;&gt;</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;&gt;=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>^=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>bitWidth</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isMultiple</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isSigned</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>quotientAndRemainder</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(quotient: Self, remainder: Self)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>signum</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>trailingZeroBitCount</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>words</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Words</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>|</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>|=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>~</name>
                     <operatorKind>Prefix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.CVarArg">
               </Protocol>
               <Protocol name="Swift.CaseIterable">
                  <func>
                     <name>allCases</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self.AllCases</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.CodingKey">
                  <func>
                     <name>intValue</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int?</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>stringValue</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.Collection">
                  <func>
                     <name>count</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>distance</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="to: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>endIndex</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Index</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Index?</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="offsetBy: Int" type="Named" isVariadic="False"/>
                           <parameter publicName="limitedBy: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Index</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="offsetBy: Int" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Index</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>indices</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Indices</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isEmpty</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>startIndex</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Index</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subscript</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.SubSequence</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.Comparable">
                  <func>
                     <name>&lt;</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.CustomDebugStringConvertible">
                  <func>
                     <name>debugDescription</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.CustomLeafReflectable">
               </Protocol>
               <Protocol name="Swift.CustomPlaygroundDisplayConvertible">
                  <func>
                     <name>playgroundDescription</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Any</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.CustomReflectable">
                  <func>
                     <name>customMirror</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Mirror</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.CustomStringConvertible">
                  <func>
                     <name>description</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.Decodable">
               </Protocol>
               <Protocol name="Swift.Decoder">
                  <func>
                     <name>codingPath</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Swift.CodingKey)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>container</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.KeyedDecodingContainer(???)</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>singleValueContainer</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.SingleValueDecodingContainer</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>unkeyedContainer</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnkeyedDecodingContainer</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>userInfo</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Dictionary(Swift.CodingUserInfoKey, Swift.Any)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.Encodable">
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.Encoder">
                  <func>
                     <name>codingPath</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Swift.CodingKey)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>container</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.KeyedEncodingContainer(???)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>singleValueContainer</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.SingleValueEncodingContainer</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>unkeyedContainer</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnkeyedEncodingContainer</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>userInfo</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Dictionary(Swift.CodingUserInfoKey, Swift.Any)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.Equatable">
                  <func>
                     <name>==</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.Error">
               </Protocol>
               <Protocol name="Swift.ExpressibleByArrayLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByBooleanLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByDictionaryLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByExtendedGraphemeClusterLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByFloatLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByIntegerLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByNilLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByStringInterpolation">
               </Protocol>
               <Protocol name="Swift.ExpressibleByStringLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByUnicodeScalarLiteral">
               </Protocol>
               <Protocol name="Swift.FixedWidthInteger">
                  <func>
                     <name>&amp;&lt;&lt;</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&lt;&lt;=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&amp;&gt;&gt;=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addingReportingOverflow</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Self, overflow: Bool)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Self" type="Named" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>bigEndian</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>bitWidth</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>byteSwapped</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>dividedReportingOverflow</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Self, overflow: Bool)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dividingFullWidth</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(quotient: Self, remainder: Self)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Self low: Self.Magnitude)" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>leadingZeroBitCount</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>littleEndian</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>max</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>min</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>multipliedFullWidth</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(high: Self, low: Self.Magnitude)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>multipliedReportingOverflow</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Self, overflow: Bool)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>nonzeroBitCount</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>remainderReportingOverflow</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Self, overflow: Bool)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>subtractingReportingOverflow</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>(partialValue: Self, overflow: Bool)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Self" type="Named" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.FloatingPoint">
                  <func>
                     <name>/</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addProduct</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addingProduct</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>exponent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Exponent</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>floatingPointClass</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.FloatingPointClassification</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formRemainder</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formSquareRoot</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formTruncatingRemainder</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>greatestFiniteMagnitude</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>infinity</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isCanonical</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isEqual</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isFinite</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isInfinite</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isLess</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="than: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isLessThanOrEqualTo</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isNaN</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isNormal</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isSignalingNaN</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isSubnormal</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isTotallyOrdered</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="belowOrEqualTo: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isZero</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>leastNonzeroMagnitude</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>leastNormalMagnitude</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>maximum</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>maximumMagnitude</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>minimum</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>minimumMagnitude</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>nan</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>nextDown</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>nextUp</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>pi</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>radix</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>remainder</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>round</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>rounded</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>sign</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.FloatingPointSign</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>signalingNaN</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>significand</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>squareRoot</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>truncatingRemainder</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>ulp</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>ulpOfOne</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.Hashable">
                  <func>
                     <name>hash</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hashValue</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.Identifiable">
                  <func>
                     <name>id</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.ID</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.IteratorProtocol">
                  <func>
                     <name>next</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element?</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.KeyedDecodingContainerProtocol">
                  <func>
                     <name>allKeys</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Self.Key)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>codingPath</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Swift.CodingKey)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>contains</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.String" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta " type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int8</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int64" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int64" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt64" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt64?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt64" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt8?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt16?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.String" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta " type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int8?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt32?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int16?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int32?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int64?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int64" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt8?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt16?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int16?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt32?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>decodeNil</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>nestedContainer</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.KeyedDecodingContainer(???)</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>nestedUnkeyedContainer</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnkeyedDecodingContainer</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>superDecoder</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Decoder</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>superDecoder</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Decoder</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.KeyedEncodingContainerProtocol">
                  <func>
                     <name>codingPath</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Swift.CodingKey)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int64" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Bool" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Double" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Float" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Int" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": UInt" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": ???" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": UInt" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt64" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": ???" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeConditional</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": ???" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt32?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt64?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int64?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt16?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Bool?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Double?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Float?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Int?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": UInt?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": ????" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int8?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int16?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int32?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int64?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt8?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt16?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt32?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encodeNil</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>nestedContainer</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.KeyedEncodingContainer(???)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>nestedUnkeyedContainer</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnkeyedEncodingContainer</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>superEncoder</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Encoder</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>superEncoder</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Encoder</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.LazyCollectionProtocol">
               </Protocol>
               <Protocol name="Swift.LazySequenceProtocol">
                  <func>
                     <name>elements</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Elements</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.LosslessStringConvertible">
               </Protocol>
               <Protocol name="Swift.MirrorPath">
               </Protocol>
               <Protocol name="Swift.MutableCollection">
                  <func>
                     <name>partition</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Index</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Self.Element -> Bool" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>subscript</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.SubSequence</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>subscript</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.SubSequence" type="Named" isVariadic="False"/>
                           <parameter publicName="a: Swift.Range(Self.Index)" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>subscript</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subscript</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Element" type="Named" isVariadic="False"/>
                           <parameter publicName="a: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>swapAt</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withContiguousMutableStorageIfAvailable</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Element" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.Numeric">
                  <func>
                     <name>*</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>magnitude</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Magnitude</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.OptionSet">
               </Protocol>
               <Protocol name="Swift.RandomAccessCollection">
                  <func>
                     <name>distance</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="to: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Index?</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="offsetBy: Int" type="Named" isVariadic="False"/>
                           <parameter publicName="limitedBy: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Index</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="offsetBy: Int" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.RandomNumberGenerator">
                  <func>
                     <name>next</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.RangeExpression">
                  <func>
                     <name>contains</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>relative</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Range(Self.Bound)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.RangeReplaceableCollection">
                  <func>
                     <name>remove</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="at: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>removeAll</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keepingCapacity: Bool" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>removeAll</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="where: Self.Element -> Bool" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>removeFirst</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>removeFirst</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>removeSubrange</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>reserveCapacity</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.RawRepresentable">
                  <func>
                     <name>rawValue</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.RawValue</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.SIMD">
               </Protocol>
               <Protocol name="Swift.SIMDScalar">
               </Protocol>
               <Protocol name="Swift.SIMDStorage">
                  <func>
                     <name>scalarCount</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subscript</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Scalar</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subscript</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Scalar" type="Named" isVariadic="False"/>
                           <parameter publicName="a: Int" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.Sequence">
                  <func>
                     <name>makeIterator</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Iterator</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>underestimatedCount</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withContiguousStorageIfAvailable</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Element" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.SetAlgebra">
                  <func>
                     <name>contains</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formIntersection</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>intersection</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isDisjoint</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="with: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isEmpty</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isSubset</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isSuperset</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remove</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Element?</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subtract</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subtracting</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.SignedInteger">
               </Protocol>
               <Protocol name="Swift.SignedNumeric">
                  <func>
                     <name>-</name>
                     <operatorKind>Prefix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>negate</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.SingleValueDecodingContainer">
                  <func>
                     <name>codingPath</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Swift.CodingKey)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int8</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeNil</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.SingleValueEncodingContainer">
                  <func>
                     <name>codingPath</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Swift.CodingKey)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encodeNil</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.Strideable">
                  <func>
                     <name>advanced</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Self.Stride" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>distance</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Stride</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.StringInterpolationProtocol">
                  <func>
                     <name>appendLiteral</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.StringProtocol">
                  <func>
                     <name>hasPrefix</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>hasSuffix</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>lowercased</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>unicodeScalars</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.UnicodeScalarView</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>uppercased</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>utf16</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.UTF16View</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>utf8</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.UTF8View</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withCString</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="encodedAs: Meta " type="Named" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafePointer(???B1.CodeUnit) -> ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withCString</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withCString</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="encodedAs: Meta " type="Named" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafePointer(???B1.CodeUnit) -> ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.TextOutputStream">
                  <func>
                     <name>write</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.TextOutputStreamable">
                  <func>
                     <name>write</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.UnicodeCodec">
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnicodeDecodingResult</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Unicode.Scalar" type="Named" isVariadic="False"/>
                           <parameter publicName="into: Self.CodeUnit" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.UnkeyedDecodingContainer">
                  <func>
                     <name>codingPath</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Swift.CodingKey)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>count</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int?</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>currentIndex</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int8</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int32</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int64</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int16</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt16</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt64?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt8?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt16?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>????</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int8?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt32?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int16?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int32?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int64?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt8?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt16?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Int16?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeIfPresent</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt32?</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>decodeNil</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isAtEnd</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>nestedContainer</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.KeyedDecodingContainer(???)</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>nestedUnkeyedContainer</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnkeyedDecodingContainer</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>superDecoder</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Decoder</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.UnkeyedEncodingContainer">
                  <func>
                     <name>codingPath</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Swift.CodingKey)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>count</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encodeConditional</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encodeNil</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>nestedContainer</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.KeyedEncodingContainer(???)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>nestedUnkeyedContainer</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UnkeyedEncodingContainer</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>superEncoder</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Encoder</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Swift.UnsignedInteger">
               </Protocol>
            </innerprotocols>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftCoreGraphics" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="CoreGraphics.CGAffineTransform">
               </Struct>
               <Struct name="CoreGraphics.CGFloat">
                  <property>
                     <name>binade</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>bitPattern</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>exponent</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>exponentBitCount</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>exponentBitPattern</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>floatingPointClass</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>greatestFiniteMagnitude</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>infinity</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isCanonical</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isFinite</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isInfinite</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isNaN</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isNormal</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSignaling</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSignalingNaN</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSubnormal</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isZero</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leastNonzeroMagnitude</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>leastNormalMagnitude</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>magnitude</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>max</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>min</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nan</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>native</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nextUp</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>pi</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>quietNaN</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>sign</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>signalingNaN</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significand</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significandBitCount</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significandBitPattern</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>significandWidth</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ulp</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>CoreGraphics.CGFloat</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>*=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>CoreGraphics.CGFloat</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>CoreGraphics.CGFloat</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>CoreGraphics.CGFloat</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addProduct</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>advanced</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>CoreGraphics.CGFloat</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>CoreGraphics.CGFloat</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formRemainder</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formSquareRoot</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formTruncatingRemainder</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isEqual</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isLess</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="than: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isLessThanOrEqualTo</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>negate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>round</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="CoreGraphics.CGPoint">
               </Struct>
               <Struct name="CoreGraphics.CGRect">
               </Struct>
               <Struct name="CoreGraphics.CGSize">
               </Struct>
               <Struct name="CoreGraphics.CGVector">
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="CoreGraphics.CGPathFillRule">
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftOSLogTestHelper" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="OSLogTestHelper.OSLogArguments">
                  <property>
                     <name>argumentClosures</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>append</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="OSLogTestHelper.OSLogIntegerFormatting">
                  <property>
                     <name>decimal</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>explicitPositiveSign</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hex</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>includePrefix</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>minDigits</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>octal</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>radix</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>uppercase</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>decimal</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>OSLogTestHelper.OSLogIntegerFormatting</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="explicitPositiveSign: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formatSpecifier</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="align: OSLogTestHelper.OSLogStringAlignment" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formatSpecifierLengthModifier</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.String?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>hex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>OSLogTestHelper.OSLogIntegerFormatting</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="explicitPositiveSign: Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="includePrefix: Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="uppercase: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>octal</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>OSLogTestHelper.OSLogIntegerFormatting</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="explicitPositiveSign: Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="includePrefix: Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="uppercase: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="OSLogTestHelper.OSLogInterpolation">
                  <property>
                     <name>argumentCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>arguments</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>formatString</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>preamble</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>totalBytesForSerializingArguments</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>addDoubleHeaders</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>addIntHeaders</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addNSObjectHeaders</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>addStringHeaders</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>appendInteger</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": () -> Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="format: OSLogTestHelper.OSLogIntegerFormatting" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="align: OSLogTestHelper.OSLogStringAlignment" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>appendLiteral</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>appendPrecisionArgument</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>getArgumentHeader</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="type: OSLogTestHelper.OSLogInterpolation.ArgumentType" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>getArugmentFlag</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>OSLogTestHelper.OSLogInterpolation.ArgumentFlag</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>getDoubleFormatSpecifier</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>getNSObjectFormatSpecifier</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>getStringFormatSpecifier</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="OSLogTestHelper.OSLogStringAlignment" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>getUpdatedPreamble</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt8</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="isScalar: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="OSLogTestHelper.OSLogMessage">
                  <property>
                     <name>bufferSize</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>interpolation</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="OSLogTestHelper.OSLogStringAlignment">
                  <property>
                     <name>anchor</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>left</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>minimumColumnWidth</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>none</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>right</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="OSLogTestHelper.OSLogCollectionBound">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="OSLogTestHelper.OSLogCollectionBound" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="OSLogTestHelper.OSLogCollectionBound" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="OSLogTestHelper.OSLogInterpolation.ArgumentFlag">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="OSLogTestHelper.OSLogInterpolation.ArgumentFlag" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="OSLogTestHelper.OSLogInterpolation.ArgumentFlag" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="OSLogTestHelper.OSLogInterpolation.ArgumentType">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="OSLogTestHelper.OSLogInterpolation.ArgumentType" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="OSLogTestHelper.OSLogInterpolation.ArgumentType" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="OSLogTestHelper.OSLogInterpolation.PreambleBitMask">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="OSLogTestHelper.OSLogInterpolation.PreambleBitMask" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="OSLogTestHelper.OSLogInterpolation.PreambleBitMask" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="OSLogTestHelper.OSLogPrivacy">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftStdlibUnittestFoundationExtras" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftRemoteMirror" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftCoreFoundation" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftReflectionTest" swiftVersion="??">
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="SwiftReflectionTest.InstanceKind">
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftDarwin" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="Darwin.DarwinBoolean">
                  <property>
                     <name>boolValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Darwin.DarwinBoolean" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Darwin.DarwinBoolean" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="Darwin.MachErrorCode">
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Enum>
               <Enum name="Darwin.POSIXErrorCode">
                  <property>
                     <name>ELAST</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EWOULDBLOCK</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftStdlibUnittest" swiftVersion="??">
         <typedeclaration kind="class" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerclasses>
               <Class name="StdlibUnittest.Box">
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Class>
               <Class name="StdlibUnittest.GenericMinimalHashableClass">
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>identity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.GenericMinimalHashableClass(???)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.GenericMinimalHashableClass(???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Class>
               <Class name="StdlibUnittest.LifetimeTracked">
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>identity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>instances</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>serialNumber</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.LifetimeTracked" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.LifetimeTracked" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>advanced</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>StdlibUnittest.LifetimeTracked</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: StdlibUnittest.LifetimeTracked" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Class>
               <Class name="StdlibUnittest.MinimalHashableClass">
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>equalImpl</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashIntoImpl</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>identity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timesEqualEqualWasCalled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timesHashIntoWasCalled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.MinimalHashableClass" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.MinimalHashableClass" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Class>
               <Class name="StdlibUnittest.ResettableValue">
                  <property>
                     <name>defaultValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>reset</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Class>
               <Class name="StdlibUnittest.TestSuite">
                  <func>
                     <name>setUp</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>tearDown</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Class>
               <Class name="StdlibUnittest.TypeIndexed">
                  <func>
                     <name>reset</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Class>
            </innerclasses>
         </typedeclaration>
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="StdlibUnittest.AssertionResult">
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>withDescription</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>StdlibUnittest.AssertionResult</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.CustomPrintableValue">
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescriptionImpl</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>descriptionImpl</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>identity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timesDebugDescriptionWasCalled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timesDescriptionWasCalled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>advanced</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>StdlibUnittest.CustomPrintableValue</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: StdlibUnittest.CustomPrintableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.GenericMinimalHashableValue">
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>identity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.GenericMinimalHashableValue(???)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.GenericMinimalHashableValue(???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.LinearCongruentialGenerator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt64</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.MinimalComparableValue">
                  <property>
                     <name>equalImpl</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>identity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lessImpl</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timesEqualEqualWasCalled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timesLessWasCalled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.MinimalComparableValue" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.MinimalComparableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.MinimalComparableValue" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.MinimalComparableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.MinimalEquatableValue">
                  <property>
                     <name>equalImpl</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>identity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timesEqualEqualWasCalled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.MinimalEquatableValue" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.MinimalEquatableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.MinimalHashableValue">
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>equalImpl</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashIntoImpl</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>identity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timesEqualEqualWasCalled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timesHashIntoWasCalled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.MinimalHashableValue" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.MinimalHashableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.MinimalStrideableValue">
                  <property>
                     <name>equalImpl</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>identity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lessImpl</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timesAdvancedWasCalled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timesDistanceWasCalled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timesEqualEqualWasCalled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timesLessWasCalled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>advanced</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>StdlibUnittest.MinimalStrideableValue</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.Observation1UInt">
                  <property>
                     <name>data1</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="StdlibUnittest.Observation3Int">
                  <property>
                     <name>data1</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data2</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data3</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="StdlibUnittest.Observation4Int">
                  <property>
                     <name>data1</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data2</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data3</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data4</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="StdlibUnittest.Observation4UInt">
                  <property>
                     <name>data1</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data2</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data3</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data4</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="StdlibUnittest.Observation5Int">
                  <property>
                     <name>data1</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data2</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data3</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data4</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data5</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="StdlibUnittest.Observation9Int">
                  <property>
                     <name>data1</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data2</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data3</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data4</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data5</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data6</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data7</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data8</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data9</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="StdlibUnittest.OpaqueValue">
                  <property>
                     <name>identity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="StdlibUnittest.SourceLoc">
                  <property>
                     <name>comment</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>file</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>line</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>withCurrentLoc</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>StdlibUnittest.SourceLocStack</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="line: UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.SourceLocStack">
                  <func>
                     <name>print</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>pushIf</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>StdlibUnittest.SourceLocStack</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="file: Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="line: UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>with</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>StdlibUnittest.SourceLocStack</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withCurrentLoc</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>StdlibUnittest.SourceLocStack</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="file: Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="line: UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.TypeIdentifier">
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="StdlibUnittest.ExpectedComparisonResult">
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.ExpectedComparisonResult" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.ExpectedComparisonResult" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>flip</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>StdlibUnittest.ExpectedComparisonResult</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isEQ</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isGE</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isGT</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isLE</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isLT</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isNE</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Enum>
               <Enum name="StdlibUnittest.OSVersion">
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Enum>
               <Enum name="StdlibUnittest.RaceTestObservationEvaluation">
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Enum>
               <Enum name="StdlibUnittest.SwiftRuntime">
                  <func>
                     <name>metadataKind</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="StdlibUnittest.TestRunPredicate">
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>evaluate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Enum>
            </innerenums>
         </typedeclaration>
         <typedeclaration kind="protocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerprotocols>
               <Protocol name="StdlibUnittest.RaceTestWithPerTrialData">
                  <func>
                     <name>evaluateObservations</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Array(Self.Observation)" type="Named" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.RaceTestObservationEvaluation" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>makeRaceData</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.RaceData</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>makeThreadLocalData</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.ThreadLocalData</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>thread1</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Observation</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.RaceData" type="Named" isVariadic="False"/>
                           <parameter publicName="Self.ThreadLocalData" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
            </innerprotocols>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftPrivateLibcExtras" swiftVersion="??">
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="SwiftPrivateLibcExtras.ProcessTerminationStatus">
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftDifferentiationUnittest" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="DifferentiationUnittest.Tracked">
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
            </innerstructs>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftRuntimeUnittest" swiftVersion="??">
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="RuntimeUnittest.SwiftRuntimeUnitTest">
                  <func>
                     <name>testExclusivityBogusPC</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>testExclusivityNonNestedPC</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>testExclusivityNullPC</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>testExclusivityPCOne</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftPrivateThreadExtras" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswift_Differentiation" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="Swift.Array">
               </Struct>
               <Struct name="Swift.Double">
               </Struct>
               <Struct name="Swift.Float">
               </Struct>
               <Struct name="Swift.Float16">
               </Struct>
            </innerstructs>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftPrivate" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftFoundation" swiftVersion="??">
         <typedeclaration kind="class" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerclasses>
               <Class name="Foundation.Data.RangeReference">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lowerBound</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>range</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>upperBound</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Class>
               <Class name="Foundation.JSONDecoder">
                  <property>
                     <name>dataDecodingStrategy</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>dateDecodingStrategy</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>keyDecodingStrategy</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nonConformingFloatDecodingStrategy</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userInfo</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>decode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Foundation.Data" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Class>
               <Class name="Foundation.JSONEncoder">
                  <property>
                     <name>dataEncodingStrategy</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>dateEncodingStrategy</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>keyEncodingStrategy</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nonConformingFloatEncodingStrategy</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>outputFormatting</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userInfo</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.Data</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Class>
               <Class name="Foundation.NSKeyValueObservation">
                  <func>
                     <name>invalidate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Class>
               <Class name="Foundation.NSURL">
               </Class>
               <Class name="Foundation.PropertyListDecoder">
                  <property>
                     <name>userInfo</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Class>
               <Class name="Foundation.PropertyListEncoder">
                  <property>
                     <name>userInfo</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.Data</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Class>
            </innerclasses>
         </typedeclaration>
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="CoreGraphics.CGAffineTransform">
               </Struct>
               <Struct name="CoreGraphics.CGFloat">
               </Struct>
               <Struct name="CoreGraphics.CGPoint">
               </Struct>
               <Struct name="CoreGraphics.CGRect">
               </Struct>
               <Struct name="CoreGraphics.CGSize">
               </Struct>
               <Struct name="CoreGraphics.CGVector">
               </Struct>
               <Struct name="Dispatch.DispatchData">
               </Struct>
               <Struct name="Dispatch.DispatchData">
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>regions</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>withUnsafeBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Foundation.Calendar">
                  <property>
                     <name>amSymbol</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>autoupdatingCurrent</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>current</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>eraSymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>firstWeekday</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>identifier</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>locale</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>longEraSymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>minimumDaysInFirstWeek</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>monthSymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>pmSymbol</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>quarterSymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>shortMonthSymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>shortQuarterSymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>shortStandaloneMonthSymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>shortStandaloneQuarterSymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>shortStandaloneWeekdaySymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>shortWeekdaySymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>standaloneMonthSymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>standaloneQuarterSymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>standaloneWeekdaySymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timeZone</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>veryShortMonthSymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>veryShortStandaloneMonthSymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>veryShortStandaloneWeekdaySymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>veryShortWeekdaySymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>weekdaySymbols</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Calendar" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Calendar" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>compare</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.NSComparisonResult</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="toGranularity: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>component</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>components</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.DateComponents</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Foundation.TimeZone" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>date</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.Date?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="bySettingHour: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="minute: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="second: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="of: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="matchingPolicy: Foundation.Calendar.MatchingPolicy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="repeatedTimePolicy: Foundation.Calendar.RepeatedTimePolicy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="direction: Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dateComponents</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.DateComponents</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Foundation.TimeZone" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dateInterval</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.DateInterval?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>dateIntervalOfWeekend</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="containing: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="start: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="interval: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>enumerateDates</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="startingAfter: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="matching: Foundation.DateComponents" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="matchingPolicy: Foundation.Calendar.MatchingPolicy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="repeatedTimePolicy: Foundation.Calendar.RepeatedTimePolicy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="direction: Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="using: (Foundation.Date? Bool Bool)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>getEra</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="yearForWeekOfYear: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="weekOfYear: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="weekday: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>getHour</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="minute: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="second: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="nanosecond: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isDate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="inSameDayAs: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isDateInToday</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isDateInTomorrow</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isDateInWeekend</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isDateInYesterday</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>maximumRange</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Range(Int)?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>minimumRange</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Range(Int)?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>nextWeekend</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="startingAfter: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="start: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="interval: Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="direction: Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>ordinality</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="in: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>startOfDay</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.Date</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.CharacterSet">
                  <property>
                     <name>alphanumerics</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>bitmapRepresentation</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>capitalizedLetters</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>controlCharacters</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>decimalDigits</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>decomposables</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>illegalCharacters</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>inverted</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>letters</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lowercaseLetters</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>newlines</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nonBaseCharacters</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>punctuation</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>punctuationCharacters</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>symbols</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>uppercaseLetters</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>urlFragmentAllowed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>urlHostAllowed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>urlPasswordAllowed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>urlPathAllowed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>urlQueryAllowed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>urlUserAllowed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>whitespaces</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>whitespacesAndNewlines</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.CharacterSet" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.CharacterSet" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>contains</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formIntersection</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formSymmetricDifference</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formUnion</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>hasMember</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="inPlane: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>insert</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="charactersIn: Swift.ClosedRange(Swift.Unicode.Scalar)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>intersection</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.CharacterSet</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>invert</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>isSuperset</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Foundation.CharacterSet" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remove</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="charactersIn: Swift.ClosedRange(Swift.Unicode.Scalar)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>subtract</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>subtracting</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.CharacterSet</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>symmetricDifference</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.CharacterSet</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>union</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.CharacterSet</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>update</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Unicode.Scalar?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="with: Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.CocoaError">
                  <property>
                     <name>coderInvalidValue</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>coderReadCorrupt</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>coderReadCorruptError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>coderValueNotFound</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>coderValueNotFoundError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>errorDomain</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableArchitectureMismatch</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableArchitectureMismatchError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableLink</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableLinkError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableLoad</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableLoadError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableNotLoadable</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableNotLoadableError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableRuntimeMismatch</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableRuntimeMismatchError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>featureUnsupported</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>featureUnsupportedError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileLocking</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileLockingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileManagerUnmountBusy</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileManagerUnmountBusyError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileManagerUnmountUnknown</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileManagerUnmountUnknownError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileNoSuchFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileNoSuchFileError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>filePath</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadCorruptFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadCorruptFileError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadInapplicableStringEncoding</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadInapplicableStringEncodingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadInvalidFileName</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadInvalidFileNameError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadNoPermission</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadNoPermissionError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadNoSuchFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadNoSuchFileError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadTooLarge</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadTooLargeError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadUnknown</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadUnknownError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadUnknownStringEncoding</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadUnknownStringEncodingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadUnsupportedScheme</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadUnsupportedSchemeError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteFileExists</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteFileExistsError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteInapplicableStringEncoding</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteInapplicableStringEncodingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteInvalidFileName</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteInvalidFileNameError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteNoPermission</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteNoPermissionError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteOutOfSpace</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteOutOfSpaceError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteUnknown</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteUnknownError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteUnsupportedScheme</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteUnsupportedSchemeError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteVolumeReadOnly</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteVolumeReadOnlyError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>formatting</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>formattingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isCoderError</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isExecutableError</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isFileError</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isFormattingError</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isPropertyListError</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isUbiquitousFileError</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isUserActivityError</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isValidationError</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isXPCConnectionError</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>keyValueValidation</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>keyValueValidationError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListReadCorrupt</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListReadCorruptError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListReadStream</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListReadStreamError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListReadUnknownVersion</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListReadUnknownVersionError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListWriteInvalid</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListWriteInvalidError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListWriteStream</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListWriteStreamError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>stringEncoding</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousFileNotUploadedDueToQuota</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousFileNotUploadedDueToQuotaError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousFileUbiquityServerNotAvailable</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousFileUnavailable</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousFileUnavailableError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>underlying</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>url</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityConnectionUnavailable</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityConnectionUnavailableError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityHandoffFailed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityHandoffFailedError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityHandoffUserInfoTooLarge</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityHandoffUserInfoTooLargeError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityRemoteApplicationTimedOut</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityRemoteApplicationTimedOutError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userCancelled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userCancelledError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>xpcConnectionInterrupted</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>xpcConnectionInvalid</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>xpcConnectionReplyInvalid</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>error</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Error</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Foundation.CocoaError.Code" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="userInfo: Swift.Dictionary(Swift.AnyHashable Swift.Any)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="url: Foundation.URL?" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.CocoaError.Code">
                  <property>
                     <name>CoderReadCorruptError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>CoderValueNotFoundError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ExecutableArchitectureMismatchError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ExecutableLinkError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ExecutableLoadError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ExecutableNotLoadableError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ExecutableRuntimeMismatchError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FeatureUnsupportedError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileLockingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileManagerUnmountBusyError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileManagerUnmountUnknownError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileNoSuchFileError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileReadCorruptFileError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileReadInapplicableStringEncodingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileReadInvalidFileNameError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileReadNoPermissionError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileReadNoSuchFileError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileReadTooLargeError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileReadUnknownError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileReadUnknownStringEncodingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileReadUnsupportedSchemeError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileWriteFileExistsError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileWriteInapplicableStringEncodingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileWriteInvalidFileNameError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileWriteNoPermissionError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileWriteOutOfSpaceError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileWriteUnknownError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileWriteUnsupportedSchemeError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileWriteVolumeReadOnlyError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FormattingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>KeyValueValidationError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>PropertyListReadCorruptError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>PropertyListReadStreamError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>PropertyListReadUnknownVersionError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>PropertyListWriteInvalidError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>PropertyListWriteStreamError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>UbiquitousFileNotUploadedDueToQuotaError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>UbiquitousFileUbiquityServerNotAvailable</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>UbiquitousFileUnavailableError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>UserActivityConnectionUnavailableError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>UserActivityHandoffFailedError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>UserActivityHandoffUserInfoTooLargeError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>UserActivityRemoteApplicationTimedOutError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>UserCancelledError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>XPCConnectionInterrupted</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>XPCConnectionInvalid</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>XPCConnectionReplyInvalid</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>coderInvalidValue</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>coderReadCorrupt</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>coderReadCorruptError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>coderValueNotFound</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>coderValueNotFoundError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableArchitectureMismatch</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableArchitectureMismatchError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableLink</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableLinkError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableLoad</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableLoadError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableNotLoadable</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableNotLoadableError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableRuntimeMismatch</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>executableRuntimeMismatchError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>featureUnsupported</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>featureUnsupportedError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileLocking</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileLockingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileManagerUnmountBusy</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileManagerUnmountBusyError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileManagerUnmountUnknown</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileManagerUnmountUnknownError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileNoSuchFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileNoSuchFileError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadCorruptFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadCorruptFileError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadInapplicableStringEncoding</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadInapplicableStringEncodingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadInvalidFileName</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadInvalidFileNameError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadNoPermission</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadNoPermissionError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadNoSuchFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadNoSuchFileError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadTooLarge</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadTooLargeError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadUnknown</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadUnknownError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadUnknownStringEncoding</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadUnknownStringEncodingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadUnsupportedScheme</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileReadUnsupportedSchemeError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteFileExists</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteFileExistsError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteInapplicableStringEncoding</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteInapplicableStringEncodingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteInvalidFileName</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteInvalidFileNameError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteNoPermission</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteNoPermissionError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteOutOfSpace</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteOutOfSpaceError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteUnknown</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteUnknownError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteUnsupportedScheme</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteUnsupportedSchemeError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteVolumeReadOnly</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileWriteVolumeReadOnlyError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>formatting</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>formattingError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>keyValueValidation</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>keyValueValidationError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListReadCorrupt</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListReadCorruptError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListReadStream</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListReadStreamError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListReadUnknownVersion</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListReadUnknownVersionError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListWriteInvalid</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListWriteInvalidError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListWriteStream</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>propertyListWriteStreamError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousFileNotUploadedDueToQuota</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousFileNotUploadedDueToQuotaError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousFileUbiquityServerNotAvailable</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousFileUnavailable</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousFileUnavailableError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityConnectionUnavailable</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityConnectionUnavailableError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityHandoffFailed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityHandoffFailedError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityHandoffUserInfoTooLarge</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityHandoffUserInfoTooLargeError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityRemoteApplicationTimedOut</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userActivityRemoteApplicationTimedOutError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userCancelled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userCancelledError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>xpcConnectionInterrupted</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>xpcConnectionInvalid</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>xpcConnectionReplyInvalid</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Foundation.Data">
                  <property>
                     <name>bytes</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>indices</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>length</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>mutableBytes</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>regions</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Data" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Data" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>advanced</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.Data</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>append</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Swift.Array(Swift.UInt8)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>copyBytes</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableBufferPointer(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Swift.Range(Int)?" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>enumerateBytes</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UnsafeBufferPointer(Swift.UInt8)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.Data.Iterator</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>replaceSubrange</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Swift.UnsafeRawPointer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>reserveCapacity</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>resetBytes</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>subdata</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.Data</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeMutableBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.Data.InlineData">
                  <property>
                     <name>bytes</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>capacity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>length</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>append</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>canStore</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>copyBytes</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableRawPointer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>replaceSubrange</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Swift.UnsafeRawPointer?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>resetBytes</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withUnsafeMutableBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Foundation.Data.InlineSlice">
                  <property>
                     <name>capacity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>range</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>slice</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>append</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>canStore</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>copyBytes</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableRawPointer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>ensureUniqueReference</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>replaceSubrange</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Swift.UnsafeRawPointer?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>reserveCapacity</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>resetBytes</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withUnsafeMutableBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Foundation.Data.Iterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.UInt8?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Foundation.Data.LargeSlice">
                  <property>
                     <name>capacity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>range</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>slice</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>append</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>copyBytes</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableRawPointer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>ensureUniqueReference</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>replaceSubrange</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Swift.UnsafeRawPointer?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>reserveCapacity</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>resetBytes</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>withUnsafeBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withUnsafeMutableBytes</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Foundation.Date">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>distantFuture</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>distantPast</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timeIntervalBetween1970AndReferenceDate</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timeIntervalSince1970</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timeIntervalSinceNow</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timeIntervalSinceReferenceDate</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timeIntervalSinceReferenceDate</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Foundation.Date</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Foundation.Date</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addTimeInterval</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>addingTimeInterval</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.Date</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>advanced</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.Date</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>compare</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.NSComparisonResult</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>description</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="with: Foundation.Locale?" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>distance</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Double</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>timeIntervalSince</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Double</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Foundation.DateComponents">
                  <property>
                     <name>calendar</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>date</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>day</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>era</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hour</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isLeapMonth</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isValidDate</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>minute</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>month</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nanosecond</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>quarter</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>second</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timeZone</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>weekOfMonth</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>weekOfYear</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>weekday</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>weekdayOrdinal</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>year</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>yearForWeekOfYear</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.DateComponents" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.DateComponents" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isValidDate</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Foundation.Calendar" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>setValue</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Int?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="for: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>value</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.DateInterval">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>duration</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>end</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>start</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.DateInterval" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.DateInterval" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.DateInterval" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.DateInterval" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>compare</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.NSComparisonResult</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>contains</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>intersection</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.DateInterval?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="with: Foundation.DateInterval" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>intersects</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Foundation.ErrorUserInfoKey">
                  <property>
                     <name>NSURLErrorKey</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>filePathErrorKey</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>helpAnchorErrorKey</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>localizedDescriptionKey</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>localizedFailureReasonErrorKey</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>localizedRecoveryOptionsErrorKey</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>localizedRecoverySuggestionErrorKey</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>recoveryAttempterErrorKey</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>stringEncodingErrorKey</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>underlyingErrorKey</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Foundation.IndexPath">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Foundation.IndexPath</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>append</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>appending</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.IndexPath</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>compare</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.NSComparisonResult</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>dropLast</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.IndexPath</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.IndexingIterator(Foundation.IndexPath)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Foundation.IndexSet">
                  <property>
                     <name>count</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>first</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isEmpty</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>last</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rangeView</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexSet" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexSet" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>contains</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="integersIn: Foundation.IndexSet" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>count</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>filteredIndexSet</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.IndexSet</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="includeInteger: Int -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formIndex</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>formIntersection</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formSymmetricDifference</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>formUnion</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.IndexSet.Index</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>indexRange</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Range(Foundation.IndexSet.Index)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>insert</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="integersIn: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>integerGreaterThan</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>integerGreaterThanOrEqualTo</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>integerLessThan</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>integerLessThanOrEqualTo</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>intersection</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.IndexSet</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>intersects</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="integersIn: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.IndexingIterator(Foundation.IndexSet)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>rangeView</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.IndexSet.RangeView</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>remove</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="integersIn: Swift.ClosedRange(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>removeAll</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>shift</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="startingAt: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>symmetricDifference</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.IndexSet</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>union</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.IndexSet</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>update</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="with: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.IndexSet.Index">
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&gt;=</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.IndexSet.RangeView">
                  <property>
                     <name>endIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>startIndex</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexSet.RangeView" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexSet.RangeView" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>index</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>makeIterator</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.IndexingIterator(Foundation.IndexSet.RangeView)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Foundation.JSONEncoder.OutputFormatting">
                  <property>
                     <name>prettyPrinted</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>sortedKeys</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>withoutEscapingSlashes</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Foundation.Locale">
                  <property>
                     <name>alternateQuotationBeginDelimiter</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>alternateQuotationEndDelimiter</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>autoupdatingCurrent</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>availableIdentifiers</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>availableLocaleIdentifiers</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>calendar</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>collationIdentifier</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>collatorIdentifier</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>commonISOCurrencyCodes</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>countryCode</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>currencyCode</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>currencySymbol</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>current</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>decimalSeparator</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>exemplarCharacterSet</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>groupingSeparator</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>identifier</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isoCountryCodes</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isoCurrencyCodes</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isoLanguageCodes</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isoRegionCodes</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>languageCode</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>localeIdentifier</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>preferredLanguages</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>quotationBeginDelimiter</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>quotationEndDelimiter</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>regionCode</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>scriptCode</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>system</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>usesMetricSystem</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>variantCode</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Locale" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Locale" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>canonicalIdentifier</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>canonicalLanguageIdentifier</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>canonicalLocaleIdentifier</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>components</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Dictionary(Swift.String, Swift.String)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromLocaleIdentifier: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>identifier</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.String?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromWindowsLocaleCode: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>localeIdentifier</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.String?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromWindowsLocaleCode: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>localizedString</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forLocaleIdentifier: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>windowsLocaleCode</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.UInt32</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromLocaleIdentifier: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.MachError">
                  <property>
                     <name>aborted</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>alreadyInSet</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>alreadyWaiting</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>codesignError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>defaultSet</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>errorDomain</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>exceptionProtected</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>failure</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>invalidAddress</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>invalidArgument</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>invalidCapability</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>invalidHost</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>invalidLedger</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>invalidMemoryControl</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>invalidName</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>invalidObject</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>invalidPolicy</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>invalidProcessorSet</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>invalidRight</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>invalidSecurity</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>invalidTask</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>invalidValue</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lockOwned</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lockOwnedSelf</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lockSetDestroyed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lockUnstable</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>memoryDataMoved</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>memoryError</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>memoryFailure</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>memoryPresent</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>memoryRestartCopy</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nameExists</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>noAccess</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>noSpace</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nodeDown</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>notDepressed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>notInSet</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>notReceiver</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>notSupported</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>notWaiting</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>operationTimedOut</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>policyLimit</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>policyStatic</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>protectionFailure</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>resourceShortage</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rightExists</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rpcContinueOrphan</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rpcServerTerminated</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rpcTerminateOrphan</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>semaphoreDestroyed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>success</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>terminated</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userReferencesOverflow</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Foundation.Measurement">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>unit</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>*</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Foundation.Measurement(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>+</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Foundation.Measurement(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>-</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Foundation.Measurement(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>/</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Foundation.Measurement(Self)</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>&lt;</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Measurement(???)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Measurement(???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Measurement(???)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Measurement(???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.NSDecimal">
               </Struct>
               <Struct name="Foundation.NSFastEnumerationIterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Any?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Foundation.NSIndexSetIterator">
                  <func>
                     <name>next</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Struct>
               <Struct name="Foundation.NSKeyValueObservedChange">
                  <property>
                     <name>indexes</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isPrior</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>kind</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>newValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>oldValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Foundation.Notification">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>object</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userInfo</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Notification" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Notification" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.POSIXError">
                  <property>
                     <name>E2BIG</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EACCES</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EADDRINUSE</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EADDRNOTAVAIL</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EAFNOSUPPORT</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EAGAIN</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EALREADY</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EAUTH</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EBADARCH</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EBADEXEC</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EBADF</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EBADMACHO</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EBADMSG</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EBADRPC</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EBUSY</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ECANCELED</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ECHILD</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ECONNABORTED</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ECONNREFUSED</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ECONNRESET</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EDEADLK</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EDESTADDRREQ</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EDEVERR</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EDOM</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EDQUOT</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EEXIST</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EFAULT</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EFBIG</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EFTYPE</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EHOSTDOWN</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EHOSTUNREACH</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EIDRM</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EILSEQ</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EINPROGRESS</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EINTR</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EINVAL</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EIO</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EISCONN</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EISDIR</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ELOOP</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EMFILE</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EMLINK</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EMSGSIZE</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EMULTIHOP</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENAMETOOLONG</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENEEDAUTH</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENETDOWN</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENETRESET</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENETUNREACH</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENFILE</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOATTR</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOBUFS</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENODATA</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENODEV</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOENT</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOEXEC</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOLCK</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOLINK</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOMEM</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOMSG</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOPOLICY</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOPROTOOPT</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOSPC</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOSR</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOSTR</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOSYS</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOTBLK</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOTCONN</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOTDIR</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOTEMPTY</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOTRECOVERABLE</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOTSOCK</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOTSUP</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENOTTY</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ENXIO</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EOVERFLOW</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EOWNERDEAD</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EPERM</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EPFNOSUPPORT</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EPIPE</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EPROCLIM</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EPROCUNAVAIL</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EPROGMISMATCH</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EPROGUNAVAIL</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EPROTO</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EPROTONOSUPPORT</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EPROTOTYPE</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EPWROFF</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EQFULL</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ERANGE</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EREMOTE</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EROFS</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ERPCMISMATCH</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ESHLIBVERS</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ESHUTDOWN</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ESOCKTNOSUPPORT</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ESPIPE</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ESRCH</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ESTALE</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ETIME</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ETIMEDOUT</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ETOOMANYREFS</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ETXTBSY</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EUSERS</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EWOULDBLOCK</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>EXDEV</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>errorDomain</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Foundation.PersonNameComponents">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>familyName</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>givenName</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>middleName</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>namePrefix</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nameSuffix</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nickname</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>phoneticRepresentation</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.PersonNameComponents" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.PersonNameComponents" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.TimeZone">
                  <property>
                     <name>abbreviationDictionary</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>autoupdatingCurrent</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>current</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>data</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>identifier</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>knownTimeZoneIdentifiers</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>name</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nextDaylightSavingTimeTransition</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timeZoneDataVersion</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.TimeZone" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.TimeZone" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>abbreviation</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>daylightSavingTimeOffset</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Double</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>isDaylightSavingTime</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>nextDaylightSavingTimeTransition</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.Date?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>secondsFromGMT</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.URL">
                  <property>
                     <name>absoluteString</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>absoluteURL</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>baseURL</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>dataRepresentation</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fragment</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hasDirectoryPath</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>host</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isFileURL</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>lastPathComponent</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>parameterString</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>password</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>path</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>pathComponents</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>pathExtension</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>port</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>query</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>relativePath</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>relativeString</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>resourceSpecifier</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>scheme</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>standardized</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>standardizedFileURL</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>user</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.URL" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.URL" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>appendPathComponent</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="isDirectory: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>appendPathExtension</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>appendingPathComponent</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.URL</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="isDirectory: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>appendingPathExtension</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.URL</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>bookmarkData</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Foundation.Data</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="withContentsOf: Foundation.URL" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>checkPromisedItemIsReachable</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>checkResourceIsReachable</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>deleteLastPathComponent</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>deletePathExtension</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>deletingLastPathComponent</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.URL</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>deletingPathExtension</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.URL</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>removeAllCachedResourceValues</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>resolveSymlinksInPath</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>resolvingSymlinksInPath</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.URL</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>setResourceValues</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>standardize</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>startAccessingSecurityScopedResource</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>stopAccessingSecurityScopedResource</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>withUnsafeFileSystemRepresentation</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>writeBookmarkData</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Foundation.Data" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Foundation.URL" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.URLComponents">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fragment</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>host</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>password</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>path</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>percentEncodedFragment</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>percentEncodedHost</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>percentEncodedPassword</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>percentEncodedPath</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>percentEncodedQuery</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>percentEncodedQueryItems</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>percentEncodedUser</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>port</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>query</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>queryItems</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rangeOfFragment</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rangeOfHost</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rangeOfPassword</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rangeOfPath</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rangeOfPort</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rangeOfQuery</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rangeOfScheme</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rangeOfUser</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>scheme</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>string</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>url</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>user</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.URLComponents" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.URLComponents" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>url</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Foundation.URL?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="relativeTo: Foundation.URL?" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.URLError">
                  <property>
                     <name>AppTransportSecurityRequiresSecureConnection</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>BackgroundSessionInUseByAnotherProcess</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>BackgroundSessionRequiresSharedContainer</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>BackgroundSessionWasDisconnected</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>BadServerResponse</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>BadURL</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>CallIsActive</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>Cancelled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>CannotCloseFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>CannotConnectToHost</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>CannotCreateFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>CannotDecodeContentData</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>CannotDecodeRawData</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>CannotFindHost</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>CannotLoadFromNetwork</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>CannotMoveFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>CannotOpenFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>CannotParseResponse</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>CannotRemoveFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>CannotWriteToFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ClientCertificateRejected</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ClientCertificateRequired</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>DNSLookupFailed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>DataLengthExceedsMaximum</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>DataNotAllowed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>DownloadDecodingFailedMidStream</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>DownloadDecodingFailedToComplete</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileDoesNotExist</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>FileIsDirectory</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>HTTPTooManyRedirects</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>InternationalRoamingOff</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>NetworkConnectionLost</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>NoPermissionsToReadFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>NotConnectedToInternet</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>RedirectToNonExistentLocation</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>RequestBodyStreamExhausted</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ResourceUnavailable</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>SecureConnectionFailed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ServerCertificateHasBadDate</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ServerCertificateHasUnknownRoot</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ServerCertificateNotYetValid</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ServerCertificateUntrusted</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>TimedOut</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>Unknown</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>UnsupportedURL</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>UserAuthenticationRequired</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>UserCancelledAuthentication</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ZeroByteResource</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>appTransportSecurityRequiresSecureConnection</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>backgroundSessionInUseByAnotherProcess</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>backgroundSessionRequiresSharedContainer</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>backgroundSessionWasDisconnected</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>backgroundTaskCancelledReason</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>badServerResponse</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>badURL</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>callIsActive</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cancelled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotCloseFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotConnectToHost</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotCreateFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotDecodeContentData</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotDecodeRawData</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotFindHost</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotLoadFromNetwork</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotMoveFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotOpenFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotParseResponse</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotRemoveFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotWriteToFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>clientCertificateRejected</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>clientCertificateRequired</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>dataLengthExceedsMaximum</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>dataNotAllowed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>dnsLookupFailed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>downloadDecodingFailedMidStream</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>downloadDecodingFailedToComplete</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>downloadTaskResumeData</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>errorDomain</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>failingURL</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>failureURLString</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileDoesNotExist</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileIsDirectory</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>httpTooManyRedirects</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>internationalRoamingOff</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>networkConnectionLost</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>networkUnavailableReason</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>noPermissionsToReadFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>notConnectedToInternet</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>redirectToNonExistentLocation</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>requestBodyStreamExhausted</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>resourceUnavailable</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>secureConnectionFailed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>serverCertificateHasBadDate</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>serverCertificateHasUnknownRoot</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>serverCertificateNotYetValid</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>serverCertificateUntrusted</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timedOut</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>unknown</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>unsupportedURL</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userAuthenticationRequired</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userCancelledAuthentication</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>zeroByteResource</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Foundation.URLError.Code">
                  <property>
                     <name>appTransportSecurityRequiresSecureConnection</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>backgroundSessionInUseByAnotherProcess</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>backgroundSessionRequiresSharedContainer</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>backgroundSessionWasDisconnected</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>badServerResponse</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>badURL</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>callIsActive</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cancelled</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotCloseFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotConnectToHost</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotCreateFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotDecodeContentData</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotDecodeRawData</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotFindHost</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotLoadFromNetwork</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotMoveFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotOpenFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotParseResponse</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotRemoveFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>cannotWriteToFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>clientCertificateRejected</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>clientCertificateRequired</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>dataLengthExceedsMaximum</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>dataNotAllowed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>dnsLookupFailed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>downloadDecodingFailedMidStream</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>downloadDecodingFailedToComplete</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileDoesNotExist</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileIsDirectory</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>httpTooManyRedirects</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>internationalRoamingOff</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>networkConnectionLost</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>noPermissionsToReadFile</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>notConnectedToInternet</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>redirectToNonExistentLocation</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>requestBodyStreamExhausted</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>resourceUnavailable</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>secureConnectionFailed</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>serverCertificateHasBadDate</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>serverCertificateHasUnknownRoot</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>serverCertificateNotYetValid</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>serverCertificateUntrusted</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timedOut</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>unknown</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>unsupportedURL</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userAuthenticationRequired</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>userCancelledAuthentication</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>zeroByteResource</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Foundation.URLQueryItem">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>name</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>value</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.URLQueryItem" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.URLQueryItem" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.URLRequest">
                  <property>
                     <name>allHTTPHeaderFields</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>allowsCellularAccess</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>allowsConstrainedNetworkAccess</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>allowsExpensiveNetworkAccess</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>httpBody</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>httpMethod</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>httpShouldHandleCookies</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>httpShouldUsePipelining</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>mainDocumentURL</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>timeoutInterval</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>url</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.URLRequest" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.URLRequest" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>addValue</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forHTTPHeaderField: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>setValue</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forHTTPHeaderField: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>value</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String?</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forHTTPHeaderField: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.URLResourceValues">
                  <property>
                     <name>addedToDirectoryDate</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>attributeModificationDate</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>canonicalPath</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>contentAccessDate</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>contentModificationDate</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>creationDate</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>documentIdentifier</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileAllocatedSize</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>fileSize</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hasHiddenExtension</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isAliasFile</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isApplication</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isDirectory</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isExcludedFromBackup</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isExecutable</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isHidden</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isMountTrigger</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isPackage</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isReadable</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isRegularFile</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSymbolicLink</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isSystemImmutable</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isUbiquitousItem</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isUserImmutable</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isVolume</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isWritable</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>labelNumber</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>linkCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>localizedLabel</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>localizedName</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>localizedTypeDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>name</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>parentDirectory</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>path</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>preferredIOBlockSize</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>totalFileAllocatedSize</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>totalFileSize</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>typeIdentifier</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousItemContainerDisplayName</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousItemDownloadRequested</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousItemHasUnresolvedConflicts</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousItemIsDownloading</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousItemIsUploaded</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>ubiquitousItemIsUploading</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volume</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeAvailableCapacity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeCreationDate</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeIsAutomounted</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeIsBrowsable</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeIsEjectable</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeIsEncrypted</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeIsInternal</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeIsJournaling</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeIsLocal</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeIsReadOnly</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeIsRemovable</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeIsRootFileSystem</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeLocalizedFormatDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeLocalizedName</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeMaximumFileSize</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeName</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeResourceCount</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsAccessPermissions</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsAdvisoryFileLocking</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsCasePreservedNames</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsCaseSensitiveNames</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsCompression</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsExclusiveRenaming</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsExtendedSecurity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsFileCloning</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsHardLinks</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsImmutableFiles</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsJournaling</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsPersistentIDs</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsRenaming</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsRootDirectoryDates</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsSparseFiles</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsSwapRenaming</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsSymbolicLinks</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsVolumeSizes</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeSupportsZeroRuns</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeTotalCapacity</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeURLForRemounting</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>volumeUUIDString</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Struct>
               <Struct name="Foundation.UUID">
                  <property>
                     <name>customMirror</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>debugDescription</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>uuid</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>uuidString</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.UUID" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.UUID" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>encode</name>
                     <hasThrows>True</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.AnyHashable">
               </Struct>
               <Struct name="Swift.Array">
               </Struct>
               <Struct name="Swift.Bool">
               </Struct>
               <Struct name="Swift.CollectionDifference">
               </Struct>
               <Struct name="Swift.Dictionary">
               </Struct>
               <Struct name="Swift.Double">
               </Struct>
               <Struct name="Swift.Float">
               </Struct>
               <Struct name="Swift.Int">
               </Struct>
               <Struct name="Swift.Int16">
               </Struct>
               <Struct name="Swift.Int32">
               </Struct>
               <Struct name="Swift.Int64">
               </Struct>
               <Struct name="Swift.Int8">
               </Struct>
               <Struct name="Swift.Set">
               </Struct>
               <Struct name="Swift.String">
                  <property>
                     <name>ascii</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>description</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>iso2022JP</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isoLatin1</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>isoLatin2</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>japaneseEUC</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>macOSRoman</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nextstep</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>nonLossyASCII</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>shiftJIS</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>symbol</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>unicode</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf16</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf16BigEndian</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf16LittleEndian</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf32</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf32BigEndian</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf32LittleEndian</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>utf8</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>windowsCP1250</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>windowsCP1251</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>windowsCP1252</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>windowsCP1253</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <property>
                     <name>windowsCP1254</name>
                     <isStatic>True</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.String">
               </Struct>
               <Struct name="Swift.Substring">
               </Struct>
               <Struct name="Swift.UInt">
               </Struct>
               <Struct name="Swift.UInt16">
               </Struct>
               <Struct name="Swift.UInt32">
               </Struct>
               <Struct name="Swift.UInt64">
               </Struct>
               <Struct name="Swift.UInt8">
               </Struct>
               <Struct name="Swift.UnsafeMutableRawBufferPointer">
               </Struct>
               <Struct name="Swift.UnsafeRawBufferPointer">
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="Darwin.MachErrorCode">
               </Enum>
               <Enum name="Darwin.POSIXErrorCode">
               </Enum>
               <Enum name="Foundation.Calendar.Component">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Foundation.Calendar.Identifier">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Calendar.Identifier" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Calendar.Identifier" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Foundation.Calendar.MatchingPolicy">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Calendar.MatchingPolicy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Calendar.MatchingPolicy" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Foundation.Calendar.RepeatedTimePolicy">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Calendar.RepeatedTimePolicy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Calendar.RepeatedTimePolicy" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Foundation.Calendar.SearchDirection">
                  <property>
                     <name>hashValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
                  <func>
                     <name>==</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>Infix</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>hash</name>
                     <hasThrows>False</hasThrows>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Foundation.Data.Deallocator">
               </Enum>
               <Enum name="Foundation.JSONDecoder.DataDecodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONDecoder.DateDecodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONDecoder.KeyDecodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONDecoder.NonConformingFloatDecodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONEncoder.DataEncodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONEncoder.DateEncodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONEncoder.KeyEncodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONEncoder.NonConformingFloatEncodingStrategy">
               </Enum>
               <Enum name="Foundation.URLError.BackgroundTaskCancelledReason">
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Enum>
               <Enum name="Foundation.URLError.NetworkUnavailableReason">
                  <property>
                     <name>rawValue</name>
                     <isStatic>False</isStatic>
                     <accessibility>True</accessibility>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <type>Named</type>
                     <storage>Addressed</storage>
                  </property>
               </Enum>
               <Enum name="Swift.DecodingError">
               </Enum>
               <Enum name="Swift.EncodingError">
               </Enum>
            </innerenums>
         </typedeclaration>
         <typedeclaration kind="protocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerprotocols>
               <Protocol name="Foundation.ContiguousBytes">
                  <func>
                     <name>withUnsafeBytes</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>???</returnType>
                     <hasThrows>True</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Foundation.CustomNSError">
                  <func>
                     <name>errorCode</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>errorDomain</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.String</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>errorUserInfo</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Dictionary(Swift.String, Swift.Any)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Foundation.DataProtocol">
                  <func>
                     <name>copyBytes</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableBufferPointer(???)" type="Named" isVariadic="False"/>
                           <parameter publicName="from: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>copyBytes</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableRawBufferPointer" type="Named" isVariadic="False"/>
                           <parameter publicName="from: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>copyBytes</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableBufferPointer(???)" type="Named" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>copyBytes</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Int</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableRawBufferPointer" type="Named" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>firstRange</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Range(Self.Index)?</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: ???" type="Named" isVariadic="False"/>
                           <parameter publicName="in: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>lastRange</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Range(Self.Index)?</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: ???" type="Named" isVariadic="False"/>
                           <parameter publicName="in: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>regions</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Self.Regions</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Foundation.LocalizedError">
                  <func>
                     <name>errorDescription</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String?</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>failureReason</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String?</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>helpAnchor</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String?</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
                  <func>
                     <name>recoverySuggestion</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.String?</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Foundation.MutableDataProtocol">
                  <func>
                     <name>resetBytes</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Foundation.NSKeyValueObservingCustomization">
                  <func>
                     <name>automaticallyNotifiesObservers</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Swift.AnyKeyPath" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>keyPathsAffectingValue</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>True</isStatic>
                     <returnType>Swift.Set(Swift.AnyKeyPath)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Swift.AnyKeyPath" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Foundation.RecoverableError">
                  <func>
                     <name>attemptRecovery</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType></returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="optionIndex: Int" type="Named" isVariadic="False"/>
                           <parameter publicName="resultHandler: Bool" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>attemptRecovery</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Bool</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="optionIndex: Int" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func>
                     <name>recoveryOptions</name>
                     <operatorKind>None</operatorKind>
                     <isStatic>False</isStatic>
                     <returnType>Swift.Array(Swift.String)</returnType>
                     <hasThrows>False</hasThrows>
                     <accessibility>Public</accessibility>
                     <isProperty>False</isProperty>
                     <isFinal>False</isFinal>
                     <isDeprecated>False</isDeprecated>
                     <isUnavailable>False</isUnavailable>
                     <isOptional>False</isOptional>
                     <isRequired>False</isRequired>
                     <isConvenienceInit>False</isConvenienceInit>
                     <objcSelector></objcSelector>
                  </func>
               </Protocol>
               <Protocol name="Foundation.ReferenceConvertible">
               </Protocol>
            </innerprotocols>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftOnoneSupport" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libclang_rt" swiftVersion="??">
      </Module>
   </modulelist>
</xamreflect>
