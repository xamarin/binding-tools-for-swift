<BindingNemo version="1.0" encoding="UTF-8">
<xamreflect version="1.0">
   <modulelist>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftObjectiveC" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="ObjectiveC.NSZone">
               </Struct>
               <Struct name="ObjectiveC.ObjCBool">
                  <property
                     name="boolValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="ObjectiveC.Selector">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="ObjectiveC.Selector" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="ObjectiveC.Selector" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
            </innerstructs>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftXCTest" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftCore" swiftVersion="??">
         <typedeclaration kind="class" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerclasses>
               <Class name="Swift.AnyKeyPath">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rootType"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="valueType"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.AnyKeyPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.AnyKeyPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Class>
               <Class name="Swift.AnyObject">
               </Class>
               <Class name="Swift.KeyPath">
               </Class>
               <Class name="Swift.ManagedBuffer">
                  <property
                     name="capacity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="firstElementAddress"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="header"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="headerAddress"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="create"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.ManagedBuffer(Self, ???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="minimumCapacity: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="makingHeaderWith: Swift.ManagedBuffer(Self ???) -> Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeMutablePointerToElements"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeMutablePointerToHeader"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeMutablePointers"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UnsafeMutablePointer(???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Class>
               <Class name="Swift.PartialKeyPath">
               </Class>
               <Class name="Swift.ReferenceWritableKeyPath">
               </Class>
               <Class name="Swift.WritableKeyPath">
               </Class>
            </innerclasses>
         </typedeclaration>
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="Swift.AnyBidirectionalCollection">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="underestimatedCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="drop"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyBidirectionalCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dropFirst"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyBidirectionalCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dropLast"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyBidirectionalCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="filter"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="forEach"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formIndex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyIndex"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyIterator(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="map"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="prefix"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyBidirectionalCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="suffix"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyBidirectionalCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.AnyCollection">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="underestimatedCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="drop"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dropFirst"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dropLast"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="filter"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="forEach"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formIndex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyIndex"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyIterator(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="map"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="prefix"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="suffix"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.AnyHashable">
                  <property
                     name="base"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.AnyHashable" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.AnyHashable" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.AnyIndex">
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.AnyIterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.AnyRandomAccessCollection">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="underestimatedCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="drop"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyRandomAccessCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dropFirst"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyRandomAccessCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dropLast"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyRandomAccessCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="filter"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="forEach"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formIndex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyIndex"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyIterator(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="map"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="prefix"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyRandomAccessCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="suffix"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyRandomAccessCollection(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.AnySequence">
                  <property
                     name="underestimatedCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="drop"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnySequence(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dropFirst"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnySequence(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dropLast"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="filter"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="forEach"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.AnyIterator(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="map"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="prefix"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="suffix"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Array">
                  <property
                     name="capacity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Array(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Array(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Array(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Array(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Array(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formIndex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remove"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="at: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="removeAll"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="reserveCapacity"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="reserveCapacityForAppend"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="newElementsCount: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withContiguousMutableStorageIfAvailable"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withContiguousStorageIfAvailable"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeBufferPointer"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withUnsafeMutableBufferPointer"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeMutableBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.ArraySlice">
                  <property
                     name="capacity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formIndex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remove"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="at: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="removeAll"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="reserveCapacity"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="reserveCapacityForAppend"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="newElementsCount: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withContiguousMutableStorageIfAvailable"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withContiguousStorageIfAvailable"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeBufferPointer"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withUnsafeMutableBufferPointer"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeMutableBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.AutoreleasingUnsafeMutablePointer">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="pointee"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Bool">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="!"
                     hasThrows="False"
                     operatorKind="Prefix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="&amp;&amp;"
                     hasThrows="True"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="() -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="random"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="using: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="toggle"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="||"
                     hasThrows="True"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="() -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.CVaListPointer">
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Character">
                  <property
                     name="asciiValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hexDigitValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isASCII"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isCased"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isCurrencySymbol"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isHexDigit"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isLetter"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isLowercase"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isMathSymbol"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isNewline"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isNumber"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isPunctuation"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSymbol"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isUppercase"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isWhitespace"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isWholeNumber"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="unicodeScalars"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf16"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf8"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="wholeNumberValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Character" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Character" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Character" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Character" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="lowercased"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="uppercased"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="write"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.ClosedRange">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isEmpty"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lowerBound"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="upperBound"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.ClosedRange(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.ClosedRange(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="clamped"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.ClosedRange(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.ClosedRange(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="contains"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="overlaps"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="relative"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Range(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.CodingUserInfoKey">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.CodingUserInfoKey" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.CodingUserInfoKey" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.CollectionDifference">
                  <func
                     name="inverse"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.CollectionDifference(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.CollectionDifference.Index">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.CollectionOfOne">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.CollectionOfOne.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.ContiguousArray">
                  <property
                     name="capacity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formIndex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remove"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="at: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="removeAll"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="reserveCapacity"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="reserveCapacityForAppend"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="newElementsCount: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withContiguousMutableStorageIfAvailable"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withContiguousStorageIfAvailable"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeBufferPointer"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withUnsafeMutableBufferPointer"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeMutableBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.DecodingError.Context">
                  <property
                     name="codingPath"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="underlyingError"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.DefaultIndicies">
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="formIndex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Self.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Index"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Self.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.DefaultStringInterpolation">
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="appendInterpolation"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="appendLiteral"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="make"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="write"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary">
                  <property
                     name="capacity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isEmpty"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="compactMapValues"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Dictionary(Self, ???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="filter"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Dictionary(Self, ???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(key: Self value: ???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="mapValues"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Dictionary(Self, ???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="popFirst"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(key: Self, value: ???)?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="removeAll"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="removeValue"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="reserveCapacity"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary.Index">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary.Iterator">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(key: Self, value: ???)?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary.Keys">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isEmpty"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Dictionary.Keys.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary.Values">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isEmpty"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Dictionary.Values.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Double">
                  <property
                     name="binade"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="bitPattern"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="exponent"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="exponentBitCount"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="exponentBitPattern"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="greatestFiniteMagnitude"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="infinity"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isCanonical"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isFinite"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isInfinite"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isNaN"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isNormal"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSignMinus"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSignalingNaN"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSubnormal"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isZero"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leastNonzeroMagnitude"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leastNormalMagnitude"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="magnitude"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nan"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nextUp"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="pi"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="quietNaN"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="sign"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="signalingNaN"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significand"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significandBitCount"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significandBitPattern"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significandWidth"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ulp"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ulpOfOne"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Double"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Double"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Double"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Double"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addProduct"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="advanced"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Double"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Double"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formRemainder"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formSquareRoot"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formTruncatingRemainder"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isEqual"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isLess"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="than: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isLessThanOrEqualTo"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="negate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="round"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="write"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Double.SIMD16Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Double.SIMD2Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Double.SIMD32Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Double.SIMD4Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Double.SIMD64Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Double.SIMD8Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.DropFirstSequence">
                  <func
                     name="dropFirst"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.DropFirstSequence(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Iterator"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.DropWhileSequence">
                  <func
                     name="drop"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.DropWhileSequence(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="while: Self.Element -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.DropWhileSequence.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.EmptyCollection">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.EmptyCollection(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.EmptyCollection(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.EmptyCollection.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.EncodingError.Context">
                  <property
                     name="codingPath"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="underlyingError"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.EnumeratedSequence">
               </Struct>
               <Struct name="Swift.EnumeratedSequence.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(offset: Int, element: Self.Element)?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.FlattenSequence">
               </Struct>
               <Struct name="Swift.FlattenSequence.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element.Element?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Float">
                  <property
                     name="binade"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="bitPattern"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="exponent"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="exponentBitCount"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="exponentBitPattern"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="greatestFiniteMagnitude"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="infinity"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isCanonical"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isFinite"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isInfinite"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isNaN"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isNormal"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSignMinus"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSignalingNaN"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSubnormal"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isZero"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leastNonzeroMagnitude"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leastNormalMagnitude"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="magnitude"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nan"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nextUp"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="pi"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="quietNaN"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="sign"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="signalingNaN"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significand"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significandBitCount"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significandBitPattern"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significandWidth"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ulp"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ulpOfOne"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Float"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Float"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Float"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Float"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addProduct"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="advanced"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Float"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Float"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formRemainder"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formSquareRoot"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formTruncatingRemainder"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isEqual"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isLess"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="than: Float" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isLessThanOrEqualTo"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="negate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="round"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="write"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Float.SIMD16Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Float.SIMD2Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Float.SIMD32Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Float.SIMD4Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Float.SIMD64Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Float.SIMD8Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Float16">
                  <property
                     name="binade"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="bitPattern"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="exponent"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="exponentBitCount"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="exponentBitPattern"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="greatestFiniteMagnitude"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="infinity"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isCanonical"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isFinite"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isInfinite"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isNaN"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isNormal"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSignMinus"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSignalingNaN"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSubnormal"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isZero"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leastNonzeroMagnitude"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leastNormalMagnitude"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="magnitude"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nan"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nextUp"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="pi"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="quietNaN"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="sign"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="signalingNaN"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significand"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significandBitCount"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significandBitPattern"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significandWidth"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ulp"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ulpOfOne"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Float16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Float16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Float16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Float16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addProduct"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="advanced"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Float16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Float16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formRemainder"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formSquareRoot"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formTruncatingRemainder"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isEqual"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isLess"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="than: Swift.Float16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isLessThanOrEqualTo"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="negate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="round"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="write"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Float16.SIMD16Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Float16.SIMD2Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Float16.SIMD32Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Float16.SIMD4Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Float16.SIMD64Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Float16.SIMD8Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Float80">
               </Struct>
               <Struct name="Swift.Hasher">
                  <func
                     name="combine"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="bytes: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="finalize"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.IndexingIterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Int">
                  <property
                     name="bitWidth"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="byteSwapped"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leadingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="magnitude"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nonzeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="trailingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="words"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="%"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="%="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Int, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="advanced"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Int, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividingFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(quotient: Int, remainder: Int)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Int low: UInt)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(high: Int, low: UInt)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Int, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remainderReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Int, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="signum"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subtractingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Int, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int.SIMD16Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int.SIMD2Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int.SIMD32Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int.SIMD4Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int.SIMD64Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int.SIMD8Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int.Words">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int16">
                  <property
                     name="bitWidth"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="byteSwapped"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leadingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="magnitude"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nonzeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="trailingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="words"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="%"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="%="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int16, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int16, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividingFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(quotient: Swift.Int16, remainder: Swift.Int16)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.Int16 low: Swift.UInt16)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(high: Swift.Int16, low: Swift.UInt16)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int16, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remainderReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int16, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="signum"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subtractingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int16, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int16.SIMD16Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int16.SIMD2Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int16.SIMD32Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int16.SIMD4Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int16.SIMD64Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int16.SIMD8Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int16.Words">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int32">
                  <property
                     name="bitWidth"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="byteSwapped"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leadingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="magnitude"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nonzeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="trailingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="words"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="%"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="%="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int32, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int32, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividingFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(quotient: Swift.Int32, remainder: Swift.Int32)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.Int32 low: Swift.UInt32)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(high: Swift.Int32, low: Swift.UInt32)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int32, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remainderReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int32, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="signum"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subtractingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int32, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int32.SIMD16Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int32.SIMD2Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int32.SIMD32Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int32.SIMD4Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int32.SIMD64Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int32.SIMD8Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int32.Words">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int64">
                  <property
                     name="bitWidth"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="byteSwapped"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leadingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="magnitude"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nonzeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="trailingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="words"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="%"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="%="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int64, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int64, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividingFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(quotient: Swift.Int64, remainder: Swift.Int64)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.Int64 low: Swift.UInt64)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(high: Swift.Int64, low: Swift.UInt64)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int64, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remainderReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int64, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="signum"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subtractingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int64, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int64.SIMD16Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int64.SIMD2Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int64.SIMD32Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int64.SIMD4Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int64.SIMD64Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int64.SIMD8Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int64.Words">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int8">
                  <property
                     name="bitWidth"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="byteSwapped"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leadingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="magnitude"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nonzeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="trailingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="words"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="%"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="%="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int8, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int8, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividingFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(quotient: Swift.Int8, remainder: Swift.Int8)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.Int8 low: Swift.UInt8)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(high: Swift.Int8, low: Swift.UInt8)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int8, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remainderReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int8, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="signum"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subtractingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.Int8, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.Int8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Int8.SIMD16Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int8.SIMD2Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int8.SIMD32Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int8.SIMD4Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int8.SIMD64Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int8.SIMD8Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Int8.Words">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.IteratorSequence">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.JoinedSequence">
               </Struct>
               <Struct name="Swift.JoinedSequence.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element.Element?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.KeyValuePairs">
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.KeyedDecodingContainer">
                  <property
                     name="allKeys"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="codingPath"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="contains"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeNil"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="nestedContainer"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.KeyedDecodingContainer(???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="nestedUnkeyedContainer"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnkeyedDecodingContainer"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="superDecoder"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Decoder"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.KeyedEncodingContainer">
                  <property
                     name="codingPath"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeConditional"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": ???" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeNil"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="nestedContainer"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.KeyedEncodingContainer(???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="nestedUnkeyedContainer"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnkeyedEncodingContainer"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="superEncoder"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Encoder"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.LazyDropWhileSequence">
               </Struct>
               <Struct name="Swift.LazyDropWhileSequence.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.LazyFilterSequence">
                  <func
                     name="filter"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.LazyFilterSequence(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.LazyFilterSequence.Iterator">
                  <property
                     name="base"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.LazyMapSequence">
                  <property
                     name="underestimatedCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="map"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.LazyMapSequence(Self, ???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.LazyMapSequence.Iterator">
                  <property
                     name="base"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.LazyPrefixWhileSequence">
               </Struct>
               <Struct name="Swift.LazyPrefixWhileSequence.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.LazySequence">
                  <property
                     name="elements"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="underestimatedCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Iterator"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.ManagedBufferPointer">
                  <property
                     name="buffer"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="capacity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="header"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.ManagedBufferPointer(Self ???)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.ManagedBufferPointer(Self ???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isUniqueReference"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withUnsafeMutablePointerToElements"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeMutablePointerToHeader"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeMutablePointers"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UnsafeMutablePointer(???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Mirror">
                  <property
                     name="children"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="displayStyle"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="subjectType"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="superclassMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="descendant"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Any?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.MirrorPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Array(Swift.MirrorPath)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.ObjectIdentifier">
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.ObjectIdentifier" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.ObjectIdentifier" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.ObjectIdentifier" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.ObjectIdentifier" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.OpaquePointer">
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.OpaquePointer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.OpaquePointer" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.PartialRangeFrom">
                  <property
                     name="lowerBound"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="contains"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="relative"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Range(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.PartialRangeThrough">
                  <property
                     name="upperBound"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="contains"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="relative"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Range(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.PartialRangeUpTo">
                  <property
                     name="upperBound"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="contains"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="relative"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Range(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.PrefixSequence">
                  <func
                     name="prefix"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.PrefixSequence(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.PrefixSequence.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Range">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isEmpty"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lowerBound"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="upperBound"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Range(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Range(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="clamped"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Range(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Range(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="contains"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="overlaps"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="relative"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Range(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Repeated">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="repeatedValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.ReversedCollection">
                  <func
                     name="reversed"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.ReversedCollection.Index">
                  <property
                     name="base"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.ReversedCollection.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.SIMD16">
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="evenHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="highHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lowHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="oddHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.SIMD2">
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="x"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="y"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.SIMD3">
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="x"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="y"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="z"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.SIMD32">
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="evenHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="highHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lowHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="oddHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.SIMD4">
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="evenHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="highHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lowHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="oddHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="w"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="x"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="y"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="z"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.SIMD64">
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="evenHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="highHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lowHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="oddHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.SIMD8">
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="evenHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="highHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lowHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="oddHalf"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.SIMDMask">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="random"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.SIMDMask(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="using: ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Set">
                  <property
                     name="capacity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isEmpty"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Set(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Set(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="contains"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="filter"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Set(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formIntersection"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="intersection"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Set(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isDisjoint"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="with: Swift.Set(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isStrictSubset"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Swift.Set(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isStrictSuperset"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Swift.Set(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isSubset"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Swift.Set(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isSuperset"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Swift.Set(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="popFirst"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="remove"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="removeAll"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="removeFirst"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="reserveCapacity"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subtract"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="subtracting"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Set(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Set.Index">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Set.Iterator">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Slice">
                  <property
                     name="base"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Self.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Self.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formIndex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Self.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Index"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Self.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.StaticString">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hasPointerRepresentation"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isASCII"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="unicodeScalar"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf8CodeUnitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf8Start"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="withUTF8Buffer"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.StrideThrough">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="underestimatedCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.StrideThroughIterator(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.StrideThroughIterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.StrideTo">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="underestimatedCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.StrideToIterator(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.StrideToIterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.String">
                  <property
                     name="characters"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isEmpty"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="unicodeScalars"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf16"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf8"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf8CString"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="append"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeCString"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="(result: Swift.String, repairsMade: Bool)?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UnsafePointer(Self.CodeUnit)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="repairingInvalidCodeUnits: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hasPrefix"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="hasSuffix"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String.Index"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="insert"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="at: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="lowercased"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String.Iterator"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="max"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="min"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remove"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Character"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="at: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="removeAll"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="removeSubrange"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="replaceSubrange"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Swift.String.Index)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="reserveCapacity"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="uppercased"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withCString"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="encodedAs: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafePointer(???A1.CodeUnit) -> Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withMutableCharacters"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withUnsafeBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="write"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.String.Index">
                  <property
                     name="characterStride"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="encodedOffset"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isZeroPosition"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nextEncoded"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nextTranscoded"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="orderingValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="priorEncoded"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="priorTranscoded"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="strippingTranscoding"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="transcodedOffset"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encoded"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String.Index"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="offsetBy: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="samePosition"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String.Index?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.String.UnicodeScalarView" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="transcoded"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String.Index"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="withOffset: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="utf16Offset"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.String.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Character?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.String.UTF16View">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String.Index"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String.UTF16View.Iterator"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.String.UTF16View.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt16?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.String.UTF8View">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String.Index"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withContiguousStorageIfAvailable"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.String.UnicodeScalarView">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="append"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String.Index"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String.UnicodeScalarView.Iterator"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="replaceSubrange"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Swift.String.Index)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="reserveCapacity"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.String.UnicodeScalarView.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Unicode.Scalar?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Substring">
                  <property
                     name="characters"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="unicodeScalars"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf16"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf8"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="append"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="filter"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String.Index"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="lowercased"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="replaceSubrange"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Swift.String.Index)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Swift.Substring" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="uppercased"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withCString"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="encodedAs: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafePointer(???A1.CodeUnit) -> Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withMutableCharacters"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withUnsafeBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="write"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Substring.UTF16View">
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formIndex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String.Index"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Substring.UTF8View">
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formIndex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String.Index"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Substring.UnicodeScalarView">
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formIndex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String.Index"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="replaceSubrange"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Swift.String.Index)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.SystemRandomNumberGenerator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UInt">
                  <property
                     name="bitWidth"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="byteSwapped"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leadingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nonzeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="trailingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="words"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="%"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="UInt"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="%="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="UInt"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="UInt"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="UInt"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="UInt"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="UInt"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="UInt"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="UInt"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="UInt"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: UInt, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: UInt, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividingFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(quotient: UInt, remainder: UInt)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: UInt low: UInt)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(high: UInt, low: UInt)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: UInt, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remainderReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: UInt, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="signum"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="UInt"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subtractingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: UInt, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="UInt"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt.SIMD16Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt.SIMD2Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt.SIMD32Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt.SIMD4Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt.SIMD64Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt.SIMD8Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt.Words">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt16">
                  <property
                     name="bitWidth"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="byteSwapped"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leadingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nonzeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="trailingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="words"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="%"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="%="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt16, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt16, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividingFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(quotient: Swift.UInt16, remainder: Swift.UInt16)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.UInt16 low: Swift.UInt16)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(high: Swift.UInt16, low: Swift.UInt16)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt16, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remainderReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt16, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="signum"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subtractingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt16, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt16.SIMD16Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt16.SIMD2Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt16.SIMD32Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt16.SIMD4Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt16.SIMD64Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt16.SIMD8Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt16.Words">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt32">
                  <property
                     name="bitWidth"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="byteSwapped"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leadingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nonzeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="trailingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="words"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="%"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="%="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt32, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt32, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividingFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(quotient: Swift.UInt32, remainder: Swift.UInt32)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.UInt32 low: Swift.UInt32)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(high: Swift.UInt32, low: Swift.UInt32)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt32, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remainderReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt32, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="signum"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subtractingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt32, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt32.SIMD16Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt32.SIMD2Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt32.SIMD32Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt32.SIMD4Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt32.SIMD64Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt32.SIMD8Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt32.Words">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt64">
                  <property
                     name="bitWidth"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="byteSwapped"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leadingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nonzeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="trailingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="words"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="%"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="%="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt64, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt64, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividingFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(quotient: Swift.UInt64, remainder: Swift.UInt64)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.UInt64 low: Swift.UInt64)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(high: Swift.UInt64, low: Swift.UInt64)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt64, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remainderReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt64, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="signum"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subtractingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt64, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt64.SIMD16Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt64.SIMD2Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt64.SIMD32Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt64.SIMD4Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt64.SIMD64Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt64.SIMD8Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt64.Words">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt8">
                  <property
                     name="bitWidth"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="byteSwapped"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leadingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nonzeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="trailingZeroBitCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="words"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="%"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="%="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt8, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt8, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividingFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(quotient: Swift.UInt8, remainder: Swift.UInt8)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Swift.UInt8 low: Swift.UInt8)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedFullWidth"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(high: Swift.UInt8, low: Swift.UInt8)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt8, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remainderReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt8, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="signum"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subtractingReportingOverflow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Swift.UInt8, overflow: Bool)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Swift.UInt8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UInt8.SIMD16Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt8.SIMD2Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt8.SIMD32Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt8.SIMD4Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt8.SIMD64Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt8.SIMD8Storage">
                  <property
                     name="scalarCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.UInt8.Words">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UnfoldSequence">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.ASCII.Parser">
                  <func
                     name="parseScalar"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Unicode.ParseResult(Swift.CollectionOfOne(Swift.UInt8))"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.CanonicalCombiningClass">
                  <property
                     name="above"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="aboveLeft"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="aboveRight"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="attachedAbove"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="attachedAboveRight"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="attachedBelow"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="attachedBelowLeft"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="below"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="belowLeft"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="belowRight"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="doubleAbove"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="doubleBelow"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="iotaSubscript"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="kanaVoicing"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="left"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="notReordered"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nukta"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="overlay"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="right"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="virama"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Unicode.CanonicalCombiningClass" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Unicode.CanonicalCombiningClass" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Unicode.CanonicalCombiningClass" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Unicode.CanonicalCombiningClass" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.Scalar">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isASCII"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="properties"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf16"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf8"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="escaped"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="asASCII: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUTF8CodeUnits"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="write"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.Scalar.Properties">
                  <property
                     name="age"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="canonicalCombiningClass"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="changesWhenCaseFolded"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="changesWhenCaseMapped"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="changesWhenLowercased"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="changesWhenNFKCCaseFolded"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="changesWhenTitlecased"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="changesWhenUppercased"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="generalCategory"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isASCIIHexDigit"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isAlphabetic"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isBidiControl"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isBidiMirrored"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isCaseIgnorable"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isCased"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isDash"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isDefaultIgnorableCodePoint"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isDeprecated"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isDiacritic"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isEmoji"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isEmojiModifier"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isEmojiModifierBase"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isEmojiPresentation"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isExtender"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isFullCompositionExclusion"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isGraphemeBase"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isGraphemeExtend"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isHexDigit"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isIDContinue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isIDSBinaryOperator"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isIDSTrinaryOperator"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isIDStart"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isIdeographic"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isJoinControl"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isLogicalOrderException"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isLowercase"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isMath"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isNoncharacterCodePoint"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isPatternSyntax"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isPatternWhitespace"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isQuotationMark"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isRadical"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSentenceTerminal"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSoftDotted"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isTerminalPunctuation"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isUnifiedIdeograph"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isUppercase"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isVariationSelector"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isWhitespace"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isXIDContinue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isXIDStart"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lowercaseMapping"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="name"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nameAlias"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="numericType"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="numericValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="titlecaseMapping"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="uppercaseMapping"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Unicode.Scalar.UTF16View">
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Unicode.Scalar.UTF8View">
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Unicode.UTF16.ForwardParser">
               </Struct>
               <Struct name="Swift.Unicode.UTF16.ReverseParser">
               </Struct>
               <Struct name="Swift.Unicode.UTF32.Parser">
                  <func
                     name="parseScalar"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Unicode.ParseResult(Swift.CollectionOfOne(Swift.UInt32))"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.UTF8.ForwardParser">
               </Struct>
               <Struct name="Swift.Unicode.UTF8.ReverseParser">
               </Struct>
               <Struct name="Swift.Unmanaged">
                  <func
                     name="autorelease"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Unmanaged(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="fromOpaque"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.Unmanaged(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="passRetained"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.Unmanaged(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="passUnretained"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.Unmanaged(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="release"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="retain"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Unmanaged(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="takeRetainedValue"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="takeUnretainedValue"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="toOpaque"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnsafeMutableRawPointer"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeBufferPointer">
                  <property
                     name="baseAddress"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="deallocate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formIndex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withContiguousStorageIfAvailable"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withMemoryRebound"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafeBufferPointer(???) -> ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeBufferPointer.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeMutableBufferPointer">
                  <property
                     name="baseAddress"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="allocate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.UnsafeMutableBufferPointer(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="assign"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="repeating: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="deallocate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formIndex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="initialize"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(???B0.Iterator, Int)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="swapAt"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withContiguousMutableStorageIfAvailable"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withContiguousStorageIfAvailable"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withMemoryRebound"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafeMutableBufferPointer(???) -> ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeMutablePointer">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="pointee"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="allocate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.UnsafeMutablePointer(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="assign"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.UnsafePointer(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="deallocate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="deinitialize"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnsafeMutableRawPointer"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="initialize"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="move"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="moveAssign"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="moveInitialize"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withMemoryRebound"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafeMutablePointer(???) -> ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeMutableRawBufferPointer">
                  <property
                     name="baseAddress"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="allocate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.UnsafeMutableRawBufferPointer"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="bindMemory"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnsafeMutableBufferPointer(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="copyBytes"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="copyMemory"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="deallocate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="initializeMemory"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(unwritten: Self.Iterator, initialized: Swift.UnsafeMutableBufferPointer(Self.Element))"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="load"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromByteOffset: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnsafeRawBufferPointer.Iterator"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="storeBytes"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="toByteOffset: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="swapAt"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeMutableRawPointer">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="advanced"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnsafeMutableRawPointer"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="allocate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.UnsafeMutableRawPointer"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="bytes: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="alignedTo: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="assumingMemoryBound"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnsafeMutablePointer(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="bindMemory"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnsafeMutablePointer(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="copyBytes"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.UnsafeRawPointer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="copyMemory"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.UnsafeRawPointer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="byteCount: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="deallocate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="bytes: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="alignedTo: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="initializeMemory"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnsafeMutablePointer(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="at: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="load"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromByteOffset: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="moveInitializeMemory"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnsafeMutablePointer(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="storeBytes"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="toByteOffset: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UnsafePointer">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="pointee"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="deallocate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withMemoryRebound"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafePointer(???) -> ???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeRawBufferPointer">
                  <property
                     name="baseAddress"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="bindMemory"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnsafeBufferPointer(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="deallocate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="load"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromByteOffset: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnsafeRawBufferPointer.Iterator"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withUnsafeBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeRawBufferPointer.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt8?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeRawPointer">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="advanced"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnsafeRawPointer"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="assumingMemoryBound"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnsafePointer(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="bindMemory"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnsafePointer(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="deallocate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="load"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromByteOffset: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.Zip2Sequence">
                  <property
                     name="underestimatedCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Swift.Zip2Sequence.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(Self.Element, ???A1.Element)?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="Swift.CollectionDifference.Change">
               </Enum>
               <Enum name="Swift.CommandLine">
                  <property
                     name="argc"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="arguments"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="unsafeArgv"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Enum>
               <Enum name="Swift.DecodingError">
                  <func
                     name="dataCorruptedError"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.DecodingError"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.SingleValueDecodingContainer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="debugDescription: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.EncodingError">
               </Enum>
               <Enum name="Swift.FloatingPointClassification">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.FloatingPointClassification" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.FloatingPointClassification" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.FloatingPointRoundingRule">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.FloatingPointRoundingRule" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.FloatingPointRoundingRule" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.FloatingPointSign">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.FloatingPointSign" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.FloatingPointSign" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.MemoryLayout">
                  <property
                     name="alignment"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="size"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="stride"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="alignment"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="ofValue: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="offset"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Int?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Swift.PartialKeyPath(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="size"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="ofValue: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="stride"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="ofValue: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Mirror.AncestorRepresentation">
               </Enum>
               <Enum name="Swift.Mirror.DisplayStyle">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Mirror.DisplayStyle" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Mirror.DisplayStyle" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Never">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Never" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Never" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Never" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Never" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Optional">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="unsafelyUnwrapped"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="flatMap"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="map"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.Result">
                  <func
                     name="flatMap"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Result(???, ???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="flatMapError"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Result(Self, ???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="get"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="map"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Result(???, ???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="mapError"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Result(Self, ???)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Unicode">
               </Enum>
               <Enum name="Swift.Unicode.ASCII">
                  <property
                     name="encodedReplacementCharacter"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="decode"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.Unicode.Scalar"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.CollectionOfOne(Swift.UInt8)?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="transcode"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.CollectionOfOne(Swift.UInt8)?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Self.EncodedScalar" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Meta " type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.GeneralCategory">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Unicode.GeneralCategory" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Unicode.GeneralCategory" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.NumericType">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Unicode.NumericType" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Unicode.NumericType" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.ParseResult">
               </Enum>
               <Enum name="Swift.Unicode.UTF16">
                  <func
                     name="decode"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnicodeDecodingResult"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="into: Swift.UInt16" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isLeadSurrogate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isTrailSurrogate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="leadSurrogate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.UInt16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="trailSurrogate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.UInt16"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="transcodedLength"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="(count: Int, isASCII: Bool)?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="decodedAs: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="repairingIllFormedSequences: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="width"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.UTF32">
                  <property
                     name="encodedReplacementCharacter"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Unicode.UTF32" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.Unicode.UTF32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decode"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnicodeDecodingResult"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.Unicode.Scalar"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="into: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.UTF8">
                  <func
                     name="decode"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnicodeDecodingResult"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="into: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isContinuation"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.UnicodeDecodingResult">
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UnicodeDecodingResult" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.UnicodeDecodingResult" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
            </innerenums>
         </typedeclaration>
         <typedeclaration kind="protocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerprotocols>
               <Protocol name="Swift.AdditiveArithmetic">
                  <func
                     name="+"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="zero"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.BidirectionalCollection">
                  <func
                     name="distance"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="to: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formIndex"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="before: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Index"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="before: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Index?"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="offsetBy: Int" type="Named" isVariadic="False"/>
                           <parameter publicName="limitedBy: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Index"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="offsetBy: Int" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.BinaryFloatingPoint">
                  <func
                     name="binade"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="exponentBitCount"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="exponentBitPattern"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.RawExponent"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="significandBitCount"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="significandBitPattern"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.RawSignificand"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="significandWidth"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.BinaryInteger">
                  <func
                     name="%"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="%="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;&lt;"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;&lt;="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;&gt;"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;&gt;="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="^="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="bitWidth"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isMultiple"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isSigned"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="quotientAndRemainder"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(quotient: Self, remainder: Self)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="signum"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="trailingZeroBitCount"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="words"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Words"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="|"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="|="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="~"
                     operatorKind="Prefix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.CVarArg">
               </Protocol>
               <Protocol name="Swift.CaseIterable">
                  <func
                     name="allCases"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self.AllCases"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.CodingKey">
                  <func
                     name="intValue"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int?"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="stringValue"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Collection">
                  <func
                     name="count"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="distance"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="to: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="endIndex"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Index"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formIndex"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Index?"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="offsetBy: Int" type="Named" isVariadic="False"/>
                           <parameter publicName="limitedBy: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Index"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="offsetBy: Int" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Index"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="indices"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Indices"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isEmpty"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="startIndex"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Index"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subscript"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.SubSequence"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.Comparable">
                  <func
                     name="&lt;"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.CustomDebugStringConvertible">
                  <func
                     name="debugDescription"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.CustomLeafReflectable">
               </Protocol>
               <Protocol name="Swift.CustomPlaygroundDisplayConvertible">
                  <func
                     name="playgroundDescription"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Any"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.CustomReflectable">
                  <func
                     name="customMirror"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Mirror"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.CustomStringConvertible">
                  <func
                     name="description"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Decodable">
               </Protocol>
               <Protocol name="Swift.Decoder">
                  <func
                     name="codingPath"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Swift.CodingKey)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="container"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.KeyedDecodingContainer(???)"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="singleValueContainer"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.SingleValueDecodingContainer"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="unkeyedContainer"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnkeyedDecodingContainer"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="userInfo"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Dictionary(Swift.CodingUserInfoKey, Swift.Any)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Encodable">
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.Encoder">
                  <func
                     name="codingPath"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Swift.CodingKey)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="container"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.KeyedEncodingContainer(???)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="singleValueContainer"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.SingleValueEncodingContainer"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="unkeyedContainer"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnkeyedEncodingContainer"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="userInfo"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Dictionary(Swift.CodingUserInfoKey, Swift.Any)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Equatable">
                  <func
                     name="=="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.Error">
               </Protocol>
               <Protocol name="Swift.ExpressibleByArrayLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByBooleanLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByDictionaryLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByExtendedGraphemeClusterLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByFloatLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByIntegerLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByNilLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByStringInterpolation">
               </Protocol>
               <Protocol name="Swift.ExpressibleByStringLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByUnicodeScalarLiteral">
               </Protocol>
               <Protocol name="Swift.FixedWidthInteger">
                  <func
                     name="&amp;&lt;&lt;"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&lt;&lt;="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&amp;&gt;&gt;="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addingReportingOverflow"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Self, overflow: Bool)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Self" type="Named" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="bigEndian"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="bitWidth"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="byteSwapped"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="dividedReportingOverflow"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Self, overflow: Bool)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dividingFullWidth"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(quotient: Self, remainder: Self)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="(high: Self low: Self.Magnitude)" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="leadingZeroBitCount"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="littleEndian"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="max"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="min"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="multipliedFullWidth"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(high: Self, low: Self.Magnitude)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="multipliedReportingOverflow"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Self, overflow: Bool)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="nonzeroBitCount"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="remainderReportingOverflow"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Self, overflow: Bool)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="subtractingReportingOverflow"
                     operatorKind="None"
                     isStatic="False"
                     returnType="(partialValue: Self, overflow: Bool)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="partialValue: Self" type="Named" isVariadic="False"/>
                           <parameter publicName="overflow: Bool" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.FloatingPoint">
                  <func
                     name="/"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addProduct"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addingProduct"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="exponent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Exponent"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="floatingPointClass"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.FloatingPointClassification"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formRemainder"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formSquareRoot"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formTruncatingRemainder"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="greatestFiniteMagnitude"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="infinity"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isCanonical"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isEqual"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isFinite"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isInfinite"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isLess"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="than: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isLessThanOrEqualTo"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isNaN"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isNormal"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isSignalingNaN"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isSubnormal"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isTotallyOrdered"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="belowOrEqualTo: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isZero"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="leastNonzeroMagnitude"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="leastNormalMagnitude"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="maximum"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="maximumMagnitude"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="minimum"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="minimumMagnitude"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="nan"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="nextDown"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="nextUp"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="pi"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="radix"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="remainder"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="round"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="rounded"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="sign"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.FloatingPointSign"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="signalingNaN"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="significand"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="squareRoot"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="truncatingRemainder"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="ulp"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="ulpOfOne"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Hashable">
                  <func
                     name="hash"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hashValue"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Identifiable">
                  <func
                     name="id"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.ID"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.IteratorProtocol">
                  <func
                     name="next"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element?"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.KeyedDecodingContainerProtocol">
                  <func
                     name="allKeys"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Self.Key)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="codingPath"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Swift.CodingKey)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="contains"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt16"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.String" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt16"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta " type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int8"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int16"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int64"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int64" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int32"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int64"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int64" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt8"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt32"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt64"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt64" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int32"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt32"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt64?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt64" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt8?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt16?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.String" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta " type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int8?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt32?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int16?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int32?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int64?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int64" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt8?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt16?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int16?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.Int16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt32?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta Swift.UInt32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="decodeNil"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="nestedContainer"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.KeyedDecodingContainer(???)"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="nestedUnkeyedContainer"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnkeyedDecodingContainer"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="superDecoder"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Decoder"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="superDecoder"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Decoder"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.KeyedEncodingContainerProtocol">
                  <func
                     name="codingPath"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Swift.CodingKey)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int64" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Bool" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Double" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Float" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Int" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": UInt" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": ???" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": UInt" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt64" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": ???" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int32" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int16" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt8" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeConditional"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": ???" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt32?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt64?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int64?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt16?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Bool?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Double?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Float?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Int?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": UInt?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": ????" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int8?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int16?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int32?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Int64?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt8?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt16?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UInt32?" type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encodeNil"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="nestedContainer"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.KeyedEncodingContainer(???)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" isVariadic="False"/>
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="nestedUnkeyedContainer"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnkeyedEncodingContainer"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="superEncoder"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Encoder"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="superEncoder"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Encoder"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forKey: Self.Key" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.LazyCollectionProtocol">
               </Protocol>
               <Protocol name="Swift.LazySequenceProtocol">
                  <func
                     name="elements"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Elements"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.LosslessStringConvertible">
               </Protocol>
               <Protocol name="Swift.MirrorPath">
               </Protocol>
               <Protocol name="Swift.MutableCollection">
                  <func
                     name="partition"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Index"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Self.Element -> Bool" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="subscript"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.SubSequence"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="subscript"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.SubSequence" type="Named" isVariadic="False"/>
                           <parameter publicName="a: Swift.Range(Self.Index)" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="subscript"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subscript"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Element" type="Named" isVariadic="False"/>
                           <parameter publicName="a: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="swapAt"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withContiguousMutableStorageIfAvailable"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Element" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.Numeric">
                  <func
                     name="*"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                           <parameter publicName="Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="magnitude"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Magnitude"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.OptionSet">
               </Protocol>
               <Protocol name="Swift.RandomAccessCollection">
                  <func
                     name="distance"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="to: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Index?"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="offsetBy: Int" type="Named" isVariadic="False"/>
                           <parameter publicName="limitedBy: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Index"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Self.Index" type="Named" isVariadic="False"/>
                           <parameter publicName="offsetBy: Int" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.RandomNumberGenerator">
                  <func
                     name="next"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt64"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.RangeExpression">
                  <func
                     name="contains"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="relative"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Range(Self.Bound)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.RangeReplaceableCollection">
                  <func
                     name="remove"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="at: Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="removeAll"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keepingCapacity: Bool" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="removeAll"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="where: Self.Element -> Bool" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="removeFirst"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="removeFirst"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="removeSubrange"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Index" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="reserveCapacity"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.RawRepresentable">
                  <func
                     name="rawValue"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.RawValue"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.SIMD">
               </Protocol>
               <Protocol name="Swift.SIMDScalar">
               </Protocol>
               <Protocol name="Swift.SIMDStorage">
                  <func
                     name="scalarCount"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subscript"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Scalar"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subscript"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Scalar" type="Named" isVariadic="False"/>
                           <parameter publicName="a: Int" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.Sequence">
                  <func
                     name="makeIterator"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Iterator"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="underestimatedCount"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withContiguousStorageIfAvailable"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.Element" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.SetAlgebra">
                  <func
                     name="contains"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formIntersection"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="intersection"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isDisjoint"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="with: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isEmpty"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isSubset"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isSuperset"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remove"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Element?"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subtract"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subtracting"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.SignedInteger">
               </Protocol>
               <Protocol name="Swift.SignedNumeric">
                  <func
                     name="-"
                     operatorKind="Prefix"
                     isStatic="True"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="negate"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.SingleValueDecodingContainer">
                  <func
                     name="codingPath"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Swift.CodingKey)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt64"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt32"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt16"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt8"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int64"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int32"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int16"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int8"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeNil"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.SingleValueEncodingContainer">
                  <func
                     name="codingPath"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Swift.CodingKey)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encodeNil"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Strideable">
                  <func
                     name="advanced"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Self.Stride" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="distance"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Stride"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Self" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.StringInterpolationProtocol">
                  <func
                     name="appendLiteral"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.StringProtocol">
                  <func
                     name="hasPrefix"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="hasSuffix"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="lowercased"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="unicodeScalars"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.UnicodeScalarView"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="uppercased"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="utf16"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.UTF16View"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="utf8"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.UTF8View"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withCString"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="encodedAs: Meta " type="Named" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafePointer(???B1.CodeUnit) -> ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withCString"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withCString"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="encodedAs: Meta " type="Named" isVariadic="False"/>
                           <parameter publicName=": Swift.UnsafePointer(???B1.CodeUnit) -> ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.TextOutputStream">
                  <func
                     name="write"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.TextOutputStreamable">
                  <func
                     name="write"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.UnicodeCodec">
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnicodeDecodingResult"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="True"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Unicode.Scalar" type="Named" isVariadic="False"/>
                           <parameter publicName="into: Self.CodeUnit" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Swift.UnkeyedDecodingContainer">
                  <func
                     name="codingPath"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Swift.CodingKey)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="count"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int?"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="currentIndex"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt8"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int8"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int16"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int32"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int64"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt16"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt32"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt64"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int16"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt16"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt64?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt8?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt16?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="????"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int8?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt32?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int16?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int32?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int64?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt8?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt16?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Int16?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeIfPresent"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt32?"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="decodeNil"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isAtEnd"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="nestedContainer"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.KeyedDecodingContainer(???)"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="nestedUnkeyedContainer"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnkeyedDecodingContainer"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="superDecoder"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Decoder"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.UnkeyedEncodingContainer">
                  <func
                     name="codingPath"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Swift.CodingKey)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="count"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encodeConditional"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encodeNil"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="nestedContainer"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.KeyedEncodingContainer(???)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="keyedBy: Meta " type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="nestedUnkeyedContainer"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UnkeyedEncodingContainer"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="superEncoder"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Encoder"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.UnsignedInteger">
               </Protocol>
            </innerprotocols>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftCoreGraphics" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="CoreGraphics.CGAffineTransform">
               </Struct>
               <Struct name="CoreGraphics.CGFloat">
                  <property
                     name="binade"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="bitPattern"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="exponent"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="exponentBitCount"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="exponentBitPattern"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="floatingPointClass"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="greatestFiniteMagnitude"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="infinity"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isCanonical"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isFinite"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isInfinite"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isNaN"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isNormal"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSignaling"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSignalingNaN"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSubnormal"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isZero"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leastNonzeroMagnitude"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="leastNormalMagnitude"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="magnitude"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="max"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="min"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nan"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="native"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nextUp"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="pi"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="quietNaN"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="sign"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="signalingNaN"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significand"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significandBitCount"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significandBitPattern"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="significandWidth"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ulp"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="CoreGraphics.CGFloat"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="*="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="CoreGraphics.CGFloat"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="CoreGraphics.CGFloat"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="CoreGraphics.CGFloat"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addProduct"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="advanced"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="CoreGraphics.CGFloat"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="CoreGraphics.CGFloat"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formRemainder"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formSquareRoot"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formTruncatingRemainder"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="dividingBy: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isEqual"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isLess"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="than: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isLessThanOrEqualTo"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="negate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="round"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="CoreGraphics.CGPoint">
               </Struct>
               <Struct name="CoreGraphics.CGRect">
               </Struct>
               <Struct name="CoreGraphics.CGSize">
               </Struct>
               <Struct name="CoreGraphics.CGVector">
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="CoreGraphics.CGPathFillRule">
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftOSLogTestHelper" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="OSLogTestHelper.OSLogArguments">
                  <property
                     name="argumentClosures"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="append"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="OSLogTestHelper.OSLogIntegerFormatting">
                  <property
                     name="decimal"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="explicitPositiveSign"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hex"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="includePrefix"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="minDigits"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="octal"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="radix"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="uppercase"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="decimal"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="OSLogTestHelper.OSLogIntegerFormatting"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="explicitPositiveSign: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formatSpecifier"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="align: OSLogTestHelper.OSLogStringAlignment" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formatSpecifierLengthModifier"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.String?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="hex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="OSLogTestHelper.OSLogIntegerFormatting"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="explicitPositiveSign: Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="includePrefix: Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="uppercase: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="octal"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="OSLogTestHelper.OSLogIntegerFormatting"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="explicitPositiveSign: Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="includePrefix: Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="uppercase: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="OSLogTestHelper.OSLogInterpolation">
                  <property
                     name="argumentCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="arguments"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="formatString"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="preamble"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="totalBytesForSerializingArguments"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="addDoubleHeaders"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="addIntHeaders"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addNSObjectHeaders"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="addStringHeaders"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="appendInteger"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": () -> Self" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="format: OSLogTestHelper.OSLogIntegerFormatting" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="align: OSLogTestHelper.OSLogStringAlignment" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="appendLiteral"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="appendPrecisionArgument"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="getArgumentHeader"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="type: OSLogTestHelper.OSLogInterpolation.ArgumentType" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="getArugmentFlag"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="OSLogTestHelper.OSLogInterpolation.ArgumentFlag"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="getDoubleFormatSpecifier"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="getNSObjectFormatSpecifier"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="getStringFormatSpecifier"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="OSLogTestHelper.OSLogStringAlignment" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="getUpdatedPreamble"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt8"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="isScalar: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="OSLogTestHelper.OSLogMessage">
                  <property
                     name="bufferSize"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="interpolation"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="OSLogTestHelper.OSLogStringAlignment">
                  <property
                     name="anchor"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="left"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="minimumColumnWidth"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="none"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="right"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="OSLogTestHelper.OSLogCollectionBound">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="OSLogTestHelper.OSLogCollectionBound" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="OSLogTestHelper.OSLogCollectionBound" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="OSLogTestHelper.OSLogInterpolation.ArgumentFlag">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="OSLogTestHelper.OSLogInterpolation.ArgumentFlag" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="OSLogTestHelper.OSLogInterpolation.ArgumentFlag" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="OSLogTestHelper.OSLogInterpolation.ArgumentType">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="OSLogTestHelper.OSLogInterpolation.ArgumentType" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="OSLogTestHelper.OSLogInterpolation.ArgumentType" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="OSLogTestHelper.OSLogInterpolation.PreambleBitMask">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="OSLogTestHelper.OSLogInterpolation.PreambleBitMask" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="OSLogTestHelper.OSLogInterpolation.PreambleBitMask" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="OSLogTestHelper.OSLogPrivacy">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftStdlibUnittestFoundationExtras" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftRemoteMirror" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftCoreFoundation" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftReflectionTest" swiftVersion="??">
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="SwiftReflectionTest.InstanceKind">
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftDarwin" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="Darwin.DarwinBoolean">
                  <property
                     name="boolValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Darwin.DarwinBoolean" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Darwin.DarwinBoolean" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="Darwin.MachErrorCode">
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Enum>
               <Enum name="Darwin.POSIXErrorCode">
                  <property
                     name="ELAST"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EWOULDBLOCK"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftStdlibUnittest" swiftVersion="??">
         <typedeclaration kind="class" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerclasses>
               <Class name="StdlibUnittest.Box">
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Class>
               <Class name="StdlibUnittest.GenericMinimalHashableClass">
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="identity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.GenericMinimalHashableClass(???)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.GenericMinimalHashableClass(???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Class>
               <Class name="StdlibUnittest.LifetimeTracked">
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="identity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="instances"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="serialNumber"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.LifetimeTracked" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.LifetimeTracked" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="advanced"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="StdlibUnittest.LifetimeTracked"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: StdlibUnittest.LifetimeTracked" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Class>
               <Class name="StdlibUnittest.MinimalHashableClass">
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="equalImpl"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashIntoImpl"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="identity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timesEqualEqualWasCalled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timesHashIntoWasCalled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.MinimalHashableClass" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.MinimalHashableClass" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Class>
               <Class name="StdlibUnittest.ResettableValue">
                  <property
                     name="defaultValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="reset"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Class>
               <Class name="StdlibUnittest.TestSuite">
                  <func
                     name="setUp"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="tearDown"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Class>
               <Class name="StdlibUnittest.TypeIndexed">
                  <func
                     name="reset"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Class>
            </innerclasses>
         </typedeclaration>
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="StdlibUnittest.AssertionResult">
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="withDescription"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="StdlibUnittest.AssertionResult"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.CustomPrintableValue">
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescriptionImpl"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="descriptionImpl"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="identity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timesDebugDescriptionWasCalled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timesDescriptionWasCalled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="advanced"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="StdlibUnittest.CustomPrintableValue"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: StdlibUnittest.CustomPrintableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.GenericMinimalHashableValue">
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="identity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.GenericMinimalHashableValue(???)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.GenericMinimalHashableValue(???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.LinearCongruentialGenerator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt64"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.MinimalComparableValue">
                  <property
                     name="equalImpl"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="identity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lessImpl"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timesEqualEqualWasCalled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timesLessWasCalled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.MinimalComparableValue" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.MinimalComparableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.MinimalComparableValue" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.MinimalComparableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.MinimalEquatableValue">
                  <property
                     name="equalImpl"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="identity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timesEqualEqualWasCalled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.MinimalEquatableValue" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.MinimalEquatableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.MinimalHashableValue">
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="equalImpl"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashIntoImpl"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="identity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timesEqualEqualWasCalled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timesHashIntoWasCalled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.MinimalHashableValue" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.MinimalHashableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.MinimalStrideableValue">
                  <property
                     name="equalImpl"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="identity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lessImpl"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timesAdvancedWasCalled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timesDistanceWasCalled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timesEqualEqualWasCalled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timesLessWasCalled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="advanced"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="StdlibUnittest.MinimalStrideableValue"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.Observation1UInt">
                  <property
                     name="data1"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="StdlibUnittest.Observation3Int">
                  <property
                     name="data1"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data2"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data3"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="StdlibUnittest.Observation4Int">
                  <property
                     name="data1"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data2"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data3"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data4"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="StdlibUnittest.Observation4UInt">
                  <property
                     name="data1"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data2"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data3"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data4"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="StdlibUnittest.Observation5Int">
                  <property
                     name="data1"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data2"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data3"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data4"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data5"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="StdlibUnittest.Observation9Int">
                  <property
                     name="data1"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data2"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data3"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data4"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data5"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data6"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data7"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data8"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data9"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="StdlibUnittest.OpaqueValue">
                  <property
                     name="identity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="StdlibUnittest.SourceLoc">
                  <property
                     name="comment"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="file"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="line"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="withCurrentLoc"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="StdlibUnittest.SourceLocStack"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="line: UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.SourceLocStack">
                  <func
                     name="print"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="pushIf"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="StdlibUnittest.SourceLocStack"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Bool" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="file: Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="line: UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="with"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="StdlibUnittest.SourceLocStack"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withCurrentLoc"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="StdlibUnittest.SourceLocStack"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="file: Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="line: UInt" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.TypeIdentifier">
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="StdlibUnittest.ExpectedComparisonResult">
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="StdlibUnittest.ExpectedComparisonResult" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.ExpectedComparisonResult" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="flip"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="StdlibUnittest.ExpectedComparisonResult"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isEQ"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isGE"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isGT"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isLE"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isLT"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isNE"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Enum>
               <Enum name="StdlibUnittest.OSVersion">
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Enum>
               <Enum name="StdlibUnittest.RaceTestObservationEvaluation">
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Enum>
               <Enum name="StdlibUnittest.SwiftRuntime">
                  <func
                     name="metadataKind"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Self" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="StdlibUnittest.TestRunPredicate">
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="evaluate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Enum>
            </innerenums>
         </typedeclaration>
         <typedeclaration kind="protocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerprotocols>
               <Protocol name="StdlibUnittest.RaceTestWithPerTrialData">
                  <func
                     name="evaluateObservations"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Array(Self.Observation)" type="Named" isVariadic="False"/>
                           <parameter publicName="StdlibUnittest.RaceTestObservationEvaluation" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="makeRaceData"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.RaceData"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="makeThreadLocalData"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.ThreadLocalData"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="thread1"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Observation"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Self.RaceData" type="Named" isVariadic="False"/>
                           <parameter publicName="Self.ThreadLocalData" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
            </innerprotocols>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftPrivateLibcExtras" swiftVersion="??">
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="SwiftPrivateLibcExtras.ProcessTerminationStatus">
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftDifferentiationUnittest" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="DifferentiationUnittest.Tracked">
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
            </innerstructs>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftRuntimeUnittest" swiftVersion="??">
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="RuntimeUnittest.SwiftRuntimeUnitTest">
                  <func
                     name="testExclusivityBogusPC"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="testExclusivityNonNestedPC"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="testExclusivityNullPC"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="testExclusivityPCOne"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftPrivateThreadExtras" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswift_Differentiation" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="Swift.Array">
               </Struct>
               <Struct name="Swift.Double">
               </Struct>
               <Struct name="Swift.Float">
               </Struct>
               <Struct name="Swift.Float16">
               </Struct>
            </innerstructs>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftPrivate" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftFoundation" swiftVersion="??">
         <typedeclaration kind="class" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerclasses>
               <Class name="Foundation.Data.RangeReference">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lowerBound"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="range"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="upperBound"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Class>
               <Class name="Foundation.JSONDecoder">
                  <property
                     name="dataDecodingStrategy"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="dateDecodingStrategy"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="keyDecodingStrategy"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nonConformingFloatDecodingStrategy"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userInfo"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="decode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Meta " type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Foundation.Data" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Class>
               <Class name="Foundation.JSONEncoder">
                  <property
                     name="dataEncodingStrategy"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="dateEncodingStrategy"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="keyEncodingStrategy"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nonConformingFloatEncodingStrategy"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="outputFormatting"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userInfo"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.Data"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Class>
               <Class name="Foundation.NSKeyValueObservation">
                  <func
                     name="invalidate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Class>
               <Class name="Foundation.NSURL">
               </Class>
               <Class name="Foundation.PropertyListDecoder">
                  <property
                     name="userInfo"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Class>
               <Class name="Foundation.PropertyListEncoder">
                  <property
                     name="userInfo"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.Data"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Class>
            </innerclasses>
         </typedeclaration>
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="CoreGraphics.CGAffineTransform">
               </Struct>
               <Struct name="CoreGraphics.CGFloat">
               </Struct>
               <Struct name="CoreGraphics.CGPoint">
               </Struct>
               <Struct name="CoreGraphics.CGRect">
               </Struct>
               <Struct name="CoreGraphics.CGSize">
               </Struct>
               <Struct name="CoreGraphics.CGVector">
               </Struct>
               <Struct name="Dispatch.DispatchData">
               </Struct>
               <Struct name="Dispatch.DispatchData">
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="regions"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="withUnsafeBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.Calendar">
                  <property
                     name="amSymbol"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="autoupdatingCurrent"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="current"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="eraSymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="firstWeekday"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="identifier"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="locale"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="longEraSymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="minimumDaysInFirstWeek"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="monthSymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="pmSymbol"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="quarterSymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="shortMonthSymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="shortQuarterSymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="shortStandaloneMonthSymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="shortStandaloneQuarterSymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="shortStandaloneWeekdaySymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="shortWeekdaySymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="standaloneMonthSymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="standaloneQuarterSymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="standaloneWeekdaySymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timeZone"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="veryShortMonthSymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="veryShortStandaloneMonthSymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="veryShortStandaloneWeekdaySymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="veryShortWeekdaySymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="weekdaySymbols"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Calendar" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Calendar" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="compare"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.NSComparisonResult"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="toGranularity: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="component"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="components"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.DateComponents"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Foundation.TimeZone" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="date"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.Date?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="bySettingHour: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="minute: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="second: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="of: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="matchingPolicy: Foundation.Calendar.MatchingPolicy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="repeatedTimePolicy: Foundation.Calendar.RepeatedTimePolicy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="direction: Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dateComponents"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.DateComponents"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Foundation.TimeZone" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dateInterval"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.DateInterval?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="dateIntervalOfWeekend"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="containing: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="start: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="interval: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="enumerateDates"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="startingAfter: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="matching: Foundation.DateComponents" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="matchingPolicy: Foundation.Calendar.MatchingPolicy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="repeatedTimePolicy: Foundation.Calendar.RepeatedTimePolicy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="direction: Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="using: (Foundation.Date? Bool Bool)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="getEra"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="yearForWeekOfYear: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="weekOfYear: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="weekday: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="getHour"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="minute: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="second: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="nanosecond: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isDate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="inSameDayAs: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isDateInToday"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isDateInTomorrow"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isDateInWeekend"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isDateInYesterday"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="maximumRange"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Range(Int)?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="minimumRange"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Range(Int)?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="nextWeekend"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="startingAfter: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="start: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="interval: Double" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="direction: Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="ordinality"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="in: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="startOfDay"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.Date"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.CharacterSet">
                  <property
                     name="alphanumerics"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="bitmapRepresentation"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="capitalizedLetters"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="controlCharacters"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="decimalDigits"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="decomposables"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="illegalCharacters"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="inverted"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="letters"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lowercaseLetters"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="newlines"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nonBaseCharacters"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="punctuation"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="punctuationCharacters"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="symbols"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="uppercaseLetters"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="urlFragmentAllowed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="urlHostAllowed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="urlPasswordAllowed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="urlPathAllowed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="urlQueryAllowed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="urlUserAllowed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="whitespaces"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="whitespacesAndNewlines"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.CharacterSet" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.CharacterSet" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="contains"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formIntersection"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formSymmetricDifference"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formUnion"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="hasMember"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="inPlane: Swift.UInt8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="insert"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="charactersIn: Swift.ClosedRange(Swift.Unicode.Scalar)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="intersection"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.CharacterSet"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="invert"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="isSuperset"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Foundation.CharacterSet" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remove"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="charactersIn: Swift.ClosedRange(Swift.Unicode.Scalar)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="subtract"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="subtracting"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.CharacterSet"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="symmetricDifference"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.CharacterSet"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="union"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.CharacterSet"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="update"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Unicode.Scalar?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="with: Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.CocoaError">
                  <property
                     name="coderInvalidValue"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="coderReadCorrupt"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="coderReadCorruptError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="coderValueNotFound"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="coderValueNotFoundError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="errorDomain"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableArchitectureMismatch"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableArchitectureMismatchError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableLink"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableLinkError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableLoad"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableLoadError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableNotLoadable"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableNotLoadableError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableRuntimeMismatch"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableRuntimeMismatchError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="featureUnsupported"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="featureUnsupportedError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileLocking"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileLockingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileManagerUnmountBusy"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileManagerUnmountBusyError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileManagerUnmountUnknown"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileManagerUnmountUnknownError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileNoSuchFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileNoSuchFileError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="filePath"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadCorruptFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadCorruptFileError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadInapplicableStringEncoding"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadInapplicableStringEncodingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadInvalidFileName"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadInvalidFileNameError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadNoPermission"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadNoPermissionError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadNoSuchFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadNoSuchFileError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadTooLarge"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadTooLargeError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadUnknown"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadUnknownError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadUnknownStringEncoding"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadUnknownStringEncodingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadUnsupportedScheme"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadUnsupportedSchemeError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteFileExists"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteFileExistsError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteInapplicableStringEncoding"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteInapplicableStringEncodingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteInvalidFileName"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteInvalidFileNameError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteNoPermission"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteNoPermissionError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteOutOfSpace"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteOutOfSpaceError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteUnknown"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteUnknownError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteUnsupportedScheme"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteUnsupportedSchemeError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteVolumeReadOnly"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteVolumeReadOnlyError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="formatting"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="formattingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isCoderError"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isExecutableError"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isFileError"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isFormattingError"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isPropertyListError"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isUbiquitousFileError"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isUserActivityError"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isValidationError"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isXPCConnectionError"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="keyValueValidation"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="keyValueValidationError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListReadCorrupt"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListReadCorruptError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListReadStream"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListReadStreamError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListReadUnknownVersion"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListReadUnknownVersionError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListWriteInvalid"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListWriteInvalidError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListWriteStream"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListWriteStreamError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="stringEncoding"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousFileNotUploadedDueToQuota"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousFileNotUploadedDueToQuotaError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousFileUbiquityServerNotAvailable"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousFileUnavailable"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousFileUnavailableError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="underlying"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="url"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityConnectionUnavailable"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityConnectionUnavailableError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityHandoffFailed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityHandoffFailedError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityHandoffUserInfoTooLarge"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityHandoffUserInfoTooLargeError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityRemoteApplicationTimedOut"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityRemoteApplicationTimedOutError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userCancelled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userCancelledError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="xpcConnectionInterrupted"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="xpcConnectionInvalid"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="xpcConnectionReplyInvalid"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="error"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.Error"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Foundation.CocoaError.Code" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="userInfo: Swift.Dictionary(Swift.AnyHashable Swift.Any)?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="url: Foundation.URL?" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.CocoaError.Code">
                  <property
                     name="CoderReadCorruptError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="CoderValueNotFoundError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ExecutableArchitectureMismatchError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ExecutableLinkError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ExecutableLoadError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ExecutableNotLoadableError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ExecutableRuntimeMismatchError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FeatureUnsupportedError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileLockingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileManagerUnmountBusyError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileManagerUnmountUnknownError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileNoSuchFileError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileReadCorruptFileError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileReadInapplicableStringEncodingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileReadInvalidFileNameError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileReadNoPermissionError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileReadNoSuchFileError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileReadTooLargeError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileReadUnknownError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileReadUnknownStringEncodingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileReadUnsupportedSchemeError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileWriteFileExistsError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileWriteInapplicableStringEncodingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileWriteInvalidFileNameError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileWriteNoPermissionError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileWriteOutOfSpaceError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileWriteUnknownError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileWriteUnsupportedSchemeError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileWriteVolumeReadOnlyError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FormattingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="KeyValueValidationError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="PropertyListReadCorruptError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="PropertyListReadStreamError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="PropertyListReadUnknownVersionError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="PropertyListWriteInvalidError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="PropertyListWriteStreamError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="UbiquitousFileNotUploadedDueToQuotaError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="UbiquitousFileUbiquityServerNotAvailable"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="UbiquitousFileUnavailableError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="UserActivityConnectionUnavailableError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="UserActivityHandoffFailedError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="UserActivityHandoffUserInfoTooLargeError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="UserActivityRemoteApplicationTimedOutError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="UserCancelledError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="XPCConnectionInterrupted"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="XPCConnectionInvalid"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="XPCConnectionReplyInvalid"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="coderInvalidValue"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="coderReadCorrupt"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="coderReadCorruptError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="coderValueNotFound"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="coderValueNotFoundError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableArchitectureMismatch"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableArchitectureMismatchError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableLink"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableLinkError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableLoad"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableLoadError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableNotLoadable"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableNotLoadableError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableRuntimeMismatch"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="executableRuntimeMismatchError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="featureUnsupported"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="featureUnsupportedError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileLocking"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileLockingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileManagerUnmountBusy"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileManagerUnmountBusyError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileManagerUnmountUnknown"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileManagerUnmountUnknownError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileNoSuchFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileNoSuchFileError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadCorruptFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadCorruptFileError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadInapplicableStringEncoding"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadInapplicableStringEncodingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadInvalidFileName"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadInvalidFileNameError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadNoPermission"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadNoPermissionError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadNoSuchFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadNoSuchFileError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadTooLarge"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadTooLargeError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadUnknown"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadUnknownError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadUnknownStringEncoding"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadUnknownStringEncodingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadUnsupportedScheme"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileReadUnsupportedSchemeError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteFileExists"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteFileExistsError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteInapplicableStringEncoding"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteInapplicableStringEncodingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteInvalidFileName"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteInvalidFileNameError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteNoPermission"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteNoPermissionError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteOutOfSpace"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteOutOfSpaceError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteUnknown"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteUnknownError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteUnsupportedScheme"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteUnsupportedSchemeError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteVolumeReadOnly"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileWriteVolumeReadOnlyError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="formatting"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="formattingError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="keyValueValidation"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="keyValueValidationError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListReadCorrupt"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListReadCorruptError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListReadStream"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListReadStreamError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListReadUnknownVersion"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListReadUnknownVersionError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListWriteInvalid"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListWriteInvalidError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListWriteStream"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="propertyListWriteStreamError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousFileNotUploadedDueToQuota"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousFileNotUploadedDueToQuotaError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousFileUbiquityServerNotAvailable"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousFileUnavailable"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousFileUnavailableError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityConnectionUnavailable"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityConnectionUnavailableError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityHandoffFailed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityHandoffFailedError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityHandoffUserInfoTooLarge"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityHandoffUserInfoTooLargeError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityRemoteApplicationTimedOut"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userActivityRemoteApplicationTimedOutError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userCancelled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userCancelledError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="xpcConnectionInterrupted"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="xpcConnectionInvalid"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="xpcConnectionReplyInvalid"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Foundation.Data">
                  <property
                     name="bytes"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="indices"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="length"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="mutableBytes"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="regions"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Data" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Data" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="advanced"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.Data"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="append"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Swift.Array(Swift.UInt8)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="copyBytes"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableBufferPointer(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Swift.Range(Int)?" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="enumerateBytes"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.UnsafeBufferPointer(Swift.UInt8)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.Data.Iterator"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="replaceSubrange"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Swift.UnsafeRawPointer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="reserveCapacity"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="resetBytes"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="subdata"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.Data"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeMutableBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="???" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.Data.InlineData">
                  <property
                     name="bytes"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="capacity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="length"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="append"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="canStore"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="copyBytes"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableRawPointer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="replaceSubrange"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Swift.UnsafeRawPointer?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="resetBytes"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withUnsafeMutableBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.Data.InlineSlice">
                  <property
                     name="capacity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="range"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="slice"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="append"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="canStore"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="copyBytes"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableRawPointer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="ensureUniqueReference"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="replaceSubrange"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Swift.UnsafeRawPointer?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="reserveCapacity"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="resetBytes"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withUnsafeMutableBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.Data.Iterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.UInt8?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.Data.LargeSlice">
                  <property
                     name="capacity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="range"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="slice"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="append"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="contentsOf: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="copyBytes"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableRawPointer" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="from: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="ensureUniqueReference"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="replaceSubrange"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="with: Swift.UnsafeRawPointer?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="reserveCapacity"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="resetBytes"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="withUnsafeBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withUnsafeMutableBytes"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.Date">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="distantFuture"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="distantPast"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timeIntervalBetween1970AndReferenceDate"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timeIntervalSince1970"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timeIntervalSinceNow"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timeIntervalSinceReferenceDate"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timeIntervalSinceReferenceDate"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Foundation.Date"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Foundation.Date"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addTimeInterval"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="addingTimeInterval"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.Date"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="advanced"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.Date"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="by: Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="compare"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.NSComparisonResult"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="description"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="with: Foundation.Locale?" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="distance"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Double"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="timeIntervalSince"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Double"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.DateComponents">
                  <property
                     name="calendar"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="date"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="day"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="era"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hour"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isLeapMonth"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isValidDate"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="minute"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="month"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nanosecond"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="quarter"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="second"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timeZone"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="weekOfMonth"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="weekOfYear"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="weekday"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="weekdayOrdinal"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="year"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="yearForWeekOfYear"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.DateComponents" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.DateComponents" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isValidDate"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Foundation.Calendar" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="setValue"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Int?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="for: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="value"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.DateInterval">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="duration"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="end"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="start"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.DateInterval" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.DateInterval" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.DateInterval" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.DateInterval" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="compare"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.NSComparisonResult"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="contains"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="intersection"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.DateInterval?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="with: Foundation.DateInterval" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="intersects"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.ErrorUserInfoKey">
                  <property
                     name="NSURLErrorKey"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="filePathErrorKey"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="helpAnchorErrorKey"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="localizedDescriptionKey"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="localizedFailureReasonErrorKey"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="localizedRecoveryOptionsErrorKey"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="localizedRecoverySuggestionErrorKey"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="recoveryAttempterErrorKey"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="stringEncodingErrorKey"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="underlyingErrorKey"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Foundation.IndexPath">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Foundation.IndexPath"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="append"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="appending"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.IndexPath"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="compare"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.NSComparisonResult"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="dropLast"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.IndexPath"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.IndexingIterator(Foundation.IndexPath)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.IndexSet">
                  <property
                     name="count"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="first"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isEmpty"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="last"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rangeView"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexSet" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexSet" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="contains"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="integersIn: Foundation.IndexSet" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="count"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="filteredIndexSet"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.IndexSet"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="includeInteger: Int -> Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formIndex"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="formIntersection"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formSymmetricDifference"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="formUnion"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.IndexSet.Index"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="indexRange"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Range(Foundation.IndexSet.Index)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="insert"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="integersIn: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="integerGreaterThan"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="integerGreaterThanOrEqualTo"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="integerLessThan"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="integerLessThanOrEqualTo"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="intersection"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.IndexSet"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="intersects"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="integersIn: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.IndexingIterator(Foundation.IndexSet)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="rangeView"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.IndexSet.RangeView"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: Swift.Range(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="remove"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="integersIn: Swift.ClosedRange(Int)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="removeAll"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="shift"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="startingAt: Int" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="symmetricDifference"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.IndexSet"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="union"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.IndexSet"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="update"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="with: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.IndexSet.Index">
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&gt;="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.IndexSet.RangeView">
                  <property
                     name="endIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="startIndex"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.IndexSet.RangeView" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.IndexSet.RangeView" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="index"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="makeIterator"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.IndexingIterator(Foundation.IndexSet.RangeView)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.JSONEncoder.OutputFormatting">
                  <property
                     name="prettyPrinted"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="sortedKeys"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="withoutEscapingSlashes"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Foundation.Locale">
                  <property
                     name="alternateQuotationBeginDelimiter"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="alternateQuotationEndDelimiter"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="autoupdatingCurrent"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="availableIdentifiers"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="availableLocaleIdentifiers"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="calendar"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="collationIdentifier"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="collatorIdentifier"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="commonISOCurrencyCodes"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="countryCode"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="currencyCode"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="currencySymbol"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="current"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="decimalSeparator"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="exemplarCharacterSet"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="groupingSeparator"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="identifier"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isoCountryCodes"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isoCurrencyCodes"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isoLanguageCodes"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isoRegionCodes"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="languageCode"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="localeIdentifier"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="preferredLanguages"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="quotationBeginDelimiter"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="quotationEndDelimiter"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="regionCode"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="scriptCode"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="system"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="usesMetricSystem"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="variantCode"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Locale" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Locale" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="canonicalIdentifier"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="canonicalLanguageIdentifier"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="canonicalLocaleIdentifier"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="from: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="components"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.Dictionary(Swift.String, Swift.String)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromLocaleIdentifier: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="identifier"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.String?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromWindowsLocaleCode: Int" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="localeIdentifier"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.String?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromWindowsLocaleCode: Swift.UInt32" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="localizedString"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forLocaleIdentifier: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="windowsLocaleCode"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.UInt32"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="fromLocaleIdentifier: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.MachError">
                  <property
                     name="aborted"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="alreadyInSet"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="alreadyWaiting"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="codesignError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="defaultSet"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="errorDomain"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="exceptionProtected"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="failure"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="invalidAddress"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="invalidArgument"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="invalidCapability"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="invalidHost"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="invalidLedger"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="invalidMemoryControl"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="invalidName"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="invalidObject"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="invalidPolicy"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="invalidProcessorSet"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="invalidRight"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="invalidSecurity"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="invalidTask"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="invalidValue"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lockOwned"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lockOwnedSelf"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lockSetDestroyed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lockUnstable"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="memoryDataMoved"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="memoryError"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="memoryFailure"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="memoryPresent"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="memoryRestartCopy"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nameExists"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="noAccess"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="noSpace"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nodeDown"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="notDepressed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="notInSet"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="notReceiver"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="notSupported"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="notWaiting"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="operationTimedOut"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="policyLimit"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="policyStatic"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="protectionFailure"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="resourceShortage"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rightExists"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rpcContinueOrphan"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rpcServerTerminated"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rpcTerminateOrphan"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="semaphoreDestroyed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="success"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="terminated"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userReferencesOverflow"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Foundation.Measurement">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="unit"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="*"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Foundation.Measurement(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="+"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Foundation.Measurement(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="-"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Foundation.Measurement(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="/"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Foundation.Measurement(Self)"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Double" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="&lt;"
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Measurement(???)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Measurement(???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Measurement(???)" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Measurement(???)" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.NSDecimal">
               </Struct>
               <Struct name="Foundation.NSFastEnumerationIterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Any?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.NSIndexSetIterator">
                  <func
                     name="next"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.NSKeyValueObservedChange">
                  <property
                     name="indexes"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isPrior"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="kind"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="newValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="oldValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Foundation.Notification">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="object"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userInfo"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Notification" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Notification" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.POSIXError">
                  <property
                     name="E2BIG"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EACCES"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EADDRINUSE"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EADDRNOTAVAIL"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EAFNOSUPPORT"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EAGAIN"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EALREADY"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EAUTH"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EBADARCH"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EBADEXEC"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EBADF"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EBADMACHO"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EBADMSG"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EBADRPC"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EBUSY"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ECANCELED"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ECHILD"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ECONNABORTED"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ECONNREFUSED"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ECONNRESET"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EDEADLK"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EDESTADDRREQ"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EDEVERR"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EDOM"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EDQUOT"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EEXIST"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EFAULT"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EFBIG"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EFTYPE"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EHOSTDOWN"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EHOSTUNREACH"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EIDRM"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EILSEQ"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EINPROGRESS"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EINTR"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EINVAL"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EIO"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EISCONN"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EISDIR"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ELOOP"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EMFILE"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EMLINK"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EMSGSIZE"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EMULTIHOP"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENAMETOOLONG"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENEEDAUTH"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENETDOWN"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENETRESET"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENETUNREACH"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENFILE"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOATTR"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOBUFS"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENODATA"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENODEV"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOENT"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOEXEC"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOLCK"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOLINK"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOMEM"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOMSG"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOPOLICY"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOPROTOOPT"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOSPC"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOSR"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOSTR"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOSYS"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOTBLK"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOTCONN"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOTDIR"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOTEMPTY"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOTRECOVERABLE"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOTSOCK"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOTSUP"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENOTTY"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ENXIO"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EOVERFLOW"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EOWNERDEAD"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EPERM"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EPFNOSUPPORT"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EPIPE"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EPROCLIM"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EPROCUNAVAIL"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EPROGMISMATCH"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EPROGUNAVAIL"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EPROTO"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EPROTONOSUPPORT"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EPROTOTYPE"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EPWROFF"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EQFULL"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ERANGE"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EREMOTE"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EROFS"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ERPCMISMATCH"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ESHLIBVERS"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ESHUTDOWN"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ESOCKTNOSUPPORT"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ESPIPE"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ESRCH"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ESTALE"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ETIME"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ETIMEDOUT"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ETOOMANYREFS"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ETXTBSY"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EUSERS"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EWOULDBLOCK"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="EXDEV"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="errorDomain"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Foundation.PersonNameComponents">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="familyName"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="givenName"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="middleName"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="namePrefix"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nameSuffix"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nickname"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="phoneticRepresentation"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.PersonNameComponents" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.PersonNameComponents" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.TimeZone">
                  <property
                     name="abbreviationDictionary"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="autoupdatingCurrent"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="current"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="data"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="identifier"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="knownTimeZoneIdentifiers"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="name"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nextDaylightSavingTimeTransition"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timeZoneDataVersion"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.TimeZone" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.TimeZone" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="abbreviation"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="daylightSavingTimeOffset"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Double"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="isDaylightSavingTime"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="nextDaylightSavingTimeTransition"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.Date?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="after: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="secondsFromGMT"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.URL">
                  <property
                     name="absoluteString"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="absoluteURL"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="baseURL"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="dataRepresentation"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fragment"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hasDirectoryPath"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="host"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isFileURL"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="lastPathComponent"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="parameterString"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="password"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="path"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="pathComponents"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="pathExtension"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="port"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="query"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="relativePath"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="relativeString"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="resourceSpecifier"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="scheme"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="standardized"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="standardizedFileURL"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="user"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.URL" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.URL" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="appendPathComponent"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="isDirectory: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="appendPathExtension"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="appendingPathComponent"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.URL"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="isDirectory: Bool" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="appendingPathExtension"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.URL"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="bookmarkData"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Foundation.Data"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="withContentsOf: Foundation.URL" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="checkPromisedItemIsReachable"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="checkResourceIsReachable"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="deleteLastPathComponent"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="deletePathExtension"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="deletingLastPathComponent"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.URL"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="deletingPathExtension"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.URL"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="removeAllCachedResourceValues"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="resolveSymlinksInPath"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="resolvingSymlinksInPath"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.URL"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="setResourceValues"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="standardize"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="startAccessingSecurityScopedResource"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="stopAccessingSecurityScopedResource"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="withUnsafeFileSystemRepresentation"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="writeBookmarkData"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="True"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Foundation.Data" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="to: Foundation.URL" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.URLComponents">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fragment"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="host"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="password"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="path"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="percentEncodedFragment"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="percentEncodedHost"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="percentEncodedPassword"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="percentEncodedPath"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="percentEncodedQuery"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="percentEncodedQueryItems"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="percentEncodedUser"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="port"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="query"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="queryItems"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rangeOfFragment"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rangeOfHost"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rangeOfPassword"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rangeOfPath"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rangeOfPort"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rangeOfQuery"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rangeOfScheme"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rangeOfUser"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="scheme"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="string"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="url"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="user"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.URLComponents" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.URLComponents" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="url"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Foundation.URL?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="relativeTo: Foundation.URL?" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.URLError">
                  <property
                     name="AppTransportSecurityRequiresSecureConnection"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="BackgroundSessionInUseByAnotherProcess"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="BackgroundSessionRequiresSharedContainer"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="BackgroundSessionWasDisconnected"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="BadServerResponse"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="BadURL"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="CallIsActive"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="Cancelled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="CannotCloseFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="CannotConnectToHost"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="CannotCreateFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="CannotDecodeContentData"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="CannotDecodeRawData"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="CannotFindHost"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="CannotLoadFromNetwork"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="CannotMoveFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="CannotOpenFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="CannotParseResponse"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="CannotRemoveFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="CannotWriteToFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ClientCertificateRejected"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ClientCertificateRequired"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="DNSLookupFailed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="DataLengthExceedsMaximum"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="DataNotAllowed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="DownloadDecodingFailedMidStream"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="DownloadDecodingFailedToComplete"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileDoesNotExist"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="FileIsDirectory"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="HTTPTooManyRedirects"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="InternationalRoamingOff"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="NetworkConnectionLost"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="NoPermissionsToReadFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="NotConnectedToInternet"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="RedirectToNonExistentLocation"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="RequestBodyStreamExhausted"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ResourceUnavailable"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="SecureConnectionFailed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ServerCertificateHasBadDate"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ServerCertificateHasUnknownRoot"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ServerCertificateNotYetValid"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ServerCertificateUntrusted"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="TimedOut"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="Unknown"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="UnsupportedURL"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="UserAuthenticationRequired"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="UserCancelledAuthentication"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ZeroByteResource"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="appTransportSecurityRequiresSecureConnection"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="backgroundSessionInUseByAnotherProcess"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="backgroundSessionRequiresSharedContainer"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="backgroundSessionWasDisconnected"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="backgroundTaskCancelledReason"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="badServerResponse"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="badURL"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="callIsActive"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cancelled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotCloseFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotConnectToHost"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotCreateFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotDecodeContentData"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotDecodeRawData"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotFindHost"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotLoadFromNetwork"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotMoveFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotOpenFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotParseResponse"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotRemoveFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotWriteToFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="clientCertificateRejected"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="clientCertificateRequired"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="dataLengthExceedsMaximum"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="dataNotAllowed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="dnsLookupFailed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="downloadDecodingFailedMidStream"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="downloadDecodingFailedToComplete"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="downloadTaskResumeData"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="errorDomain"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="failingURL"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="failureURLString"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileDoesNotExist"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileIsDirectory"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="httpTooManyRedirects"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="internationalRoamingOff"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="networkConnectionLost"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="networkUnavailableReason"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="noPermissionsToReadFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="notConnectedToInternet"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="redirectToNonExistentLocation"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="requestBodyStreamExhausted"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="resourceUnavailable"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="secureConnectionFailed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="serverCertificateHasBadDate"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="serverCertificateHasUnknownRoot"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="serverCertificateNotYetValid"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="serverCertificateUntrusted"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timedOut"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="unknown"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="unsupportedURL"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userAuthenticationRequired"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userCancelledAuthentication"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="zeroByteResource"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Foundation.URLError.Code">
                  <property
                     name="appTransportSecurityRequiresSecureConnection"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="backgroundSessionInUseByAnotherProcess"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="backgroundSessionRequiresSharedContainer"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="backgroundSessionWasDisconnected"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="badServerResponse"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="badURL"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="callIsActive"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cancelled"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotCloseFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotConnectToHost"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotCreateFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotDecodeContentData"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotDecodeRawData"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotFindHost"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotLoadFromNetwork"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotMoveFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotOpenFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotParseResponse"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotRemoveFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="cannotWriteToFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="clientCertificateRejected"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="clientCertificateRequired"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="dataLengthExceedsMaximum"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="dataNotAllowed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="dnsLookupFailed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="downloadDecodingFailedMidStream"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="downloadDecodingFailedToComplete"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileDoesNotExist"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileIsDirectory"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="httpTooManyRedirects"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="internationalRoamingOff"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="networkConnectionLost"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="noPermissionsToReadFile"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="notConnectedToInternet"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="redirectToNonExistentLocation"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="requestBodyStreamExhausted"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="resourceUnavailable"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="secureConnectionFailed"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="serverCertificateHasBadDate"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="serverCertificateHasUnknownRoot"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="serverCertificateNotYetValid"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="serverCertificateUntrusted"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timedOut"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="unknown"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="unsupportedURL"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userAuthenticationRequired"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="userCancelledAuthentication"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="zeroByteResource"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Foundation.URLQueryItem">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="name"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="value"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.URLQueryItem" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.URLQueryItem" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.URLRequest">
                  <property
                     name="allHTTPHeaderFields"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="allowsCellularAccess"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="allowsConstrainedNetworkAccess"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="allowsExpensiveNetworkAccess"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="httpBody"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="httpMethod"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="httpShouldHandleCookies"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="httpShouldUsePipelining"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="mainDocumentURL"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="timeoutInterval"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="url"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.URLRequest" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.URLRequest" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="addValue"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forHTTPHeaderField: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="setValue"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName=": Swift.String?" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="forHTTPHeaderField: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="value"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String?"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="forHTTPHeaderField: Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Foundation.URLResourceValues">
                  <property
                     name="addedToDirectoryDate"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="attributeModificationDate"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="canonicalPath"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="contentAccessDate"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="contentModificationDate"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="creationDate"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="documentIdentifier"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileAllocatedSize"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="fileSize"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hasHiddenExtension"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isAliasFile"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isApplication"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isDirectory"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isExcludedFromBackup"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isExecutable"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isHidden"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isMountTrigger"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isPackage"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isReadable"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isRegularFile"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSymbolicLink"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isSystemImmutable"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isUbiquitousItem"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isUserImmutable"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isVolume"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isWritable"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="labelNumber"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="linkCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="localizedLabel"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="localizedName"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="localizedTypeDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="name"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="parentDirectory"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="path"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="preferredIOBlockSize"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="totalFileAllocatedSize"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="totalFileSize"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="typeIdentifier"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousItemContainerDisplayName"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousItemDownloadRequested"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousItemHasUnresolvedConflicts"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousItemIsDownloading"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousItemIsUploaded"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="ubiquitousItemIsUploading"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volume"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeAvailableCapacity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeCreationDate"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeIsAutomounted"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeIsBrowsable"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeIsEjectable"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeIsEncrypted"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeIsInternal"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeIsJournaling"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeIsLocal"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeIsReadOnly"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeIsRemovable"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeIsRootFileSystem"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeLocalizedFormatDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeLocalizedName"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeMaximumFileSize"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeName"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeResourceCount"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsAccessPermissions"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsAdvisoryFileLocking"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsCasePreservedNames"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsCaseSensitiveNames"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsCompression"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsExclusiveRenaming"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsExtendedSecurity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsFileCloning"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsHardLinks"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsImmutableFiles"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsJournaling"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsPersistentIDs"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsRenaming"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsRootDirectoryDates"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsSparseFiles"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsSwapRenaming"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsSymbolicLinks"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsVolumeSizes"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeSupportsZeroRuns"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeTotalCapacity"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeURLForRemounting"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="volumeUUIDString"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Struct>
               <Struct name="Foundation.UUID">
                  <property
                     name="customMirror"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="debugDescription"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="uuid"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="uuidString"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.UUID" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.UUID" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="encode"
                     hasThrows="True"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.AnyHashable">
               </Struct>
               <Struct name="Swift.Array">
               </Struct>
               <Struct name="Swift.Bool">
               </Struct>
               <Struct name="Swift.CollectionDifference">
               </Struct>
               <Struct name="Swift.Dictionary">
               </Struct>
               <Struct name="Swift.Double">
               </Struct>
               <Struct name="Swift.Float">
               </Struct>
               <Struct name="Swift.Int">
               </Struct>
               <Struct name="Swift.Int16">
               </Struct>
               <Struct name="Swift.Int32">
               </Struct>
               <Struct name="Swift.Int64">
               </Struct>
               <Struct name="Swift.Int8">
               </Struct>
               <Struct name="Swift.Set">
               </Struct>
               <Struct name="Swift.String">
                  <property
                     name="ascii"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="description"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="iso2022JP"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isoLatin1"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="isoLatin2"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="japaneseEUC"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="macOSRoman"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nextstep"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="nonLossyASCII"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="shiftJIS"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="symbol"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="unicode"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf16"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf16BigEndian"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf16LittleEndian"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf32"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf32BigEndian"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf32LittleEndian"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="utf8"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="windowsCP1250"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="windowsCP1251"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="windowsCP1252"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="windowsCP1253"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <property
                     name="windowsCP1254"
                     isStatic="True"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Struct>
               <Struct name="Swift.String">
               </Struct>
               <Struct name="Swift.Substring">
               </Struct>
               <Struct name="Swift.UInt">
               </Struct>
               <Struct name="Swift.UInt16">
               </Struct>
               <Struct name="Swift.UInt32">
               </Struct>
               <Struct name="Swift.UInt64">
               </Struct>
               <Struct name="Swift.UInt8">
               </Struct>
               <Struct name="Swift.UnsafeMutableRawBufferPointer">
               </Struct>
               <Struct name="Swift.UnsafeRawBufferPointer">
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="Darwin.MachErrorCode">
               </Enum>
               <Enum name="Darwin.POSIXErrorCode">
               </Enum>
               <Enum name="Foundation.Calendar.Component">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Foundation.Calendar.Identifier">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Calendar.Identifier" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Calendar.Identifier" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Foundation.Calendar.MatchingPolicy">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Calendar.MatchingPolicy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Calendar.MatchingPolicy" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Foundation.Calendar.RepeatedTimePolicy">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Calendar.RepeatedTimePolicy" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Calendar.RepeatedTimePolicy" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Foundation.Calendar.SearchDirection">
                  <property
                     name="hashValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
                  <func
                     name="=="
                     hasThrows="False"
                     operatorKind="Infix"
                     isStatic="True"
                     returnType="Bool"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False"/>
                           <parameter publicName="Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="hash"
                     hasThrows="False"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Enum>
               <Enum name="Foundation.Data.Deallocator">
               </Enum>
               <Enum name="Foundation.JSONDecoder.DataDecodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONDecoder.DateDecodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONDecoder.KeyDecodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONDecoder.NonConformingFloatDecodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONEncoder.DataEncodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONEncoder.DateEncodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONEncoder.KeyEncodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONEncoder.NonConformingFloatEncodingStrategy">
               </Enum>
               <Enum name="Foundation.URLError.BackgroundTaskCancelledReason">
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Enum>
               <Enum name="Foundation.URLError.NetworkUnavailableReason">
                  <property
                     name="rawValue"
                     isStatic="False"
                     accessibility="True"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     type="Named"
                     storage="Addressed"/>
               </Enum>
               <Enum name="Swift.DecodingError">
               </Enum>
               <Enum name="Swift.EncodingError">
               </Enum>
            </innerenums>
         </typedeclaration>
         <typedeclaration kind="protocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerprotocols>
               <Protocol name="Foundation.ContiguousBytes">
                  <func
                     name="withUnsafeBytes"
                     operatorKind="None"
                     isStatic="False"
                     returnType="???"
                     hasThrows="True"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Foundation.CustomNSError">
                  <func
                     name="errorCode"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="errorDomain"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.String"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="errorUserInfo"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Dictionary(Swift.String, Swift.Any)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Foundation.DataProtocol">
                  <func
                     name="copyBytes"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableBufferPointer(???)" type="Named" isVariadic="False"/>
                           <parameter publicName="from: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="copyBytes"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableRawBufferPointer" type="Named" isVariadic="False"/>
                           <parameter publicName="from: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="copyBytes"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableBufferPointer(???)" type="Named" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="copyBytes"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Int"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="to: Swift.UnsafeMutableRawBufferPointer" type="Named" isVariadic="False"/>
                           <parameter publicName="count: Int" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="firstRange"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Range(Self.Index)?"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: ???" type="Named" isVariadic="False"/>
                           <parameter publicName="in: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="lastRange"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Range(Self.Index)?"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="of: ???" type="Named" isVariadic="False"/>
                           <parameter publicName="in: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="regions"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Self.Regions"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Foundation.LocalizedError">
                  <func
                     name="errorDescription"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String?"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="failureReason"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String?"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="helpAnchor"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String?"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
                  <func
                     name="recoverySuggestion"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.String?"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Foundation.MutableDataProtocol">
                  <func
                     name="resetBytes"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="in: ???" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Foundation.NSKeyValueObservingCustomization">
                  <func
                     name="automaticallyNotifiesObservers"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Swift.AnyKeyPath" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="keyPathsAffectingValue"
                     operatorKind="None"
                     isStatic="True"
                     returnType="Swift.Set(Swift.AnyKeyPath)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="for: Swift.AnyKeyPath" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
               </Protocol>
               <Protocol name="Foundation.RecoverableError">
                  <func
                     name="attemptRecovery"
                     operatorKind="None"
                     isStatic="False"
                     returnType=""
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="optionIndex: Int" type="Named" isVariadic="False"/>
                           <parameter publicName="resultHandler: Bool" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="attemptRecovery"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Bool"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                     <parameterlists>
                        <parameterlist index="0">
                           <parameter publicName="optionIndex: Int" type="Named" isVariadic="False"/>
                        </parameterlist>
                     </parameterlists>
                  </func>
                  <func
                     name="recoveryOptions"
                     operatorKind="None"
                     isStatic="False"
                     returnType="Swift.Array(Swift.String)"
                     hasThrows="False"
                     accessibility="Public"
                     isProperty="False"
                     isFinal="False"
                     isDeprecated="False"
                     isUnavailable="False"
                     isOptional="False"
                     isRequired="False"
                     isConvenienceInit="False"
                     objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Foundation.ReferenceConvertible">
               </Protocol>
            </innerprotocols>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftOnoneSupport" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libclang_rt" swiftVersion="??">
      </Module>
   </modulelist>
</xamreflect>
