<?xml version="1.0" encoding="utf-8"?>
<xamreflect version="1.0">
   <modulelist>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftCore" swiftVersion="5.0">
         <typedeclaration kind="class" name="Swift.AnyKeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="rootType" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Any" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="valueType" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Any" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.AnyKeyPath" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.AnyKeyPath" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="class" name="Swift.AnyObject" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="class" name="Swift.KeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="class" name="Swift.ManagedBuffer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="firstElementAddress" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UnsafeMutablePointer<T1>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="header" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="headerAddress" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UnsafeMutablePointer<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="create" hasThrows="True" operatorKind="None" isStatic="True" returnType="Swift.ManagedBuffer<T0, T1>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="minimumCapacity" privateName="minimumCapacity" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="makingHeaderWith" privateName="makingHeaderWith" type="Swift.ManagedBuffer<T0, T1>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeMutablePointerToElements" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutablePointer<T1>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeMutablePointerToHeader" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutablePointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeMutablePointers" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutablePointer<T0>" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutablePointer<T1>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="class" name="Swift.PartialKeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="class" name="Swift.ReferenceWritableKeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="class" name="Swift.WritableKeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AnyBidirectionalCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="drop" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.AnyBidirectionalCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="while" privateName="while" type="T0 -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyBidirectionalCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropLast" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyBidirectionalCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="filter" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Array<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="forEach" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> ()" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyIndex" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyIterator<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="map" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Array<U0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="prefix" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.AnyBidirectionalCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="while" privateName="while" type="T0 -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="suffix" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyBidirectionalCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AnyCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="drop" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.AnyCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="while" privateName="while" type="T0 -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropLast" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="filter" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Array<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="forEach" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> ()" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyIndex" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyIterator<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="map" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Array<U0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="prefix" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.AnyCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="while" privateName="while" type="T0 -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="suffix" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AnyHashable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Any" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.AnyHashable" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.AnyHashable" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AnyIndex" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AnyIterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AnyRandomAccessCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.AnyIndex" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="drop" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.AnyRandomAccessCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="while" privateName="while" type="T0 -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyRandomAccessCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropLast" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyRandomAccessCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="filter" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Array<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="forEach" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> ()" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyIndex" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyIterator<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="map" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Array<U0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="prefix" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.AnyRandomAccessCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="while" privateName="while" type="T0 -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="suffix" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyRandomAccessCollection<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AnySequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="drop" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.AnySequence<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="while" privateName="while" type="T0 -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnySequence<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dropLast" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Array<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="filter" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Array<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="forEach" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> ()" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.AnyIterator<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="map" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Array<U0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="prefix" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Array<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="while" privateName="while" type="T0 -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="suffix" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Array<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Array" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Array<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Array<T0>" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Array<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Array<T0>" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Array<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remove" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="at" privateName="at" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacityForAppend" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="newElementsCount" privateName="newElementsCount" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withContiguousMutableStorageIfAvailable" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutableBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withContiguousStorageIfAvailable" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeBufferPointer" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeBytes" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeRawBufferPointer -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeMutableBufferPointer" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutableBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeMutableBytes" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutableRawBufferPointer -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.ArraySlice" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remove" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="at" privateName="at" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacityForAppend" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="newElementsCount" privateName="newElementsCount" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withContiguousMutableStorageIfAvailable" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutableBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withContiguousStorageIfAvailable" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeBufferPointer" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeBytes" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeRawBufferPointer -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeMutableBufferPointer" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutableBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeMutableBytes" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutableRawBufferPointer -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.AutoreleasingUnsafeMutablePointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="pointee" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Bool" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="!" hasThrows="False" operatorKind="Prefix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&amp;" hasThrows="True" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Bool" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="() -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Bool" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="random" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="using" privateName="using" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="toggle" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="||" hasThrows="True" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Bool" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="() -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.CVaListPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Character" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="asciiValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.UInt8>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hexDigitValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isASCII" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isCased" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isCurrencySymbol" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isHexDigit" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isLetter" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isLowercase" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isMathSymbol" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isNewline" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isNumber" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isPunctuation" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isSymbol" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isUppercase" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isWhitespace" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isWholeNumber" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="unicodeScalars" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.UnicodeScalarView" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="utf16" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.UTF16View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="utf8" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.UTF8View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="wholeNumberValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Character" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Character" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Character" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Character" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="lowercased" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="uppercased" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.ClosedRange" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="lowerBound" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="upperBound" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.ClosedRange<T0>" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.ClosedRange<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="clamped" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.ClosedRange<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.ClosedRange<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="overlaps" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.ClosedRange<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Range<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.CodingUserInfoKey" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="rawValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.CodingUserInfoKey" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.CodingUserInfoKey" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.CollectionDifference" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="inverse" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.CollectionDifference<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.CollectionDifference.Index" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.CollectionOfOne" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.CollectionOfOne.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.ContiguousArray" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remove" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="at" privateName="at" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacityForAppend" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="newElementsCount" privateName="newElementsCount" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withContiguousMutableStorageIfAvailable" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutableBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withContiguousStorageIfAvailable" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeBufferPointer" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeBytes" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeRawBufferPointer -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeMutableBufferPointer" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutableBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeMutableBytes" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutableRawBufferPointer -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.DecodingError.Context" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="codingPath" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Array<Swift.CodingKey>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="underlyingError" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.Error>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.DefaultIndicies" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0A0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.DefaultIndicies<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0A0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0A0.Index" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.DefaultStringInterpolation" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="appendInterpolation" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="appendLiteral" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="make" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Dictionary" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="compactMapValues" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Dictionary<T0, U0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T1 -> Swift.Optional<U0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="filter" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Dictionary<T0, T1>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="(key" privateName="(key" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="mapValues" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Dictionary<T0, U0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T1 -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="popFirst" hasThrows="False" operatorKind="None" isStatic="False" returnType="(key: T0, value: T1)?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="removeAll" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeValue" hasThrows="False" operatorKind="None" isStatic="False" returnType="T1?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Dictionary.Index" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Dictionary.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="(key: T0, value: T1)?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Dictionary.Keys" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Dictionary.Keys.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Dictionary.Values" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Dictionary.Values.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T1?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Double" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="binade" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="bitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt64" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="exponent" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="exponentBitCount" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="exponentBitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="greatestFiniteMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="infinity" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isCanonical" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isFinite" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isInfinite" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isNaN" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isNormal" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isSignMinus" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isSignalingNaN" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isSubnormal" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isZero" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leastNonzeroMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leastNormalMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nan" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nextUp" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="pi" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="quietNaN" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="sign" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.FloatingPointSign" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="signalingNaN" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="significand" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="significandBitCount" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="significandBitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt64" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="significandWidth" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="ulp" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="ulpOfOne" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Double" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Double" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Double" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Double" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Double" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Double" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Double" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Double" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Double" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Double" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Double" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Double" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Double" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addProduct" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Double" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="advanced" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Double" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Double" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formRemainder" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formSquareRoot" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="formTruncatingRemainder" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isEqual" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLess" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="than" privateName="than" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLessThanOrEqualTo" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="negate" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="round" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.FloatingPointRoundingRule" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Double.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Double.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Double.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Double.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Double.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Double.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.DropFirstSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.DropFirstSequence<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0A0.Iterator" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.DropWhileSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="drop" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.DropWhileSequence<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="while" privateName="while" type="T0A0.Element -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.DropWhileSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0A0.Element?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.EmptyCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.EmptyCollection<T0>" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.EmptyCollection<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.EmptyCollection.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.EncodingError.Context" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="codingPath" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Array<Swift.CodingKey>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="underlyingError" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.Error>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.EnumeratedSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.EnumeratedSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="(offset: Swift.Int, element: T0A0.Element)?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.FlattenSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.FlattenSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0A0.Element.Element?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="binade" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="bitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="exponent" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="exponentBitCount" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="exponentBitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="greatestFiniteMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="infinity" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isCanonical" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isFinite" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isInfinite" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isNaN" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isNormal" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isSignMinus" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isSignalingNaN" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isSubnormal" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isZero" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leastNonzeroMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leastNormalMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nan" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nextUp" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="pi" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="quietNaN" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="sign" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.FloatingPointSign" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="signalingNaN" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="significand" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="significandBitCount" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="significandBitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="significandWidth" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="ulp" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="ulpOfOne" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Float" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Float" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Float" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Float" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addProduct" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="advanced" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Float" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Float" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formRemainder" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formSquareRoot" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="formTruncatingRemainder" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isEqual" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLess" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="than" privateName="than" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLessThanOrEqualTo" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="negate" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="round" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.FloatingPointRoundingRule" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float16" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="binade" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="bitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="exponent" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="exponentBitCount" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="exponentBitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="greatestFiniteMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="infinity" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isCanonical" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isFinite" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isInfinite" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isNaN" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isNormal" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isSignMinus" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isSignalingNaN" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isSubnormal" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isZero" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leastNonzeroMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leastNormalMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nan" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nextUp" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="pi" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="quietNaN" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="sign" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.FloatingPointSign" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="signalingNaN" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="significand" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="significandBitCount" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="significandBitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="significandWidth" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="ulp" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="ulpOfOne" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Float16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Float16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Float16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Float16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Float16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addProduct" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="advanced" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Float16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Float16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formRemainder" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formSquareRoot" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="formTruncatingRemainder" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isEqual" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLess" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="than" privateName="than" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLessThanOrEqualTo" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="negate" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="round" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.FloatingPointRoundingRule" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float16.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float16.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float16.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float16.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float16.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float16.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Float80" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Hasher" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="combine" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="bytes" privateName="bytes" type="Swift.UnsafeRawBufferPointer" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="finalize" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.IndexingIterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0A0.Element?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="advanced" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(quotient: Swift.Int, remainder: Int)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="(high" privateName="(high" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(high: Swift.Int, low: Swift.UInt)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Range<Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int16" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int16.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int16, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int16, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(quotient: Swift.Int16, remainder: Swift.Int16)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="(high" privateName="(high" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(high: Swift.Int16, low: Swift.UInt16)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int16, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int16, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int16, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int16.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int16.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int16.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int16.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int16.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int16.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int16.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Range<Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int32" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int32.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int32, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int32, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(quotient: Swift.Int32, remainder: Swift.Int32)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="(high" privateName="(high" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(high: Swift.Int32, low: Swift.UInt32)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int32, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int32, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int32, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int32.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int32.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int32.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int32.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int32.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int32.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int32.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Range<Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int64" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int64" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt64" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int64.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int64, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int64, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(quotient: Swift.Int64, remainder: Swift.Int64)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="(high" privateName="(high" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(high: Swift.Int64, low: Swift.UInt64)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int64, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int64, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int64, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int64.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int64.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int64.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int64.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int64.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int64.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int64.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Range<Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int8" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int8" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt8" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int8.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int8, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int8, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(quotient: Swift.Int8, remainder: Swift.Int8)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="(high" privateName="(high" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(high: Swift.Int8, low: Swift.UInt8)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int8, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int8, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.Int8, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Int8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int8.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int8.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int8.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int8.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int8.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int8.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Int8.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Range<Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.IteratorSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0A0.Element?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.JoinedSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.JoinedSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0A0.Element.Element?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.KeyValuePairs" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.KeyedDecodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="allKeys" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Array<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="codingPath" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Array<Swift.CodingKey>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.String" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.String?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeNil" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedContainer" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.KeyedDecodingContainer<U0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedUnkeyedContainer" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedDecodingContainer" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="superDecoder" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Decoder" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.KeyedEncodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="codingPath" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Array<Swift.CodingKey>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeConditional" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="U0" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Swift.String>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeNil" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedContainer" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.KeyedEncodingContainer<U0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedUnkeyedContainer" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedEncodingContainer" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="superEncoder" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Encoder" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="forKey" privateName="forKey" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.LazyDropWhileSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.LazyDropWhileSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0A0.Element?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.LazyFilterSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="filter" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.LazyFilterSequence<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Element -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.LazyFilterSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0A0.Iterator" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0A0.Element?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.LazyMapSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="map" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.LazyMapSequence<T0, U0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T1 -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.LazyMapSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0A0.Iterator" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T1?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.LazyPrefixWhileSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.LazyPrefixWhileSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0A0.Element?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.LazySequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="elements" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0A0.Iterator" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.ManagedBufferPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="buffer" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.AnyObject" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="header" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.ManagedBufferPointer<T0, T1>" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.ManagedBufferPointer<T0, T1>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isUniqueReference" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="withUnsafeMutablePointerToElements" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutablePointer<T1>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeMutablePointerToHeader" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutablePointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeMutablePointers" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutablePointer<T0>" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutablePointer<T1>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Mirror" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="children" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.AnyCollection<(label: Swift.Optional<Swift.String>, value: Swift.Any)>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="displayStyle" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.Mirror.DisplayStyle>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="subjectType" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Any" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="superclassMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.Mirror>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="descendant" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Any?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.MirrorPath" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Array<Swift.MirrorPath>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.ObjectIdentifier" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.ObjectIdentifier" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.ObjectIdentifier" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.ObjectIdentifier" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.ObjectIdentifier" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.OpaquePointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.OpaquePointer" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.OpaquePointer" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.PartialRangeFrom" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="lowerBound" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Range<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.PartialRangeThrough" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="upperBound" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Range<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.PartialRangeUpTo" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="upperBound" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Range<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.PrefixSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="prefix" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.PrefixSequence<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.PrefixSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0A0.Element?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Range" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="lowerBound" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="upperBound" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Range<T0>" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Range<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="clamped" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Range<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Range<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="overlaps" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.ClosedRange<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Range<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Repeated" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="repeatedValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.ReversedCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="reversed" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.ReversedCollection.Index" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0A0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.ReversedCollection.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0A0.Element?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMD16" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD8<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD8<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD8<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD8<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMD2" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="x" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="y" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMD3" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="x" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="y" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="z" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMD32" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD16<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD16<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD16<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD16<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMD4" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD2<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD2<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD2<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD2<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="w" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="x" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="y" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="z" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMD64" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD32<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD32<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD32<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD32<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMD8" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD4<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD4<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD4<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.SIMD4<T0>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SIMDMask" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="random" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.SIMDMask<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="using" privateName="using" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Set" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Set<T0>" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Set<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="filter" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.Set<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIntersection" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="intersection" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Set<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Set<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isDisjoint" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="with" privateName="with" type="Swift.Set<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isStrictSubset" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="of" privateName="of" type="Swift.Set<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isStrictSuperset" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="of" privateName="of" type="Swift.Set<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isSubset" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="of" privateName="of" type="Swift.Set<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isSuperset" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="of" privateName="of" type="Swift.Set<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="popFirst" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="remove" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeFirst" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtract" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Set<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtracting" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Set<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Set<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Set.Index" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Set.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Slice" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0A0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0A0.Indices" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0A0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="T0A0.Index" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0A0.Index" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.StaticString" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hasPointerRepresentation" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isASCII" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="unicodeScalar" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Unicode.Scalar" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="utf8CodeUnitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="utf8Start" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UnsafePointer<Swift.UInt8>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="withUTF8Buffer" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeBufferPointer<Swift.UInt8>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.StrideThrough" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.StrideThroughIterator<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.StrideThroughIterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.StrideTo" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.StrideToIterator<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.StrideToIterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.String" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="characters" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="unicodeScalars" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.UnicodeScalarView" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="utf16" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.UTF16View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="utf8" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.UTF8View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="utf8CString" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.ContiguousArray<Swift.Int8>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.String" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="append" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="contentsOf" privateName="contentsOf" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeCString" hasThrows="False" operatorKind="None" isStatic="True" returnType="(result: Swift.String, repairsMade: Swift.Bool)?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Swift.UnsafePointer<T0A0.CodeUnit>>" isVariadic="False"/>
                        <parameter publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                        <parameter publicName="repairingInvalidCodeUnits" privateName="repairingInvalidCodeUnits" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hasPrefix" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hasSuffix" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String.Index" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="insert" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="contentsOf" privateName="contentsOf" type="T0" isVariadic="False"/>
                        <parameter publicName="at" privateName="at" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="lowercased" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String.Iterator" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="max" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="min" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remove" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Character" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="at" privateName="at" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeSubrange" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Range<Swift.String.Index>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="replaceSubrange" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Range<Swift.String.Index>" isVariadic="False"/>
                        <parameter publicName="with" privateName="with" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="uppercased" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="withCString" hasThrows="True" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="encodedAs" privateName="encodedAs" type="Meta" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UnsafePointer<T1A1.CodeUnit>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withMutableCharacters" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String -> T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeBytes" hasThrows="True" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeRawBufferPointer -> T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.String.Index" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="characterStride" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="encodedOffset" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isZeroPosition" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nextEncoded" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nextTranscoded" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="orderingValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt64" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="priorEncoded" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="priorTranscoded" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="strippingTranscoding" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="transcodedOffset" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String.Index" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String.Index" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encoded" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String.Index" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="samePosition" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String.Index?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="in" privateName="in" type="Swift.String.UnicodeScalarView" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="transcoded" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String.Index" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="withOffset" privateName="withOffset" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="utf16Offset" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="in" privateName="in" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.String.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Character?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.String.UTF16View" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String.Index" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String.UTF16View.Iterator" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.String.UTF16View.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UInt16?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.String.UTF8View" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String.Index" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withContiguousStorageIfAvailable" hasThrows="True" operatorKind="None" isStatic="False" returnType="T0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeBufferPointer<Swift.UInt8>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.String.UnicodeScalarView" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="append" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="contentsOf" privateName="contentsOf" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String.Index" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String.UnicodeScalarView.Iterator" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="replaceSubrange" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Range<Swift.String.Index>" isVariadic="False"/>
                        <parameter publicName="with" privateName="with" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.String.UnicodeScalarView.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Unicode.Scalar?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Substring" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="characters" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Substring" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="unicodeScalars" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Substring.UnicodeScalarView" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="utf16" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Substring.UTF16View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="utf8" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Substring.UTF8View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="append" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="contentsOf" privateName="contentsOf" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="filter" hasThrows="True" operatorKind="None" isStatic="False" returnType="Swift.String" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Character -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String.Index" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="lowercased" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="replaceSubrange" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Range<Swift.String.Index>" isVariadic="False"/>
                        <parameter publicName="with" privateName="with" type="Swift.Substring" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="uppercased" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="withCString" hasThrows="True" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="encodedAs" privateName="encodedAs" type="Meta" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UnsafePointer<T1A1.CodeUnit>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withMutableCharacters" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Substring -> T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeBytes" hasThrows="True" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeRawBufferPointer -> T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Substring.UTF16View" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.DefaultIndicies<Swift.String.UTF16View>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String.Index" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Substring.UTF8View" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.DefaultIndicies<Swift.String.UTF8View>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String.Index" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Substring.UnicodeScalarView" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.DefaultIndicies<Swift.String.UnicodeScalarView>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String.Index" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="replaceSubrange" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Range<Swift.String.Index>" isVariadic="False"/>
                        <parameter publicName="with" privateName="with" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.SystemRandomNumberGenerator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UInt64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(quotient: Swift.UInt, remainder: UInt)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="(high" privateName="(high" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(high: Swift.UInt, low: UInt)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UInt" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Range<Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt16" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt16" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt16.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt16, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt16, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(quotient: Swift.UInt16, remainder: Swift.UInt16)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="(high" privateName="(high" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(high: Swift.UInt16, low: Swift.UInt16)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt16, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt16, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UInt16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt16, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt16.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt16.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt16.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt16.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt16.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt16.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt16.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Range<Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt32" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt32.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt32, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt32, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(quotient: Swift.UInt32, remainder: Swift.UInt32)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="(high" privateName="(high" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(high: Swift.UInt32, low: Swift.UInt32)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt32, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt32, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UInt32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt32, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt32" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt32.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt32.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt32.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt32.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt32.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt32.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt32.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Range<Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt64" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt64" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt64.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt64, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt64, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(quotient: Swift.UInt64, remainder: Swift.UInt64)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="(high" privateName="(high" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(high: Swift.UInt64, low: Swift.UInt64)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt64, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt64, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UInt64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt64, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt64" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt64.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt64.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt64.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt64.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt64.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt64.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt64.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Range<Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt8" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="bitWidth" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="byteSwapped" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt8" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="leadingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nonzeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="trailingZeroBitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="words" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt8.Words" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="%" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt8, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt8, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(quotient: Swift.UInt8, remainder: Swift.UInt8)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="(high" privateName="(high" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedFullWidth" hasThrows="False" operatorKind="None" isStatic="False" returnType="(high: Swift.UInt8, low: Swift.UInt8)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt8, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remainderReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt8, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UInt8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="subtractingReportingOverflow" hasThrows="False" operatorKind="None" isStatic="False" returnType="(partialValue: Swift.UInt8, overflow: Swift.Bool)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.UInt8" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt8.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt8.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt8.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt8.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt8.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt8.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UInt8.Words" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Range<Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnfoldSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Unicode.ASCII.Parser" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="parseScalar" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Unicode.ParseResult<Swift.CollectionOfOne<Swift.UInt8>>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Unicode.CanonicalCombiningClass" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="above" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="aboveLeft" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="aboveRight" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="attachedAbove" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="attachedAboveRight" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="attachedBelow" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="attachedBelowLeft" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="below" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="belowLeft" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="belowRight" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="doubleAbove" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="doubleBelow" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="iotaSubscript" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="kanaVoicing" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="left" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="notReordered" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nukta" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="overlay" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="rawValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt8" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="right" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="virama" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.CanonicalCombiningClass" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Unicode.CanonicalCombiningClass" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.CanonicalCombiningClass" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Unicode.CanonicalCombiningClass" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Unicode.Scalar" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isASCII" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="properties" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Unicode.Scalar.Properties" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="utf16" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Unicode.Scalar.UTF16View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="utf8" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Unicode.Scalar.UTF8View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="value" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.UInt32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.Scalar" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Unicode.Scalar" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.Scalar" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Unicode.Scalar" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="escaped" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.String" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="asASCII" privateName="asASCII" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUTF8CodeUnits" hasThrows="True" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeBufferPointer<Swift.UInt8>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="write" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Unicode.Scalar.Properties" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="age" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<(major: Swift.Int, minor: Swift.Int)>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="canonicalCombiningClass" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Unicode.CanonicalCombiningClass" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="changesWhenCaseFolded" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="changesWhenCaseMapped" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="changesWhenLowercased" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="changesWhenNFKCCaseFolded" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="changesWhenTitlecased" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="changesWhenUppercased" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="generalCategory" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Unicode.GeneralCategory" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isASCIIHexDigit" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isAlphabetic" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isBidiControl" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isBidiMirrored" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isCaseIgnorable" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isCased" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isDash" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isDefaultIgnorableCodePoint" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isDeprecated" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isDiacritic" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isEmoji" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isEmojiModifier" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isEmojiModifierBase" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isEmojiPresentation" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isExtender" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isFullCompositionExclusion" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isGraphemeBase" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isGraphemeExtend" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isHexDigit" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isIDContinue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isIDSBinaryOperator" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isIDSTrinaryOperator" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isIDStart" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isIdeographic" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isJoinControl" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isLogicalOrderException" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isLowercase" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isMath" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isNoncharacterCodePoint" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isPatternSyntax" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isPatternWhitespace" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isQuotationMark" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isRadical" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isSentenceTerminal" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isSoftDotted" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isTerminalPunctuation" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isUnifiedIdeograph" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isUppercase" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isVariationSelector" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isWhitespace" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isXIDContinue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="isXIDStart" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="lowercaseMapping" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="name" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.String>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="nameAlias" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.String>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="numericType" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.Unicode.NumericType>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="numericValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.Double>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="titlecaseMapping" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="uppercaseMapping" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Unicode.Scalar.UTF16View" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="value" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Unicode.Scalar" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Unicode.Scalar.UTF8View" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="value" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Unicode.Scalar" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Unicode.UTF16.ForwardParser" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Unicode.UTF16.ReverseParser" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Unicode.UTF32.Parser" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="parseScalar" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Unicode.ParseResult<Swift.CollectionOfOne<Swift.UInt32>>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Unicode.UTF8.ForwardParser" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Unicode.UTF8.ReverseParser" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Unmanaged" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="autorelease" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Unmanaged<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="fromOpaque" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.Unmanaged<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeRawPointer" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="passRetained" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.Unmanaged<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="passUnretained" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.Unmanaged<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="release" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="retain" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Unmanaged<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="takeRetainedValue" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="takeUnretainedValue" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="toOpaque" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnsafeMutableRawPointer" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeBufferPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="baseAddress" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.UnsafePointer<T0>>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Range<Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withContiguousStorageIfAvailable" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withMemoryRebound" hasThrows="True" operatorKind="None" isStatic="False" returnType="U1" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UnsafeBufferPointer<U0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeBytes" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeRawBufferPointer -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeBufferPointer.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeMutableBufferPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="baseAddress" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.UnsafeMutablePointer<T0>>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Range<Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="allocate" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.UnsafeMutableBufferPointer<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="capacity" privateName="capacity" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="assign" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="repeating" privateName="repeating" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initialize" hasThrows="False" operatorKind="None" isStatic="False" returnType="(U0B0.Iterator, Swift.Int)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="swapAt" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withContiguousMutableStorageIfAvailable" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutableBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withContiguousStorageIfAvailable" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeBufferPointer<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withMemoryRebound" hasThrows="True" operatorKind="None" isStatic="False" returnType="U1" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutableBufferPointer<U0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeBytes" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeRawBufferPointer -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeMutablePointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="pointee" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="allocate" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.UnsafeMutablePointer<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="capacity" privateName="capacity" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="assign" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.UnsafePointer<T0>" isVariadic="False"/>
                        <parameter publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="capacity" privateName="capacity" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deinitialize" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnsafeMutableRawPointer" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initialize" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="T0" isVariadic="False"/>
                        <parameter publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="move" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="moveAssign" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.UnsafeMutablePointer<T0>" isVariadic="False"/>
                        <parameter publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="moveInitialize" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.UnsafeMutablePointer<T0>" isVariadic="False"/>
                        <parameter publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withMemoryRebound" hasThrows="True" operatorKind="None" isStatic="False" returnType="U1" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                        <parameter publicName="capacity" privateName="capacity" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutablePointer<U0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeMutableRawBufferPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="baseAddress" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.UnsafeMutableRawPointer>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Range<Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="allocate" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.UnsafeMutableRawBufferPointer" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="bindMemory" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnsafeMutableBufferPointer<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="copyBytes" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.UnsafeRawBufferPointer" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="copyMemory" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.UnsafeRawBufferPointer" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="initializeMemory" hasThrows="False" operatorKind="None" isStatic="False" returnType="(unwritten: T0A0.Iterator, initialized: Swift.UnsafeMutableBufferPointer<T0A0.Element>)" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                        <parameter publicName="from" privateName="from" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="load" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="fromByteOffset" privateName="fromByteOffset" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnsafeRawBufferPointer.Iterator" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="storeBytes" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="of" privateName="of" type="T0" isVariadic="False"/>
                        <parameter publicName="toByteOffset" privateName="toByteOffset" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="swapAt" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withUnsafeBytes" hasThrows="True" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeRawBufferPointer -> T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeMutableRawPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="advanced" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnsafeMutableRawPointer" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="allocate" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.UnsafeMutableRawPointer" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="bytes" privateName="bytes" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="alignedTo" privateName="alignedTo" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="assumingMemoryBound" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnsafeMutablePointer<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="bindMemory" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnsafeMutablePointer<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                        <parameter publicName="capacity" privateName="capacity" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="copyBytes" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.UnsafeRawPointer" isVariadic="False"/>
                        <parameter publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="copyMemory" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="Swift.UnsafeRawPointer" isVariadic="False"/>
                        <parameter publicName="byteCount" privateName="byteCount" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="bytes" privateName="bytes" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="alignedTo" privateName="alignedTo" type="Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="initializeMemory" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnsafeMutablePointer<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                        <parameter publicName="at" privateName="at" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="count" privateName="count" type="Int" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="load" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="fromByteOffset" privateName="fromByteOffset" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="moveInitializeMemory" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnsafeMutablePointer<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                        <parameter publicName="from" privateName="from" type="Swift.UnsafeMutablePointer<T0>" isVariadic="False"/>
                        <parameter publicName="count" privateName="count" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="storeBytes" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="of" privateName="of" type="T0" isVariadic="False"/>
                        <parameter publicName="toByteOffset" privateName="toByteOffset" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafePointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="pointee" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="withMemoryRebound" hasThrows="True" operatorKind="None" isStatic="False" returnType="U1" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                        <parameter publicName="capacity" privateName="capacity" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UnsafePointer<U0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeRawBufferPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="baseAddress" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Optional<Swift.UnsafeRawPointer>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Range<Int>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="bindMemory" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnsafeBufferPointer<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="load" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="fromByteOffset" privateName="fromByteOffset" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnsafeRawBufferPointer.Iterator" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="withUnsafeBytes" hasThrows="True" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeRawBufferPointer -> T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeRawBufferPointer.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UInt8?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.UnsafeRawPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="advanced" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnsafeRawPointer" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="assumingMemoryBound" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnsafePointer<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="bindMemory" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnsafePointer<T0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Meta" isVariadic="False"/>
                        <parameter publicName="capacity" privateName="capacity" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="load" hasThrows="False" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="fromByteOffset" privateName="fromByteOffset" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="as" privateName="as" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Zip2Sequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="struct" name="Swift.Zip2Sequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" hasThrows="False" operatorKind="None" isStatic="False" returnType="(T0A0.Element, T1A1.Element)?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.CollectionDifference.Change" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.CommandLine" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="argc" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="arguments" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Array<Swift.String>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="unsafeArgv" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.UnsafeMutablePointer<Swift.Optional<Swift.UnsafeMutablePointer<Swift.Int8>>>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.DecodingError" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="dataCorruptedError" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.DecodingError" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="in" privateName="in" type="Swift.SingleValueDecodingContainer" isVariadic="False"/>
                        <parameter publicName="debugDescription" privateName="debugDescription" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.EncodingError" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.FloatingPointClassification" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.FloatingPointClassification" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.FloatingPointClassification" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.FloatingPointRoundingRule" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.FloatingPointRoundingRule" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.FloatingPointRoundingRule" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.FloatingPointSign" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="rawValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.FloatingPointSign" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.FloatingPointSign" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.MemoryLayout" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="alignment" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="size" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="stride" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="alignment" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="ofValue" privateName="ofValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="offset" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.Int?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="of" privateName="of" type="Swift.PartialKeyPath<T0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="size" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="ofValue" privateName="ofValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="stride" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="ofValue" privateName="ofValue" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Mirror.AncestorRepresentation" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Mirror.DisplayStyle" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Mirror.DisplayStyle" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Mirror.DisplayStyle" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Never" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Never" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Never" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Never" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Never" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Optional" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="unsafelyUnwrapped" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="flatMap" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> Swift.Optional<U0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="map" hasThrows="True" operatorKind="None" isStatic="False" returnType="U0?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Result" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="flatMap" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Result<U0, T1>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> Swift.Result<U0, T1>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="flatMapError" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Result<T0, U0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T1 -> Swift.Result<T0, U0>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="get" hasThrows="True" operatorKind="None" isStatic="False" returnType="T0" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="map" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Result<U0, T1>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0 -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="mapError" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.Result<T0, U0>" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T1 -> U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Unicode" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Unicode.ASCII" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="encodedReplacementCharacter" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.CollectionOfOne<Swift.UInt8>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="decode" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.Unicode.Scalar" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.CollectionOfOne<Swift.UInt8>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.CollectionOfOne<Swift.UInt8>?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.Scalar" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="transcode" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.CollectionOfOne<Swift.UInt8>?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.EncodedScalar" isVariadic="False"/>
                        <parameter publicName="from" privateName="from" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Unicode.GeneralCategory" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.GeneralCategory" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Unicode.GeneralCategory" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Unicode.NumericType" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.NumericType" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Unicode.NumericType" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Unicode.ParseResult" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Unicode.UTF16" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="decode" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnicodeDecodingResult" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="False" operatorKind="None" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.Scalar" isVariadic="False"/>
                        <parameter publicName="into" privateName="into" type="Swift.UInt16 -> ()" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLeadSurrogate" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isTrailSurrogate" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="leadSurrogate" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.UInt16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.Scalar" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="trailSurrogate" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.UInt16" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.Scalar" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="transcodedLength" hasThrows="False" operatorKind="None" isStatic="True" returnType="(count: Swift.Int, isASCII: Swift.Bool)?" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="of" privateName="of" type="T0" isVariadic="False"/>
                        <parameter publicName="decodedAs" privateName="decodedAs" type="Meta" isVariadic="False"/>
                        <parameter publicName="repairingIllFormedSequences" privateName="repairingIllFormedSequences" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="width" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.Int" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.Scalar" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Unicode.UTF32" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <property name="encodedReplacementCharacter" isPossiblyIncomplete="False" isStatic="True" accessibility="True" type="Swift.CollectionOfOne<Swift.UInt32>" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="True" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed"/>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.UTF32" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.Unicode.UTF32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnicodeDecodingResult" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.Unicode.Scalar" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.CollectionOfOne<Swift.UInt32>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="False" operatorKind="None" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.Scalar" isVariadic="False"/>
                        <parameter publicName="into" privateName="into" type="Swift.UInt32 -> ()" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.Unicode.UTF8" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="decode" hasThrows="False" operatorKind="None" isStatic="False" returnType="Swift.UnicodeDecodingResult" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" hasThrows="False" operatorKind="None" isStatic="True" returnType="" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.Scalar" isVariadic="False"/>
                        <parameter publicName="into" privateName="into" type="Swift.UInt8 -> ()" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isContinuation" hasThrows="False" operatorKind="None" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="enum" name="Swift.UnicodeDecodingResult" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnicodeDecodingResult" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UnicodeDecodingResult" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.AdditiveArithmetic" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="+" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="+=" operatorKind="Infix" isStatic="True" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="-=" operatorKind="Infix" isStatic="True" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="zero" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.BidirectionalCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="distance" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="T0A0.Index" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIndex" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="before" privateName="before" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="T0A0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="before" privateName="before" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="T0A0.Index?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Index" isVariadic="False"/>
                        <parameter publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="limitedBy" privateName="limitedBy" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="T0A0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Index" isVariadic="False"/>
                        <parameter publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.BinaryFloatingPoint" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="binade" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="exponentBitCount" operatorKind="None" isStatic="True" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="exponentBitPattern" operatorKind="None" isStatic="False" returnType="T0A0.RawExponent" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="significandBitCount" operatorKind="None" isStatic="True" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="significandBitPattern" operatorKind="None" isStatic="False" returnType="T0A0.RawSignificand" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="significandWidth" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.BinaryInteger" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="%" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="%=" operatorKind="Infix" isStatic="True" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;=" operatorKind="Infix" isStatic="True" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" operatorKind="Infix" isStatic="True" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;&lt;" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;&lt;=" operatorKind="Infix" isStatic="True" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;&gt;" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;&gt;=" operatorKind="Infix" isStatic="True" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="^=" operatorKind="Infix" isStatic="True" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="bitWidth" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="isMultiple" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="of" privateName="of" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isSigned" operatorKind="None" isStatic="True" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="quotientAndRemainder" operatorKind="None" isStatic="False" returnType="(quotient: T0, remainder: T0)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="signum" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="trailingZeroBitCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="words" operatorKind="None" isStatic="False" returnType="T0A0.Words" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="|" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="|=" operatorKind="Infix" isStatic="True" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="~" operatorKind="Prefix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CVarArg" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CaseIterable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="allCases" operatorKind="None" isStatic="True" returnType="T0A0.AllCases" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CodingKey" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="intValue" operatorKind="None" isStatic="False" returnType="Swift.Int?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="stringValue" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Collection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="count" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="distance" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="T0A0.Index" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="endIndex" operatorKind="None" isStatic="False" returnType="T0A0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="formIndex" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="T0A0.Index?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Index" isVariadic="False"/>
                        <parameter publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="limitedBy" privateName="limitedBy" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="T0A0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Index" isVariadic="False"/>
                        <parameter publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="T0A0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="after" privateName="after" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="indices" operatorKind="None" isStatic="False" returnType="T0A0.Indices" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="isEmpty" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="startIndex" operatorKind="None" isStatic="False" returnType="T0A0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="subscript" operatorKind="None" isStatic="False" returnType="T0A0.SubSequence" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Range<T0A0.Index>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Comparable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="&lt;" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&lt;=" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&gt;=" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CustomDebugStringConvertible" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="debugDescription" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CustomLeafReflectable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CustomPlaygroundDisplayConvertible" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="playgroundDescription" operatorKind="None" isStatic="False" returnType="Swift.Any" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CustomReflectable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="customMirror" operatorKind="None" isStatic="False" returnType="Swift.Mirror" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.CustomStringConvertible" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="description" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Decodable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Decoder" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array<Swift.CodingKey>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="container" operatorKind="None" isStatic="False" returnType="Swift.KeyedDecodingContainer<U0>" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="singleValueContainer" operatorKind="None" isStatic="False" returnType="Swift.SingleValueDecodingContainer" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="unkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedDecodingContainer" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="userInfo" operatorKind="None" isStatic="False" returnType="Swift.Dictionary<Swift.CodingUserInfoKey, Swift.Any>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Encodable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Encoder" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array<Swift.CodingKey>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="container" operatorKind="None" isStatic="False" returnType="Swift.KeyedEncodingContainer<U0>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="singleValueContainer" operatorKind="None" isStatic="False" returnType="Swift.SingleValueEncodingContainer" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="unkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedEncodingContainer" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="userInfo" operatorKind="None" isStatic="False" returnType="Swift.Dictionary<Swift.CodingUserInfoKey, Swift.Any>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Equatable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="==" operatorKind="Infix" isStatic="True" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Error" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByArrayLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByBooleanLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByDictionaryLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByExtendedGraphemeClusterLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByFloatLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByIntegerLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByNilLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByStringInterpolation" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByStringLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.ExpressibleByUnicodeScalarLiteral" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.FixedWidthInteger" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="&amp;&lt;&lt;" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&lt;&lt;=" operatorKind="Infix" isStatic="True" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="&amp;&gt;&gt;=" operatorKind="Infix" isStatic="True" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: T0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="bigEndian" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="bitWidth" operatorKind="None" isStatic="True" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="byteSwapped" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="dividedReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: T0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="dividingFullWidth" operatorKind="None" isStatic="False" returnType="(quotient: T0, remainder: T0)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="(high" privateName="(high" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="leadingZeroBitCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="littleEndian" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="max" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="min" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="multipliedFullWidth" operatorKind="None" isStatic="False" returnType="(high: T0, low: T0A0.Magnitude)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="multipliedReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: T0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nonzeroBitCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="remainderReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: T0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtractingReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: T0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.FloatingPoint" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="/" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="/=" operatorKind="Infix" isStatic="True" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addProduct" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="addingProduct" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="exponent" operatorKind="None" isStatic="False" returnType="T0A0.Exponent" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="floatingPointClass" operatorKind="None" isStatic="False" returnType="Swift.FloatingPointClassification" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="formRemainder" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formSquareRoot" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="formTruncatingRemainder" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="greatestFiniteMagnitude" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="infinity" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="isCanonical" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="isEqual" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isFinite" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="isInfinite" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="isLess" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="than" privateName="than" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isLessThanOrEqualTo" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isNaN" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="isNormal" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="isSignalingNaN" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="isSubnormal" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="isTotallyOrdered" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="belowOrEqualTo" privateName="belowOrEqualTo" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isZero" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="leastNonzeroMagnitude" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="leastNormalMagnitude" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="maximum" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="maximumMagnitude" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="minimum" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="minimumMagnitude" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nan" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="nextDown" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="nextUp" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="pi" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="radix" operatorKind="None" isStatic="True" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="remainder" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="round" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.FloatingPointRoundingRule" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="rounded" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.FloatingPointRoundingRule" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="sign" operatorKind="None" isStatic="False" returnType="Swift.FloatingPointSign" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="signalingNaN" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="significand" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="squareRoot" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="truncatingRemainder" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="dividingBy" privateName="dividingBy" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="ulp" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="ulpOfOne" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Hashable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="hash" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hashValue" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Identifiable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="id" operatorKind="None" isStatic="False" returnType="T0A0.ID" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.IteratorProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" operatorKind="None" isStatic="False" returnType="T0A0.Element?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.KeyedDecodingContainerProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="allKeys" operatorKind="None" isStatic="False" returnType="Swift.Array<T0A0.Key>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array<Swift.CodingKey>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="contains" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Meta" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt64?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.String?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="U0?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Meta" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int64?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeNil" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedContainer" operatorKind="None" isStatic="False" returnType="Swift.KeyedDecodingContainer<U0>" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedUnkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedDecodingContainer" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="superDecoder" operatorKind="None" isStatic="False" returnType="Swift.Decoder" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="superDecoder" operatorKind="None" isStatic="False" returnType="Swift.Decoder" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.KeyedEncodingContainerProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array<Swift.CodingKey>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Bool" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Double" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="U0" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="U0" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeConditional" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="U0" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Swift.UInt32>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Swift.UInt64>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Swift.Int64>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Swift.UInt16>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Swift.String>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Bool>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Double>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Float>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Int>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<UInt>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<U0>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Swift.Int8>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Swift.Int16>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Swift.Int32>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Swift.Int64>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Swift.UInt8>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Swift.UInt16>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Optional<Swift.UInt32>" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeNil" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedContainer" operatorKind="None" isStatic="False" returnType="Swift.KeyedEncodingContainer<U0>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedUnkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedEncodingContainer" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="superEncoder" operatorKind="None" isStatic="False" returnType="Swift.Encoder" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="superEncoder" operatorKind="None" isStatic="False" returnType="Swift.Encoder" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="forKey" privateName="forKey" type="T0A0.Key" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.LazyCollectionProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.LazySequenceProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="elements" operatorKind="None" isStatic="False" returnType="T0A0.Elements" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.LosslessStringConvertible" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.MirrorPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.MutableCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="partition" operatorKind="None" isStatic="False" returnType="T0A0.Index" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="T0A0.Element -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subscript" operatorKind="None" isStatic="False" returnType="T0A0.SubSequence" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Range<T0A0.Index>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subscript" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.SubSequence" isVariadic="False"/>
                        <parameter publicName="a" privateName="a" type="Swift.Range<T0A0.Index>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subscript" operatorKind="None" isStatic="False" returnType="T0A0.Element" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subscript" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Element" isVariadic="False"/>
                        <parameter publicName="a" privateName="a" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="swapAt" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Index" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withContiguousMutableStorageIfAvailable" operatorKind="None" isStatic="False" returnType="U0?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeMutableBufferPointer<T0A0.Element>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Numeric" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="*" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="*=" operatorKind="Infix" isStatic="True" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="magnitude" operatorKind="None" isStatic="False" returnType="T0A0.Magnitude" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.OptionSet" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.RandomAccessCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="distance" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="from" privateName="from" type="T0A0.Index" isVariadic="False"/>
                        <parameter publicName="to" privateName="to" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="T0A0.Index?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Index" isVariadic="False"/>
                        <parameter publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                        <parameter publicName="limitedBy" privateName="limitedBy" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="index" operatorKind="None" isStatic="False" returnType="T0A0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Index" isVariadic="False"/>
                        <parameter publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.RandomNumberGenerator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="next" operatorKind="None" isStatic="False" returnType="Swift.UInt64" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.RangeExpression" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="contains" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Bound" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="relative" operatorKind="None" isStatic="False" returnType="Swift.Range<T0A0.Bound>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.RangeReplaceableCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="remove" operatorKind="None" isStatic="False" returnType="T0A0.Element" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="at" privateName="at" type="T0A0.Index" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeAll" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="where" privateName="where" type="T0A0.Element -> Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeFirst" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="removeFirst" operatorKind="None" isStatic="False" returnType="T0A0.Element" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="removeSubrange" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Range<T0A0.Index>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="reserveCapacity" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.RawRepresentable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="rawValue" operatorKind="None" isStatic="False" returnType="T0A0.RawValue" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SIMD" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SIMDScalar" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SIMDStorage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="scalarCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="subscript" operatorKind="None" isStatic="False" returnType="T0A0.Scalar" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subscript" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Scalar" isVariadic="False"/>
                        <parameter publicName="a" privateName="a" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Sequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="makeIterator" operatorKind="None" isStatic="False" returnType="T0A0.Iterator" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="underestimatedCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="withContiguousStorageIfAvailable" operatorKind="None" isStatic="False" returnType="U0?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafeBufferPointer<T0A0.Element>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SetAlgebra" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="contains" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Element" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="formIntersection" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="intersection" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isDisjoint" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="with" privateName="with" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isEmpty" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="isSubset" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="of" privateName="of" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="isSuperset" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="of" privateName="of" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="remove" operatorKind="None" isStatic="False" returnType="T0A0.Element?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.Element" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtract" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="subtracting" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SignedInteger" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SignedNumeric" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="-" operatorKind="Prefix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="negate" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SingleValueDecodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array<Swift.CodingKey>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeNil" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.SingleValueEncodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array<Swift.CodingKey>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeNil" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.Strideable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="advanced" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="by" privateName="by" type="T0A0.Stride" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="distance" operatorKind="None" isStatic="False" returnType="T0A0.Stride" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="T0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.StringInterpolationProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="appendLiteral" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="T0A0.StringLiteralType" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.StringProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="hasPrefix" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="hasSuffix" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="lowercased" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="unicodeScalars" operatorKind="None" isStatic="False" returnType="T0A0.UnicodeScalarView" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="uppercased" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="utf16" operatorKind="None" isStatic="False" returnType="T0A0.UTF16View" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="utf8" operatorKind="None" isStatic="False" returnType="T0A0.UTF8View" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="withCString" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="encodedAs" privateName="encodedAs" type="Meta" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UnsafePointer<U1B1.CodeUnit>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withCString" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UnsafePointer<Swift.Int8>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="withCString" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="encodedAs" privateName="encodedAs" type="Meta" isVariadic="False"/>
                        <parameter publicName="_" privateName="" type="Swift.UnsafePointer<U1B1.CodeUnit>" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.TextOutputStream" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="write" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.TextOutputStreamable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="write" operatorKind="None" isStatic="False" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="to" privateName="to" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.UnicodeCodec" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UnicodeDecodingResult" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="True" returnType="" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Unicode.Scalar" isVariadic="False"/>
                        <parameter publicName="into" privateName="into" type="T0A0.CodeUnit -> ()" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.UnkeyedDecodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array<Swift.CodingKey>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="count" operatorKind="None" isStatic="False" returnType="Swift.Int?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="currentIndex" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt64?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.String?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="U0?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int64?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="decodeNil" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="isAtEnd" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="nestedContainer" operatorKind="None" isStatic="False" returnType="Swift.KeyedDecodingContainer<U0>" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedUnkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedDecodingContainer" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="superDecoder" operatorKind="None" isStatic="False" returnType="Swift.Decoder" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.UnkeyedEncodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
               <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array<Swift.CodingKey>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="count" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Double" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Bool" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.String" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Float" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.Int" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt64" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt32" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt16" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encode" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="Swift.UInt8" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeConditional" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="_" privateName="" type="U0" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="encodeNil" operatorKind="None" isStatic="False" returnType="" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="nestedContainer" operatorKind="None" isStatic="False" returnType="Swift.KeyedEncodingContainer<U0>" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                  <parameterlists>
                     <parameterlist index="0">
                        <parameter publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False"/>
                     </parameterlist>
                  </parameterlists>
               </func>
               <func name="nestedUnkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedEncodingContainer" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
               <func name="superEncoder" operatorKind="None" isStatic="False" returnType="Swift.Encoder" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
               </func>
            </members>
         </typedeclaration>
         <typedeclaration kind="protocol" name="Swift.UnsignedInteger" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
         </typedeclaration>
      </Module>
   </modulelist>
</xamreflect>
