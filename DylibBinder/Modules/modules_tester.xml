<?xml version="1.0" encoding="utf-8"?>
<xamreflect version="1.0">
  <modulelist>
    <!-- swiftVersion not yet found -->
    <module name="Swift" swiftVersion="5.0">
      <typedeclaration kind="class" name="AnyKeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="rootType" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Any" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_rootType" isStatic="True" isProperty="True" returnType="Swift.Any" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Any" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="valueType" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Any" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_valueType" isStatic="True" isProperty="True" returnType="Swift.Any" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Any" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private0" type="Swift.AnyKeyPath" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private1" type="Swift.AnyKeyPath" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="into" privateName="into" type="inout Swift.Hasher" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="class" name="KeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False"></typedeclaration>
      <typedeclaration kind="class" name="ManagedBuffer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_capacity" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="header" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_header" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_header" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
          <param name="T1" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="class" name="PartialKeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False"></typedeclaration>
      <typedeclaration kind="class" name="ReferenceWritableKeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False"></typedeclaration>
      <typedeclaration kind="class" name="WritableKeyPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False"></typedeclaration>
      <typedeclaration kind="enum" name="CommandLine" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <elements>
        </elements>
        <members>
          <property name="argc" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_argc" isStatic="True" isProperty="True" returnType="Swift.Int32" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int32" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="arguments" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Array&lt;Swift.String&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_arguments" isStatic="True" isProperty="True" returnType="Swift.Array&lt;Swift.String&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Array&lt;Swift.String&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_arguments" isStatic="True" isProperty="True" returnType="Swift.Array&lt;Swift.String&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.Array&lt;Swift.String&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="unsafeArgv" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.UnsafeMutablePointer&lt;Swift.Optional&lt;Swift.UnsafeMutablePointer&lt;Swift.Int8&gt;&gt;&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_unsafeArgv" isStatic="True" isProperty="True" returnType="Swift.UnsafeMutablePointer&lt;Swift.Optional&lt;Swift.UnsafeMutablePointer&lt;Swift.Int8&gt;&gt;&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.UnsafeMutablePointer&lt;Swift.Optional&lt;Swift.UnsafeMutablePointer&lt;Swift.Int8&gt;&gt;&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="enum" name="DecodingError" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <elements>
        </elements>
        <members>
          <func name="dataCorruptedError" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.DecodingError" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="in" privateName="in" type="Swift.SingleValueDecodingContainer" isVariadic="False" />
                <parameter index="1" publicName="debugDescription" privateName="debugDescription" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="dataCorruptedError" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.DecodingError" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="in" privateName="in" type="Swift.UnkeyedDecodingContainer" isVariadic="False" />
                <parameter index="1" publicName="debugDescription" privateName="debugDescription" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="dataCorruptedError" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.DecodingError" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
                <parameter index="1" publicName="in" privateName="in" type="U0" isVariadic="False" />
                <parameter index="2" publicName="debugDescription" privateName="debugDescription" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <innerstruct>
          <typedeclaration kind="struct" name="DecodingError.Context" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <property name="codingPath" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Array&lt;Swift.CodingKey&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_codingPath" isStatic="False" isProperty="True" returnType="Swift.Array&lt;Swift.CodingKey&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.Array&lt;Swift.CodingKey&gt;" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <property name="underlyingError" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.Error&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_underlyingError" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.Error&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.Error&gt;" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <associatedtypes>
          <associatedtype name="Key" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="enum" name="EncodingError" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
      <elements>
      </elements>
      </typedeclaration>
      <typedeclaration kind="enum" name="FloatingPointClassification" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <elements>
        </elements>
        <members>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private2" type="Swift.FloatingPointClassification" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private3" type="Swift.FloatingPointClassification" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="enum" name="FloatingPointRoundingRule" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <elements>
        </elements>
        <members>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private4" type="Swift.FloatingPointRoundingRule" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private5" type="Swift.FloatingPointRoundingRule" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="enum" name="FloatingPointSign" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <elements>
        </elements>
        <members>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="rawValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_rawValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private6" type="Swift.FloatingPointSign" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private7" type="Swift.FloatingPointSign" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="enum" name="MemoryLayout" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <elements>
        </elements>
        <members>
          <property name="alignment" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_alignment" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="size" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_size" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="stride" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_stride" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="alignment" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="ofValue" privateName="ofValue" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="offset" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="of" privateName="of" type="Swift.PartialKeyPath&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="size" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="ofValue" privateName="ofValue" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="stride" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="ofValue" privateName="ofValue" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="enum" name="Never" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <elements>
        </elements>
        <members>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private8" type="Swift.Never" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private9" type="Swift.Never" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private10" type="Swift.Never" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private11" type="Swift.Never" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="enum" name="Result" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <elements>
        </elements>
        <members>
          <func name="get" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="enum" name="Unicode" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <elements>
        </elements>
      </typedeclaration>
      <typedeclaration kind="enum" name="UnicodeDecodingResult" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <elements>
        </elements>
        <members>
          <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private12" type="Swift.UnicodeDecodingResult" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private13" type="Swift.UnicodeDecodingResult" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="struct" name="AnyBidirectionalCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.AnyIndex" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.AnyIndex" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="from" privateName="from" type="Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="to" privateName="to" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyBidirectionalCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private14" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="dropLast" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyBidirectionalCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private15" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="inout Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private16" type="inout Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private17" type="inout Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private18" type="Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private19" type="Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIterator&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="prefix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyBidirectionalCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private20" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="suffix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyBidirectionalCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private21" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="AnyCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.AnyIndex" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.AnyIndex" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="from" privateName="from" type="Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="to" privateName="to" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private22" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="dropLast" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private23" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="inout Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private24" type="inout Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private25" type="inout Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private26" type="Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private27" type="Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIterator&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="prefix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private28" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="suffix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private29" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="AnyHashable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Any" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_base" isStatic="False" isProperty="True" returnType="Swift.Any" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Any" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private30" type="Swift.AnyHashable" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private31" type="Swift.AnyHashable" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="into" privateName="into" type="inout Swift.Hasher" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="struct" name="AnyIndex" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private32" type="Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private33" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private34" type="Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private35" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="struct" name="AnyIterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="AnyRandomAccessCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.AnyIndex" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyIndex" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.AnyIndex" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="from" privateName="from" type="Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="to" privateName="to" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyRandomAccessCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private36" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="dropLast" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyRandomAccessCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private37" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="inout Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private38" type="inout Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private39" type="inout Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private40" type="Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.AnyIndex" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIndex" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private41" type="Swift.AnyIndex" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIterator&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="prefix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyRandomAccessCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private42" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="suffix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyRandomAccessCollection&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private43" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="AnySequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnySequence&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private44" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="dropLast" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Array&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private45" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnyIterator&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="prefix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.AnySequence&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private46" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="suffix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Array&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private47" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="ArraySlice" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_capacity" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="from" privateName="from" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="to" privateName="to" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="inout Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private55" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private56" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="remove" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.ArraySlice&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="at" privateName="at" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="removeAll" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.ArraySlice&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.ArraySlice&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private57" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="AutoreleasingUnsafeMutablePointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="pointee" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_pointee" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_pointee" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="CVaListPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="struct" name="ClosedRange" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_isEmpty" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="lowerBound" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_lowerBound" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="upperBound" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_upperBound" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private65" type="Swift.ClosedRange&lt;T0&gt;" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private66" type="Swift.ClosedRange&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="clamped" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.ClosedRange&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="Swift.ClosedRange&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private67" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="overlaps" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private68" type="Swift.ClosedRange&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="overlaps" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private69" type="Swift.Range&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Range&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="CodingUserInfoKey" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="rawValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_rawValue" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private70" type="Swift.CodingUserInfoKey" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private71" type="Swift.CodingUserInfoKey" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="into" privateName="into" type="inout Swift.Hasher" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="struct" name="CollectionDifference" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="inverse" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.CollectionDifference&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <innerenum>
          <typedeclaration kind="enum" name="CollectionDifference.Change" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
          <elements>
          </elements>
          </typedeclaration>
        </innerenum>
        <innerstruct>
          <typedeclaration kind="struct" name="CollectionDifference.Index" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="CollectionOfOne" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <innerstruct>
          <typedeclaration kind="struct" name="CollectionOfOne.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0"></parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="ContiguousArray" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_capacity" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="from" privateName="from" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="to" privateName="to" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="inout Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private72" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private73" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="remove" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.ContiguousArray&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="at" privateName="at" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="removeAll" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.ContiguousArray&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="reserveCapacity" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.ContiguousArray&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private74" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="DefaultIndicies" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_endIndex" isStatic="False" isProperty="True" returnType="T0.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.DefaultIndicies&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.DefaultIndicies&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.DefaultIndicies&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_startIndex" isStatic="False" isProperty="True" returnType="T0.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Index" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="struct" name="DefaultStringInterpolation" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="appendInterpolation" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private75" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="appendLiteral" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private76" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="make" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="write" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private77" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="struct" name="DropFirstSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="dropFirst" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.DropFirstSequence&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private100" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Iterator" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Iterator" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="struct" name="DropWhileSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members></members>
        <innerstruct>
          <typedeclaration kind="struct" name="DropWhileSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Element?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0"></parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="EmptyCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private101" type="Swift.EmptyCollection&lt;T0&gt;" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private102" type="Swift.EmptyCollection&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="from" privateName="from" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="to" privateName="to" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private103" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private104" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <innerstruct>
          <typedeclaration kind="struct" name="EmptyCollection.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0"></parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="EnumeratedSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False"></typedeclaration>
      <typedeclaration kind="struct" name="FlattenSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False"></typedeclaration>
      <typedeclaration kind="struct" name="Float" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="binade" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_binade" isStatic="False" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="bitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_bitPattern" isStatic="False" isProperty="True" returnType="Swift.UInt32" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt32" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="exponent" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_exponent" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="exponentBitCount" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_exponentBitCount" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="exponentBitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_exponentBitPattern" isStatic="False" isProperty="True" returnType="Swift.UInt" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="greatestFiniteMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_greatestFiniteMagnitude" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="infinity" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_infinity" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="isCanonical" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_isCanonical" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="isFinite" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_isFinite" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="isInfinite" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_isInfinite" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="isNaN" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_isNaN" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="isNormal" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_isNormal" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="isSignalingNaN" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_isSignalingNaN" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="isSubnormal" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_isSubnormal" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="isZero" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_isZero" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="leastNonzeroMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_leastNonzeroMagnitude" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="leastNormalMagnitude" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_leastNormalMagnitude" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="magnitude" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_magnitude" isStatic="False" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="nan" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_nan" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="nextUp" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_nextUp" isStatic="False" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="pi" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_pi" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="sign" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.FloatingPointSign" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_sign" isStatic="False" isProperty="True" returnType="Swift.FloatingPointSign" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.FloatingPointSign" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="signalingNaN" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_signalingNaN" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="significand" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_significand" isStatic="False" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="significandBitCount" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_significandBitCount" isStatic="True" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="significandBitPattern" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UInt32" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_significandBitPattern" isStatic="False" isProperty="True" returnType="Swift.UInt32" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.UInt32" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="significandWidth" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_significandWidth" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="ulp" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_ulp" isStatic="False" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="ulpOfOne" isPossiblyIncomplete="False" isStatic="True" accessibility="Public" type="Swift.Float" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_ulpOfOne" isStatic="True" isProperty="True" returnType="Swift.Float" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="*" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private105" type="Swift.Float" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private106" type="Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="*=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private107" type="Swift.Float" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private108" type="Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="+" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private109" type="Swift.Float" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private110" type="Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="+=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private111" type="Swift.Float" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private112" type="Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private113" type="Swift.Float" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private114" type="Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="-" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private115" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="-=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private116" type="Swift.Float" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private117" type="Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="/" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Float" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private118" type="Swift.Float" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private119" type="Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="/=" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private120" type="Swift.Float" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private121" type="Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="addProduct" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private122" type="Swift.Float" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private123" type="Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="advanced" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Float" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="by" privateName="by" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Float" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formRemainder" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.Float" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formSquareRoot" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="formTruncatingRemainder" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.Float" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="into" privateName="into" type="inout Swift.Hasher" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="isEqual" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="isLess" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="than" privateName="than" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="isLessThanOrEqualTo" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private124" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="negate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="round" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.Float" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private125" type="Swift.FloatingPointRoundingRule" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="write" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <innerstruct>
          <typedeclaration kind="struct" name="Float.SIMD16Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <innerstruct>
          <typedeclaration kind="struct" name="Float.SIMD2Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <innerstruct>
          <typedeclaration kind="struct" name="Float.SIMD32Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <innerstruct>
          <typedeclaration kind="struct" name="Float.SIMD4Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <innerstruct>
          <typedeclaration kind="struct" name="Float.SIMD64Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <innerstruct>
          <typedeclaration kind="struct" name="Float.SIMD8Storage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
      </typedeclaration>
      <typedeclaration kind="struct" name="Float80" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False"></typedeclaration>
      <typedeclaration kind="struct" name="IndexingIterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Element?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Element" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="struct" name="IteratorSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Element?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Element" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="struct" name="JoinedSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False"></typedeclaration>
      <typedeclaration kind="struct" name="KeyValuePairs" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
          <param name="T1" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="KeyedDecodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="allKeys" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Array&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_allKeys" isStatic="False" isProperty="True" returnType="Swift.Array&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Array&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="codingPath" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Array&lt;Swift.CodingKey&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_codingPath" isStatic="False" isProperty="True" returnType="Swift.Array&lt;Swift.CodingKey&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Array&lt;Swift.CodingKey&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private413" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private414" type="Swift.String" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private415" type="Meta" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private416" type="Swift.Int8" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private417" type="Swift.Int16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private418" type="Swift.Int32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private419" type="Swift.Int64" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt8" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private420" type="Swift.UInt8" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt16" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private421" type="Swift.UInt16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt32" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private422" type="Swift.UInt32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private423" type="Swift.UInt64" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private424" type="Swift.String" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private425" type="Meta" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int8?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private426" type="Swift.Int8" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int16?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private427" type="Swift.Int16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int32?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private428" type="Swift.Int32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int64?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private429" type="Swift.Int64" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt8?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private430" type="Swift.UInt8" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt16?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private431" type="Swift.UInt16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt32?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private432" type="Swift.UInt32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt64?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private433" type="Swift.UInt64" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="KeyedDecodingContainer&lt;T0&gt;.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeNil" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="nestedContainer" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.KeyedDecodingContainer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="nestedUnkeyedContainer" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnkeyedDecodingContainer" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="superDecoder" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Decoder" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="superDecoder" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Decoder" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Key" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="struct" name="KeyedEncodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="codingPath" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Array&lt;Swift.CodingKey&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_codingPath" isStatic="False" isProperty="True" returnType="Swift.Array&lt;Swift.CodingKey&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Array&lt;Swift.CodingKey&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private434" type="Swift.String" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.KeyedEncodingContainer&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private435" type="Swift.Bool" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.KeyedEncodingContainer&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private436" type="Swift.Double" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.KeyedEncodingContainer&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private437" type="Swift.Float" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.KeyedEncodingContainer&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private438" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.KeyedEncodingContainer&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private439" type="Swift.UInt" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private440" type="U0" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.KeyedEncodingContainer&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private441" type="Swift.Int8" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.KeyedEncodingContainer&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private442" type="Swift.Int16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.KeyedEncodingContainer&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private443" type="Swift.Int32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.KeyedEncodingContainer&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private444" type="Swift.Int64" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.KeyedEncodingContainer&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private445" type="Swift.UInt8" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.KeyedEncodingContainer&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private446" type="Swift.UInt16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.KeyedEncodingContainer&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private447" type="Swift.UInt32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.KeyedEncodingContainer&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private448" type="Swift.UInt64" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeConditional" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private449" type="U0" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private450" type="Swift.Optional&lt;Swift.String&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private451" type="Swift.Optional&lt;Bool&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private452" type="Swift.Optional&lt;Double&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private453" type="Swift.Optional&lt;Float&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private454" type="Swift.Optional&lt;Int&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private455" type="Swift.Optional&lt;UInt&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private456" type="Swift.Optional&lt;U0&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private457" type="Swift.Optional&lt;Swift.Int8&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private458" type="Swift.Optional&lt;Swift.Int16&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private459" type="Swift.Optional&lt;Swift.Int32&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private460" type="Swift.Optional&lt;Swift.Int64&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private461" type="Swift.Optional&lt;Swift.UInt8&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private462" type="Swift.Optional&lt;Swift.UInt16&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private463" type="Swift.Optional&lt;Swift.UInt32&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private464" type="Swift.Optional&lt;Swift.UInt64&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeNil" hasThrows="True" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="nestedContainer" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.KeyedEncodingContainer&lt;U0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="nestedUnkeyedContainer" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnkeyedEncodingContainer" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="superEncoder" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Encoder" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="forKey" privateName="forKey" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="superEncoder" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Encoder" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="LazyDropWhileSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False"></typedeclaration>
      <typedeclaration kind="struct" name="LazyFilterSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members></members>
        <innerstruct>
          <typedeclaration kind="struct" name="LazyFilterSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Iterator" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_base" isStatic="False" isProperty="True" returnType="T0.Iterator" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="T0.Iterator" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Element?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0"></parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="LazyMapSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <innerstruct>
          <typedeclaration kind="struct" name="LazyMapSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Iterator" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_base" isStatic="False" isProperty="True" returnType="T0.Iterator" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="T0.Iterator" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T1?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0"></parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <genericparameters>
          <param name="T0" />
          <param name="T1" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="LazyPrefixWhileSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False"></typedeclaration>
      <typedeclaration kind="struct" name="LazySequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="elements" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_elements" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Iterator" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Iterator" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="struct" name="ManagedBufferPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="buffer" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyObject" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_buffer" isStatic="False" isProperty="True" returnType="Swift.AnyObject" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyObject" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="capacity" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_capacity" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="header" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_header" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_header" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private465" type="Swift.ManagedBufferPointer&lt;T0, T1&gt;" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private466" type="Swift.ManagedBufferPointer&lt;T0, T1&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="isUniqueReference" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
          <param name="T1" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="Mirror" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="children" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.AnyCollection&lt;(label: Swift.Optional&lt;Swift.String&gt;, value: Swift.Any)&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_children" isStatic="False" isProperty="True" returnType="Swift.AnyCollection&lt;(label: Swift.Optional&lt;Swift.String&gt;, value: Swift.Any)&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.AnyCollection&lt;(label: Swift.Optional&lt;Swift.String&gt;, value: Swift.Any)&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="displayStyle" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.Mirror.DisplayStyle&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_displayStyle" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.Mirror.DisplayStyle&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.Mirror.DisplayStyle&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="subjectType" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Any" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_subjectType" isStatic="False" isProperty="True" returnType="Swift.Any" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Any" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="superclassMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.Mirror&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_superclassMirror" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.Mirror&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.Mirror&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="descendant" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Any?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private467" type="Swift.MirrorPath" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private468" type="Swift.MirrorPath" isVariadic="True" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <innerenum>
          <typedeclaration kind="enum" name="Mirror.AncestorRepresentation" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
          <elements>
          </elements>
          </typedeclaration>
        </innerenum>
        <innerenum>
          <typedeclaration kind="enum" name="Mirror.DisplayStyle" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <elements>
            </elements>
            <members>
              <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="private469" type="Swift.Mirror.DisplayStyle" isVariadic="False" />
                    <parameter index="1" publicName="_" privateName="private470" type="Swift.Mirror.DisplayStyle" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="into" privateName="into" type="Swift.Hasher" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerenum>
      </typedeclaration>
      <typedeclaration kind="struct" name="ObjectIdentifier" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="&lt;" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private471" type="Swift.ObjectIdentifier" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private472" type="Swift.ObjectIdentifier" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private473" type="Swift.ObjectIdentifier" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private474" type="Swift.ObjectIdentifier" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="hash" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="into" privateName="into" type="inout Swift.Hasher" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="struct" name="PartialRangeFrom" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="lowerBound" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_lowerBound" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private477" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Range&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="PartialRangeThrough" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="upperBound" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_upperBound" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private478" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Range&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="PartialRangeUpTo" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="upperBound" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_upperBound" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private479" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Range&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="PrefixSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="prefix" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.PrefixSequence&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private480" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <innerstruct>
          <typedeclaration kind="struct" name="PrefixSequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Element?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0"></parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="Range" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="isEmpty" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_isEmpty" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="lowerBound" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_lowerBound" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="upperBound" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_upperBound" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="==" hasThrows="False" operatorKind="Infix" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private481" type="Swift.Range&lt;T0&gt;" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private482" type="Swift.Range&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="clamped" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Range&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="Swift.Range&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="contains" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private483" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="overlaps" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private484" type="Swift.ClosedRange&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="overlaps" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Bool" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private485" type="Swift.Range&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="relative" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Range&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="Repeated" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="repeatedValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_repeatedValue" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="ReversedCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="reversed" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <innerstruct>
          <typedeclaration kind="struct" name="ReversedCollection.Index" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_base" isStatic="False" isProperty="True" returnType="T0.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="T0.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <innerstruct>
          <typedeclaration kind="struct" name="ReversedCollection.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0.Element?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0"></parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="SIMD16" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD8&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD16&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD16&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD8&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD16&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD16&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD8&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD16&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD16&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD8&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD16&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD8&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD16&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD8&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="SIMD2" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="x" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_x" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_x" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="y" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_y" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_y" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="SIMD3" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="x" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_x" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_x" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="y" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_y" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_y" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="z" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_z" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_z" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="SIMD32" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD16&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD32&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD32&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD16&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD32&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD32&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD16&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD32&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD32&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD16&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD32&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD16&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD32&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD16&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="SIMD4" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD2&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD4&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD4&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD2&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD4&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD4&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD2&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD4&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD4&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD2&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD4&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD2&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD4&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD2&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="w" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_w" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_w" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="x" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_x" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_x" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="y" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_y" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_y" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="z" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_z" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_z" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="newValue" privateName="newValue" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="SIMD64" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD32&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD64&lt;T0, T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD64&lt;T0, T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD32&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD64&lt;T0, T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD64&lt;T0, T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD32&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD64&lt;T0, T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD64&lt;T0, T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD32&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD64&lt;T0, T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD32&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD64&lt;T0, T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD32&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
          <where name="T0" relationship="inherits" from="SIMDScalar" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="SIMD8" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="evenHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD4&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD8&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_evenHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD8&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="highHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD4&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD8&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_highHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD8&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="lowHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD4&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD8&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_lowHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD8&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="oddHalf" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.SIMD4&lt;T0&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD8&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_oddHalf" isStatic="False" isProperty="True" returnType="Swift.SIMD4&lt;T0&gt;" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.SIMD8&lt;T0&gt;" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.SIMD4&lt;T0&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="SIMDMask" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="scalarCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_scalarCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="random" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.SIMDMask&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
              <where name="U0" relationship="inherits" from="RandomNumberGenerator" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="using" privateName="using" type="inout U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="random" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.SIMDMask&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="Slice" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="base" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_base" isStatic="False" isProperty="True" returnType="T0" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_endIndex" isStatic="False" isProperty="True" returnType="T0.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Indices" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_indices" isStatic="False" isProperty="True" returnType="T0.Indices" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0.Indices" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="T0.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_startIndex" isStatic="False" isProperty="True" returnType="T0.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="T0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="from" privateName="from" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="to" privateName="to" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private498" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="U0.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private499" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Index" />
          <associatedtype name="Indices" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="struct" name="StaticString" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="hasPointerRepresentation" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hasPointerRepresentation" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="isASCII" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Bool" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_isASCII" isStatic="False" isProperty="True" returnType="Swift.Bool" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="unicodeScalar" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Unicode.Scalar" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_unicodeScalar" isStatic="False" isProperty="True" returnType="Swift.Unicode.Scalar" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Unicode.Scalar" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="utf8CodeUnitCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_utf8CodeUnitCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="utf8Start" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.UnsafePointer&lt;Swift.UInt8&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_utf8Start" isStatic="False" isProperty="True" returnType="Swift.UnsafePointer&lt;Swift.UInt8&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.UnsafePointer&lt;Swift.UInt8&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="struct" name="StrideThrough" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.StrideThroughIterator&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="StrideThroughIterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="StrideTo" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="makeIterator" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.StrideToIterator&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="StrideToIterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="Substring" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="customMirror" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Mirror" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_customMirror" isStatic="False" isProperty="True" returnType="Swift.Mirror" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Mirror" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="description" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_description" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="hashValue" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_hashValue" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="unicodeScalars" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Substring.UnicodeScalarView" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_unicodeScalars" isStatic="False" isProperty="True" returnType="Swift.Substring.UnicodeScalarView" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.Substring" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Substring.UnicodeScalarView" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_unicodeScalars" isStatic="False" isProperty="True" returnType="Swift.Substring.UnicodeScalarView" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.Substring" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.Substring.UnicodeScalarView" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="utf16" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Substring.UTF16View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_utf16" isStatic="False" isProperty="True" returnType="Swift.Substring.UTF16View" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.Substring" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Substring.UTF16View" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_utf16" isStatic="False" isProperty="True" returnType="Swift.Substring.UTF16View" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.Substring" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.Substring.UTF16View" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="utf8" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Substring.UTF8View" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_utf8" isStatic="False" isProperty="True" returnType="Swift.Substring.UTF8View" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.Substring" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Substring.UTF8View" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="set_utf8" isStatic="False" isProperty="True" returnType="Swift.Substring.UTF8View" isPossiblyIncomplete="False" propertyType="Setter" operatorKind="None" hasThrows="False" accessibility="Public" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.Substring" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="newValue" privateName="newValue" type="Swift.Substring.UTF8View" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="append" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False" />
                <parameter index="1" publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private534" type="Swift.String.Index" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.String.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private535" type="Swift.String.Index" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="lowercased" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="replaceSubrange" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.Substring" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private536" type="Swift.Range&lt;Swift.String.Index&gt;" isVariadic="False" />
                <parameter index="1" publicName="with" privateName="with" type="Swift.Substring" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="replaceSubrange" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="" privateName="self" isVariadic="False" type="inout Swift.Substring" />
              </parameterlist>
              <parameterlist index="1">
                <parameter index="0" publicName="_" privateName="private537" type="Swift.Range&lt;Swift.String.Index&gt;" isVariadic="False" />
                <parameter index="1" publicName="with" privateName="with" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="uppercased" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="write" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="write" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" isMutating="True" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private538" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <innerstruct>
          <typedeclaration kind="struct" name="Substring.UTF16View" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.DefaultIndicies&lt;Swift.String.UTF16View&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.DefaultIndicies&lt;Swift.String.UTF16View&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.DefaultIndicies&lt;Swift.String.UTF16View&gt;" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False" />
                    <parameter index="1" publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="private539" type="Swift.String.Index" isVariadic="False" />
                    <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                    <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="private540" type="Swift.String.Index" isVariadic="False" />
                    <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <innerstruct>
          <typedeclaration kind="struct" name="Substring.UTF8View" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.DefaultIndicies&lt;Swift.String.UTF8View&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.DefaultIndicies&lt;Swift.String.UTF8View&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.DefaultIndicies&lt;Swift.String.UTF8View&gt;" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False" />
                    <parameter index="1" publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="private541" type="Swift.String.Index" isVariadic="False" />
                    <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                    <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="private542" type="Swift.String.Index" isVariadic="False" />
                    <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <innerstruct>
          <typedeclaration kind="struct" name="Substring.UnicodeScalarView" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.DefaultIndicies&lt;Swift.String.UnicodeScalarView&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.DefaultIndicies&lt;Swift.String.UnicodeScalarView&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.DefaultIndicies&lt;Swift.String.UnicodeScalarView&gt;" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String.Index" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
              <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.String.Index" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="privateName" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="from" privateName="from" type="Swift.String.Index" isVariadic="False" />
                    <parameter index="1" publicName="to" privateName="to" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="after" privateName="after" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="private543" type="Swift.String.Index" isVariadic="False" />
                    <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                    <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Swift.String.Index" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.String.Index" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="private544" type="Swift.String.Index" isVariadic="False" />
                    <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
              <func name="replaceSubrange" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <genericparameters>
                  <param name="V0" />
                </genericparameters>
                <parameterlists>
                  <parameterlist index="0">
                    <parameter index="0" publicName="_" privateName="private545" type="Swift.Range&lt;Swift.String.Index&gt;" isVariadic="False" />
                    <parameter index="1" publicName="with" privateName="with" type="V0" isVariadic="False" />
                  </parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
      </typedeclaration>
      <typedeclaration kind="struct" name="SystemRandomNumberGenerator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UInt64" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="struct" name="UnfoldSequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="Unmanaged" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="autorelease" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Unmanaged&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="fromOpaque" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Unmanaged&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private811" type="Swift.UnsafeRawPointer" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="passRetained" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Unmanaged&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private812" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="passUnretained" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.Unmanaged&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private813" type="T0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="release" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="retain" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Unmanaged&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="takeRetainedValue" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="takeUnretainedValue" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="toOpaque" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutableRawPointer" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
          <where name="T0" relationship="inherits" from="Swift.AnyObject" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="UnsafeBufferPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="baseAddress" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.UnsafePointer&lt;T0&gt;&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_baseAddress" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.UnsafePointer&lt;T0&gt;&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.UnsafePointer&lt;T0&gt;&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="from" privateName="from" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="to" privateName="to" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="inout Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private814" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private815" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <innerstruct>
          <typedeclaration kind="struct" name="UnsafeBufferPointer.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="T0?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0"></parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="struct" name="UnsafeMutableBufferPointer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="baseAddress" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Optional&lt;Swift.UnsafeMutablePointer&lt;T0&gt;&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_baseAddress" isStatic="False" isProperty="True" returnType="Swift.Optional&lt;Swift.UnsafeMutablePointer&lt;T0&gt;&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Optional&lt;Swift.UnsafeMutablePointer&lt;T0&gt;&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="count" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_count" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="debugDescription" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.String" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_debugDescription" isStatic="False" isProperty="True" returnType="Swift.String" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="endIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_endIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="indices" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Range&lt;Int&gt;" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_indices" isStatic="False" isProperty="True" returnType="Swift.Range&lt;Int&gt;" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Range&lt;Int&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <property name="startIndex" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_startIndex" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="allocate" hasThrows="False" operatorKind="None" isStatic="True" isPossiblyIncomplete="False" returnType="Swift.UnsafeMutableBufferPointer&lt;T0&gt;" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="capacity" privateName="capacity" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="assign" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="repeating" privateName="repeating" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="deallocate" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="distance" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="from" privateName="from" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="to" privateName="to" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="inout Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private816" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="Swift.Int" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private817" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="initialize" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(U0B0.Iterator, Swift.Int)" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="from" privateName="from" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="initialize" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <genericparameters>
              <param name="U0" />
            </genericparameters>
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="repeating" privateName="repeating" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="swapAt" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="()" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private818" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private819" type="Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Iterator" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="struct" name="Zip2Sequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <property name="underestimatedCount" isPossiblyIncomplete="False" isStatic="False" accessibility="Public" type="Swift.Int" isDeprecated="False" isUnavailable="False" isOptional="False" storage="Addressed" />
          <func name="get_underestimatedCount" isStatic="False" isProperty="True" returnType="Swift.Int" isPossiblyIncomplete="False" operatorKind="None" hasThrows="False" accessibility="Public" propertyType="Getter" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="privateName" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <innerstruct>
          <typedeclaration kind="struct" name="Zip2Sequence.Iterator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <members>
              <func name="next" hasThrows="False" operatorKind="None" isStatic="False" isPossiblyIncomplete="False" returnType="(T0.Element, T1A1.Element)?" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
                <parameterlists>
                  <parameterlist index="0"></parameterlist>
                </parameterlists>
              </func>
            </members>
          </typedeclaration>
        </innerstruct>
        <genericparameters>
          <param name="T0" />
          <param name="T1" />
        </genericparameters>
      </typedeclaration>
      <typedeclaration kind="protocol" name="BidirectionalCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="distance" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="from" privateName="from" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="to" privateName="to" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="before" privateName="before" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="before" privateName="before" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private830" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private831" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <associatedtypes>
          <associatedtype name="Index" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="BinaryFloatingPoint" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="binade" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="exponentBitCount" operatorKind="None" isStatic="True" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="exponentBitPattern" operatorKind="None" isStatic="False" returnType="T0.RawExponent" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="significandBitCount" operatorKind="None" isStatic="True" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="significandBitPattern" operatorKind="None" isStatic="False" returnType="T0.RawSignificand" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="significandWidth" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="RawExponent" />
          <associatedtype name="RawSignificand" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="BinaryInteger" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="%" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private832" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private833" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="%=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private834" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private835" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="&amp;" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private836" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private837" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="&amp;=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private838" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private839" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="/" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private840" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private841" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="/=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private842" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private843" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="&lt;&lt;" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private844" type="T0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private845" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="&lt;&lt;=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private846" type="T0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private847" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="&gt;&gt;" operatorKind="Infix" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private848" type="T0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private849" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="&gt;&gt;=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private850" type="T0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private851" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="^" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private852" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private853" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="^=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private854" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private855" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="_binaryLogarithm" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="_lowWord" operatorKind="None" isStatic="False" returnType="Swift.UInt" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="bitWidth" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="isMultiple" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="of" privateName="of" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="isSigned" operatorKind="None" isStatic="True" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="quotientAndRemainder" operatorKind="None" isStatic="False" returnType="(quotient: U0, remainder: U0)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="signum" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="trailingZeroBitCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="words" operatorKind="None" isStatic="False" returnType="T0.Words" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="|" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private856" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private857" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="|=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private858" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private859" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="~" operatorKind="Prefix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private860" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Words" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="CVarArg" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="_cVarArgEncoding" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Int&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="CodingKey" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="intValue" operatorKind="None" isStatic="False" returnType="Swift.Int?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="stringValue" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="Collection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="_customIndexOfEquatableElement" operatorKind="None" isStatic="False" returnType="U0.Index??" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private861" type="U0.Element" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="_customLastIndexOfEquatableElement" operatorKind="None" isStatic="False" returnType="U0.Index??" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private862" type="U0.Element" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="_failEarlyRangeCheck" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private863" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="bounds" privateName="bounds" type="Swift.ClosedRange&lt;U0.Index&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="_failEarlyRangeCheck" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private864" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="bounds" privateName="bounds" type="Swift.Range&lt;U0.Index&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="_failEarlyRangeCheck" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private865" type="Swift.Range&lt;T0.Index&gt;" isVariadic="False" />
                <parameter index="1" publicName="bounds" privateName="bounds" type="Swift.Range&lt;T0.Index&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="count" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="distance" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="from" privateName="from" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="to" privateName="to" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="endIndex" operatorKind="None" isStatic="False" returnType="T0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="formIndex" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private866" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private867" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="indices" operatorKind="None" isStatic="False" returnType="T0.Indices" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="isEmpty" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="startIndex" operatorKind="None" isStatic="False" returnType="T0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="subscript" operatorKind="None" isStatic="False" returnType="T0.SubSequence" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private868" type="Swift.Range&lt;T0.Index&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Element" />
          <associatedtype name="Index" />
          <associatedtype name="Indices" />
          <associatedtype name="SubSequence" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="CustomDebugStringConvertible" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="debugDescription" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="CustomPlaygroundDisplayConvertible" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="playgroundDescription" operatorKind="None" isStatic="False" returnType="Swift.Any" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="CustomReflectable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="customMirror" operatorKind="None" isStatic="False" returnType="Swift.Mirror" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="Decoder" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="container" operatorKind="None" isStatic="False" returnType="Swift.KeyedDecodingContainer&lt;U0&gt;" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="singleValueContainer" operatorKind="None" isStatic="False" returnType="Swift.SingleValueDecodingContainer" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="unkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedDecodingContainer" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="userInfo" operatorKind="None" isStatic="False" returnType="Swift.Dictionary&lt;Swift.CodingUserInfoKey, Swift.Any&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="Encodable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="Swift.Encoder" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="Encoder" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="container" operatorKind="None" isStatic="False" returnType="Swift.KeyedEncodingContainer&lt;U0&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="singleValueContainer" operatorKind="None" isStatic="False" returnType="Swift.SingleValueEncodingContainer" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="unkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedEncodingContainer" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="userInfo" operatorKind="None" isStatic="False" returnType="Swift.Dictionary&lt;Swift.CodingUserInfoKey, Swift.Any&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="FixedWidthInteger" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="&amp;&lt;&lt;" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private879" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private880" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="&amp;&lt;&lt;=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private881" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private882" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="&amp;&gt;&gt;" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private883" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private884" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="&amp;&gt;&gt;=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private885" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private886" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="addingReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: U0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private887" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="bigEndian" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="bitWidth" operatorKind="None" isStatic="True" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="byteSwapped" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="dividedReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: U0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="by" privateName="by" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="dividingFullWidth" operatorKind="None" isStatic="False" returnType="(quotient: T0, remainder: T0)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private888" type="(high: T0, low: T0.Magnitude)" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="leadingZeroBitCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="littleEndian" operatorKind="None" isStatic="False" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="max" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="min" operatorKind="None" isStatic="True" returnType="T0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="multipliedFullWidth" operatorKind="None" isStatic="False" returnType="(high: U0, low: U0.Magnitude)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="by" privateName="by" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="multipliedReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: U0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="by" privateName="by" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="nonzeroBitCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="remainderReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: U0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="dividingBy" privateName="dividingBy" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="subtractingReportingOverflow" operatorKind="None" isStatic="False" returnType="(partialValue: U0, overflow: Swift.Bool)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private889" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Magnitude" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="Identifiable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="id" operatorKind="None" isStatic="False" returnType="T0.ID" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="ID" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="IteratorProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="next" operatorKind="None" isStatic="False" returnType="T0.Element?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Element" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="KeyedDecodingContainerProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="allKeys" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;T0.Key&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="contains" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private909" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private910" type="Swift.UInt16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private911" type="Swift.String" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private912" type="Swift.UInt16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private913" type="Meta" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private914" type="Swift.Int8" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private915" type="Swift.Int16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private916" type="Swift.Int64" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private917" type="Swift.Int32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private918" type="Swift.Int64" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private919" type="Swift.UInt8" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private920" type="Swift.UInt32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private921" type="Swift.UInt64" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private922" type="Swift.Int32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private923" type="Swift.UInt32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt64?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private924" type="Swift.UInt64" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private925" type="Swift.UInt8" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private926" type="Swift.UInt16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.String?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private927" type="Swift.String" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="U0?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private928" type="Meta" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private929" type="Swift.Int8" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private930" type="Swift.UInt32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private931" type="Swift.Int16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private932" type="Swift.Int32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int64?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private933" type="Swift.Int64" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private934" type="Swift.UInt8" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private935" type="Swift.UInt16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private936" type="Swift.Int16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private937" type="Swift.UInt32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeNil" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="nestedContainer" operatorKind="None" isStatic="False" returnType="Swift.KeyedDecodingContainer&lt;U0&gt;" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="nestedUnkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedDecodingContainer" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="superDecoder" operatorKind="None" isStatic="False" returnType="Swift.Decoder" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="superDecoder" operatorKind="None" isStatic="False" returnType="Swift.Decoder" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Key" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="KeyedEncodingContainerProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private938" type="Swift.Int64" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private939" type="Swift.String" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private940" type="Swift.Bool" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private941" type="Swift.Double" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private942" type="Swift.Float" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private943" type="Swift.Int" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private944" type="Swift.UInt" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private945" type="U0" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private946" type="Swift.UInt" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private947" type="Swift.Int8" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private948" type="Swift.UInt64" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private949" type="Swift.UInt32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private950" type="U0" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private951" type="Swift.UInt16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private952" type="Swift.Int32" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private953" type="Swift.Int16" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private954" type="Swift.Int8" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private955" type="Swift.UInt8" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeConditional" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private956" type="U0" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private957" type="Swift.Optional&lt;Swift.UInt32&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private958" type="Swift.Optional&lt;Swift.UInt64&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private959" type="Swift.Optional&lt;Swift.Int64&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private960" type="Swift.Optional&lt;Swift.UInt16&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private961" type="Swift.Optional&lt;Swift.String&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private962" type="Swift.Optional&lt;Bool&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private963" type="Swift.Optional&lt;Double&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private964" type="Swift.Optional&lt;Float&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private965" type="Swift.Optional&lt;Int&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private966" type="Swift.Optional&lt;UInt&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private967" type="Swift.Optional&lt;U0&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private968" type="Swift.Optional&lt;Swift.Int8&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private969" type="Swift.Optional&lt;Swift.Int16&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private970" type="Swift.Optional&lt;Swift.Int32&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private971" type="Swift.Optional&lt;Swift.Int64&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private972" type="Swift.Optional&lt;Swift.UInt8&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private973" type="Swift.Optional&lt;Swift.UInt16&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeIfPresent" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private974" type="Swift.Optional&lt;Swift.UInt32&gt;" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeNil" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="nestedContainer" operatorKind="None" isStatic="False" returnType="Swift.KeyedEncodingContainer&lt;U0&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False" />
                <parameter index="1" publicName="forKey" privateName="forKey" type="T0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="nestedUnkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedEncodingContainer" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="superEncoder" operatorKind="None" isStatic="False" returnType="Swift.Encoder" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="superEncoder" operatorKind="None" isStatic="False" returnType="Swift.Encoder" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="forKey" privateName="forKey" type="U0.Key" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Key" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="LazySequenceProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="elements" operatorKind="None" isStatic="False" returnType="T0.Elements" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Elements" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="MirrorPath" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members></members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="MutableCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="_withUnsafeMutableBufferPointerIfSupported" operatorKind="None" isStatic="False" returnType="U0?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private975" type="(Swift.UnsafeMutableBufferPointer&lt;T0.Element&gt; )-&gt; U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="partition" operatorKind="None" isStatic="False" returnType="T0.Index" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="by" privateName="by" type="(T0.Element )-&gt; Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="subscript" operatorKind="None" isStatic="False" returnType="T0.SubSequence" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private976" type="Swift.Range&lt;T0.Index&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="subscript" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private977" type="U0.SubSequence" isVariadic="False" />
                <parameter index="1" publicName="a" privateName="a" type="Swift.Range&lt;U0.Index&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="subscript" operatorKind="None" isStatic="False" returnType="U0.Element" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private978" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="subscript" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private979" type="U0.Element" isVariadic="False" />
                <parameter index="1" publicName="a" privateName="a" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="swapAt" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private980" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private981" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="withContiguousMutableStorageIfAvailable" operatorKind="None" isStatic="False" returnType="U0?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private982" type="(Swift.UnsafeMutableBufferPointer&lt;T0.Element&gt; )-&gt; U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Element" />
          <associatedtype name="Index" />
          <associatedtype name="SubSequence" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="Numeric" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="*" operatorKind="Infix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private983" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private984" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="*=" operatorKind="Infix" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private985" type="U0" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private986" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="magnitude" operatorKind="None" isStatic="False" returnType="T0.Magnitude" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Magnitude" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="RandomAccessCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="distance" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="from" privateName="from" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="to" privateName="to" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private987" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
                <parameter index="2" publicName="limitedBy" privateName="limitedBy" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="index" operatorKind="None" isStatic="False" returnType="U0.Index" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private988" type="U0.Index" isVariadic="False" />
                <parameter index="1" publicName="offsetBy" privateName="offsetBy" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <associatedtypes>
          <associatedtype name="Index" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="RandomNumberGenerator" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="next" operatorKind="None" isStatic="False" returnType="Swift.UInt64" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="RangeExpression" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="contains" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private989" type="U0.Bound" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="relative" operatorKind="None" isStatic="False" returnType="Swift.Range&lt;T0.Bound&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Bound" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="RangeReplaceableCollection" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="_customRemoveLast" operatorKind="None" isStatic="False" returnType="T0.Element?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="_customRemoveLast" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private990" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="_customRemoveLast" operatorKind="None" isStatic="False" returnType="T0.Element?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="remove" operatorKind="None" isStatic="False" returnType="U0.Element" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="at" privateName="at" type="U0.Index" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="removeAll" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="keepingCapacity" privateName="keepingCapacity" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="removeAll" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="where" privateName="where" type="(T0.Element )-&gt; Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="removeFirst" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private991" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="removeFirst" operatorKind="None" isStatic="False" returnType="T0.Element" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="removeSubrange" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private992" type="Swift.Range&lt;T0.Index&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="reserveCapacity" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private993" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Element" />
          <associatedtype name="Index" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="RawRepresentable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="rawValue" operatorKind="None" isStatic="False" returnType="T0.RawValue" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="RawValue" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="SIMDStorage" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="scalarCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="subscript" operatorKind="None" isStatic="False" returnType="T0.Scalar" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private994" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="subscript" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private995" type="U0.Scalar" isVariadic="False" />
                <parameter index="1" publicName="a" privateName="a" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Scalar" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="Sequence" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="_copyContents" operatorKind="None" isStatic="False" returnType="(T0.Iterator, Swift.Int)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="initializing" privateName="initializing" type="Swift.UnsafeMutableBufferPointer&lt;T0.Element&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="_copyToContiguousArray" operatorKind="None" isStatic="False" returnType="Swift.ContiguousArray&lt;T0.Element&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="_customContainsEquatableElement" operatorKind="None" isStatic="False" returnType="Swift.Bool?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private996" type="U0.Element" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="makeIterator" operatorKind="None" isStatic="False" returnType="T0.Iterator" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="underestimatedCount" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="withContiguousStorageIfAvailable" operatorKind="None" isStatic="False" returnType="U0?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private997" type="(Swift.UnsafeBufferPointer&lt;T0.Element&gt; )-&gt; U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="Iterator" />
          <associatedtype name="Element" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="SetAlgebra" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="contains" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private998" type="U0.Element" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="formIntersection" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private999" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="intersection" operatorKind="None" isStatic="False" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1000" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="isDisjoint" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="with" privateName="with" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="isEmpty" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="isSubset" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="of" privateName="of" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="isSuperset" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="of" privateName="of" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="remove" operatorKind="None" isStatic="False" returnType="U0.Element?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1001" type="U0.Element" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="subtract" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1002" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="subtracting" operatorKind="None" isStatic="False" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1003" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <associatedtypes>
          <associatedtype name="Element" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="SignedNumeric" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="-" operatorKind="Prefix" isStatic="True" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1008" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="negate" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="SingleValueDecodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1009" type="Swift.UInt64" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1010" type="Swift.UInt32" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1011" type="Swift.UInt16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1012" type="Swift.UInt8" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1013" type="Swift.Int64" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1014" type="Swift.Int32" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1015" type="Swift.Int16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1016" type="Swift.Int8" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1017" type="Meta" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1018" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeNil" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="SingleValueEncodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1019" type="Swift.Int16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1020" type="Swift.Int32" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1021" type="Swift.Int64" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1022" type="Swift.UInt8" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1023" type="Swift.UInt16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1024" type="Swift.UInt32" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1025" type="Swift.UInt64" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1026" type="Swift.Int16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1027" type="Swift.Int8" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1028" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1029" type="Swift.UInt" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1030" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1031" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1032" type="Swift.Double" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1033" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1034" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeNil" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="Strideable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="_step" operatorKind="None" isStatic="True" returnType="(index: Swift.Int?, value: U0)" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="after" privateName="after" type="(index: Swift.Optional&lt;Int&gt;, value: U0)" isVariadic="False" />
                <parameter index="1" publicName="from" privateName="from" type="U0" isVariadic="False" />
                <parameter index="2" publicName="by" privateName="by" type="U0.Stride" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="advanced" operatorKind="None" isStatic="False" returnType="U0" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="by" privateName="by" type="U0.Stride" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="distance" operatorKind="None" isStatic="False" returnType="U0.Stride" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <associatedtypes>
          <associatedtype name="Stride" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="StringInterpolationProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="appendLiteral" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1035" type="U0.StringLiteralType" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <associatedtypes>
          <associatedtype name="StringLiteralType" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="StringProtocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="hasPrefix" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1036" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="hasSuffix" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1037" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="lowercased" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="unicodeScalars" operatorKind="None" isStatic="False" returnType="T0.UnicodeScalarView" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="uppercased" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="utf16" operatorKind="None" isStatic="False" returnType="T0.UTF16View" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="utf8" operatorKind="None" isStatic="False" returnType="T0.UTF8View" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="withCString" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="encodedAs" privateName="encodedAs" type="Meta" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private1038" type="(Swift.UnsafePointer&lt;U1B1.CodeUnit&gt; )-&gt; U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="withCString" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1039" type="(Swift.UnsafePointer&lt;Swift.Int8&gt; )-&gt; U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="withCString" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="encodedAs" privateName="encodedAs" type="Meta" isVariadic="False" />
                <parameter index="1" publicName="_" privateName="private1040" type="(Swift.UnsafePointer&lt;U1B1.CodeUnit&gt; )-&gt; U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="UnicodeScalarView" />
          <associatedtype name="UTF16View" />
          <associatedtype name="UTF8View" />
          <associatedtype name="CodeUnit" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="TextOutputStream" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="_lock" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="_unlock" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="_writeASCII" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1041" type="Swift.UnsafeBufferPointer&lt;Swift.UInt8&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="write" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1042" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="TextOutputStreamable" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="write" operatorKind="None" isStatic="False" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="to" privateName="to" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="UnicodeCodec" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="_nullCodeUnitOffset" operatorKind="None" isStatic="True" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="in" privateName="in" type="Swift.UnsafePointer&lt;T0.CodeUnit&gt;" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UnicodeDecodingResult" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1043" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="True" returnType="()" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1044" type="Swift.Unicode.Scalar" isVariadic="False" />
                <parameter index="1" publicName="into" privateName="into" type="(T0.CodeUnit )-&gt; ()" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
        </members>
        <genericparameters>
          <param name="T0" />
        </genericparameters>
        <associatedtypes>
          <associatedtype name="CodeUnit" />
        </associatedtypes>
      </typedeclaration>
      <typedeclaration kind="protocol" name="UnkeyedDecodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="count" operatorKind="None" isStatic="False" returnType="Swift.Int?" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="currentIndex" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1045" type="Swift.UInt8" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.String" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1046" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="U0" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1047" type="Meta" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int8" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1048" type="Swift.Int8" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1049" type="Swift.Int16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1050" type="Swift.Int32" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1051" type="Swift.Int64" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1052" type="Swift.UInt16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt32" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1053" type="Swift.UInt32" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt64" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1054" type="Swift.UInt64" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.Int16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1055" type="Swift.Int16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decode" operatorKind="None" isStatic="False" returnType="Swift.UInt16" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1056" type="Swift.UInt16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt64?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1057" type="Swift.UInt64" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1058" type="Swift.UInt8" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1059" type="Swift.UInt16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.String?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1060" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="U0?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1061" type="Meta" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1062" type="Swift.Int8" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1063" type="Swift.UInt32" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1064" type="Swift.Int16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1065" type="Swift.Int32" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int64?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1066" type="Swift.Int64" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt8?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1067" type="Swift.UInt8" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1068" type="Swift.UInt16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.Int16?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1069" type="Swift.Int16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeIfPresent" operatorKind="None" isStatic="False" returnType="Swift.UInt32?" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1070" type="Swift.UInt32" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="decodeNil" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="isAtEnd" operatorKind="None" isStatic="False" returnType="Swift.Bool" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="nestedContainer" operatorKind="None" isStatic="False" returnType="Swift.KeyedDecodingContainer&lt;U0&gt;" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="nestedUnkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedDecodingContainer" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="superDecoder" operatorKind="None" isStatic="False" returnType="Swift.Decoder" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
      <typedeclaration kind="protocol" name="UnkeyedEncodingContainer" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
        <members>
          <func name="codingPath" operatorKind="None" isStatic="False" returnType="Swift.Array&lt;Swift.CodingKey&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="count" operatorKind="None" isStatic="False" returnType="Swift.Int" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1071" type="Swift.Double" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1072" type="Swift.Bool" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1073" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1074" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1075" type="Swift.String" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1076" type="Swift.Float" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1077" type="Swift.UInt" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1078" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1079" type="Swift.UInt16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1080" type="Swift.UInt" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1081" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1082" type="Swift.Int8" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1083" type="Swift.Int16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1084" type="Swift.Int32" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1085" type="Swift.Int64" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1086" type="Swift.Int" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1087" type="Swift.UInt64" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1088" type="Swift.UInt32" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1089" type="Swift.UInt16" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1090" type="Swift.UInt8" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="contentsOf" privateName="contentsOf" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encode" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1091" type="Swift.UInt8" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeConditional" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="_" privateName="private1092" type="U0" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="encodeNil" operatorKind="None" isStatic="False" returnType="()" hasThrows="True" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="nestedContainer" operatorKind="None" isStatic="False" returnType="Swift.KeyedEncodingContainer&lt;U0&gt;" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0">
                <parameter index="0" publicName="keyedBy" privateName="keyedBy" type="Meta" isVariadic="False" />
              </parameterlist>
            </parameterlists>
          </func>
          <func name="nestedUnkeyedContainer" operatorKind="None" isStatic="False" returnType="Swift.UnkeyedEncodingContainer" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
          <func name="superEncoder" operatorKind="None" isStatic="False" returnType="Swift.Encoder" hasThrows="False" isPossiblyIncomplete="True" accessibility="Public" isProperty="False" isFinal="False" isDeprecated="False" isUnavailable="False" isOptional="False" isRequired="False" isConvenienceInit="False" objcSelector="">
            <parameterlists>
              <parameterlist index="0"></parameterlist>
            </parameterlists>
          </func>
        </members>
      </typedeclaration>
    </module>
  </modulelist>
</xamreflect>