<ManualBinderFinder version="1.0" encoding="UTF-8">
<xamreflect version="1.0">
   <modulelist>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftObjectiveC" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="ObjectiveC.NSZone">
               </Struct>
               <Struct name="ObjectiveC.ObjCBool">
                  <property>
                     <name="boolValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="ObjectiveC.Selector">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(ObjectiveC.Selector, ObjectiveC.Selector) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="ObjectiveC.Selector" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="ObjectiveC.Selector" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
            </innerstructs>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftXCTest" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftCore" swiftVersion="??">
         <typedeclaration kind="class" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerclasses>
               <Class name="Swift.AnyKeyPath">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rootType">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="valueType">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.AnyKeyPath, Swift.AnyKeyPath) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.AnyKeyPath" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.AnyKeyPath" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Class>
               <Class name="Swift.AnyObject">
               </Class>
               <Class name="Swift.KeyPath">
               </Class>
               <Class name="Swift.ManagedBuffer">
                  <property>
                     <name="capacity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="firstElementAddress">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="header">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="headerAddress">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="create">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="static func create(minimumCapacity: Int, makingHeaderWith: Swift.ManagedBuffer(Self, ???) -> Self) -> Swift.ManagedBuffer(Self, ???)">
                     <isStatic="True">
                     <returnType="Swift.ManagedBuffer<Self, ???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="minimumCapacity: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="makingHeaderWith: Swift.ManagedBuffer(Self ???) -> Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutablePointerToElements">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutablePointerToElementsSwift.UnsafeMutablePointer(???) -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutablePointerToHeader">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutablePointerToHeaderSwift.UnsafeMutablePointer(Self) -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutablePointers">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutablePointers(Swift.UnsafeMutablePointer(Self), Swift.UnsafeMutablePointer(???)) -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UnsafeMutablePointer(???)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Class>
               <Class name="Swift.PartialKeyPath">
               </Class>
               <Class name="Swift.ReferenceWritableKeyPath">
               </Class>
               <Class name="Swift.WritableKeyPath">
               </Class>
            </innerclasses>
         </typedeclaration>
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="Swift.AnyBidirectionalCollection">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="underestimatedCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Swift.AnyIndex, to: Swift.AnyIndex) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="drop">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func drop(while: Self -> Bool) -> Swift.AnyBidirectionalCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyBidirectionalCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dropFirst">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dropFirstInt -> Swift.AnyBidirectionalCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyBidirectionalCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dropLast">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dropLastInt -> Swift.AnyBidirectionalCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyBidirectionalCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="filter">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func filterSelf -> Bool -> Swift.Array(Self)">
                     <isStatic="False">
                     <returnType="Swift.Array<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="forEach">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func forEachSelf">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIndex(after: Swift.AnyIndex)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Swift.AnyIndex) -> Swift.AnyIndex">
                     <isStatic="False">
                     <returnType="Swift.AnyIndex">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Swift.AnyIterator(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyIterator<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="map">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func mapSelf -> ??? -> Swift.Array(???)">
                     <isStatic="False">
                     <returnType="Swift.Array<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="prefix">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func prefix(while: Self -> Bool) -> Swift.AnyBidirectionalCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyBidirectionalCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="suffix">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func suffixInt -> Swift.AnyBidirectionalCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyBidirectionalCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.AnyCollection">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="underestimatedCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Swift.AnyIndex, to: Swift.AnyIndex) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="drop">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func drop(while: Self -> Bool) -> Swift.AnyCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dropFirst">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dropFirstInt -> Swift.AnyCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dropLast">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dropLastInt -> Swift.AnyCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="filter">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func filterSelf -> Bool -> Swift.Array(Self)">
                     <isStatic="False">
                     <returnType="Swift.Array<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="forEach">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func forEachSelf">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIndex(after: Swift.AnyIndex)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Swift.AnyIndex) -> Swift.AnyIndex">
                     <isStatic="False">
                     <returnType="Swift.AnyIndex">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Swift.AnyIterator(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyIterator<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="map">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func mapSelf -> ??? -> Swift.Array(???)">
                     <isStatic="False">
                     <returnType="Swift.Array<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="prefix">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func prefix(while: Self -> Bool) -> Swift.AnyCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="suffix">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func suffixInt -> Swift.AnyCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.AnyHashable">
                  <property>
                     <name="base">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.AnyHashable, Swift.AnyHashable) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.AnyHashable" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.AnyHashable" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.AnyIndex">
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.AnyIndex, Swift.AnyIndex) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.AnyIndex, Swift.AnyIndex) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.AnyIterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.AnyRandomAccessCollection">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="underestimatedCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Swift.AnyIndex, to: Swift.AnyIndex) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="drop">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func drop(while: Self -> Bool) -> Swift.AnyRandomAccessCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyRandomAccessCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dropFirst">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dropFirstInt -> Swift.AnyRandomAccessCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyRandomAccessCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dropLast">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dropLastInt -> Swift.AnyRandomAccessCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyRandomAccessCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="filter">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func filterSelf -> Bool -> Swift.Array(Self)">
                     <isStatic="False">
                     <returnType="Swift.Array<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="forEach">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func forEachSelf">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIndex(after: Swift.AnyIndex)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Swift.AnyIndex) -> Swift.AnyIndex">
                     <isStatic="False">
                     <returnType="Swift.AnyIndex">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.AnyIndex" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Swift.AnyIterator(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyIterator<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="map">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func mapSelf -> ??? -> Swift.Array(???)">
                     <isStatic="False">
                     <returnType="Swift.Array<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="prefix">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func prefix(while: Self -> Bool) -> Swift.AnyRandomAccessCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyRandomAccessCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="suffix">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func suffixInt -> Swift.AnyRandomAccessCollection(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyRandomAccessCollection<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.AnySequence">
                  <property>
                     <name="underestimatedCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="drop">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func drop(while: Self -> Bool) -> Swift.AnySequence(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnySequence<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dropFirst">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dropFirstInt -> Swift.AnySequence(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnySequence<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dropLast">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dropLastInt -> Swift.Array(Self)">
                     <isStatic="False">
                     <returnType="Swift.Array<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="filter">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func filterSelf -> Bool -> Swift.Array(Self)">
                     <isStatic="False">
                     <returnType="Swift.Array<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="forEach">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func forEachSelf">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Swift.AnyIterator(Self)">
                     <isStatic="False">
                     <returnType="Swift.AnyIterator<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="map">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func mapSelf -> ??? -> Swift.Array(???)">
                     <isStatic="False">
                     <returnType="Swift.Array<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="prefix">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func prefix(while: Self -> Bool) -> Swift.Array(Self)">
                     <isStatic="False">
                     <returnType="Swift.Array<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="while: Self -> Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="suffix">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func suffixInt -> Swift.Array(Self)">
                     <isStatic="False">
                     <returnType="Swift.Array<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Array">
                  <property>
                     <name="capacity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Swift.Array(Self), Swift.Array(Self)) -> Swift.Array(Self)">
                     <isStatic="True">
                     <returnType="Swift.Array<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Array(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Array(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Swift.Array(Self), Swift.Array(Self))">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Array(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Array(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Int, to: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIndex(after: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remove">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remove(at: Int) -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="at: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeAll">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func removeAll(keepingCapacity: Bool)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="reserveCapacity">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reserveCapacityInt">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="reserveCapacityForAppend">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reserveCapacityForAppend(newElementsCount: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="newElementsCount: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withContiguousMutableStorageIfAvailable">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withContiguousMutableStorageIfAvailableSwift.UnsafeMutableBufferPointer(Self) -> ??? -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withContiguousStorageIfAvailable">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withContiguousStorageIfAvailableSwift.UnsafeBufferPointer(Self) -> ??? -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBufferPointer">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBufferPointerSwift.UnsafeBufferPointer(Self) -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafeRawBufferPointer -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutableBufferPointer">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutableBufferPointerSwift.UnsafeMutableBufferPointer(Self) -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutableBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutableBytesSwift.UnsafeMutableRawBufferPointer -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.ArraySlice">
                  <property>
                     <name="capacity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Int, to: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIndex(after: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remove">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remove(at: Int) -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="at: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeAll">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func removeAll(keepingCapacity: Bool)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="reserveCapacity">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reserveCapacityInt">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="reserveCapacityForAppend">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reserveCapacityForAppend(newElementsCount: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="newElementsCount: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withContiguousMutableStorageIfAvailable">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withContiguousMutableStorageIfAvailableSwift.UnsafeMutableBufferPointer(Self) -> ??? -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withContiguousStorageIfAvailable">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withContiguousStorageIfAvailableSwift.UnsafeBufferPointer(Self) -> ??? -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBufferPointer">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBufferPointerSwift.UnsafeBufferPointer(Self) -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafeRawBufferPointer -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutableBufferPointer">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutableBufferPointerSwift.UnsafeMutableBufferPointer(Self) -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutableBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutableBytesSwift.UnsafeMutableRawBufferPointer -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.AutoreleasingUnsafeMutablePointer">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="pointee">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Bool">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="!">
                     <hasThrows="False">
                     <operatorKind="Prefix">
                     <signature="static func !Bool -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&&">
                     <hasThrows="True">
                     <operatorKind="Infix">
                     <signature="static func &&(Bool, () -> Bool) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Bool" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="() -> Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Bool, Bool) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Bool" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="random">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func random(using: Self) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="using: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="toggle">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func toggle()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="||">
                     <hasThrows="True">
                     <operatorKind="Infix">
                     <signature="static func ||(Bool, () -> Bool) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Bool" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="() -> Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.CVaListPointer">
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Character">
                  <property>
                     <name="asciiValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hexDigitValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isASCII">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isCased">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isCurrencySymbol">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isHexDigit">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isLetter">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isLowercase">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isMathSymbol">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isNewline">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isNumber">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isPunctuation">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSymbol">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isUppercase">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isWhitespace">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isWholeNumber">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="unicodeScalars">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf16">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf8">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="wholeNumberValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.Character, Swift.Character) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Character" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Character" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.Character, Swift.Character) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Character" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Character" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="lowercased">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func lowercased() -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="uppercased">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func uppercased() -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="write">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func write(to: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.ClosedRange">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isEmpty">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lowerBound">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="upperBound">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.ClosedRange(Self), Swift.ClosedRange(Self)) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.ClosedRange(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.ClosedRange(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="clamped">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func clamped(to: Swift.ClosedRange(Self)) -> Swift.ClosedRange(Self)">
                     <isStatic="False">
                     <returnType="Swift.ClosedRange<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.ClosedRange(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="contains">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func containsSelf -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="overlaps">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func overlapsSwift.ClosedRange(Self) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="relative">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func relative(to: ???) -> Swift.Range(Self)">
                     <isStatic="False">
                     <returnType="Swift.Range<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.CodingUserInfoKey">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.CodingUserInfoKey, Swift.CodingUserInfoKey) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.CodingUserInfoKey" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.CodingUserInfoKey" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.CollectionDifference">
                  <func>
                     <name="inverse">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func inverse() -> Swift.CollectionDifference(Self)">
                     <isStatic="False">
                     <returnType="Swift.CollectionDifference<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.CollectionDifference.Index">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.CollectionOfOne">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.CollectionOfOne.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.ContiguousArray">
                  <property>
                     <name="capacity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Int, to: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIndex(after: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remove">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remove(at: Int) -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="at: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeAll">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func removeAll(keepingCapacity: Bool)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="reserveCapacity">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reserveCapacityInt">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="reserveCapacityForAppend">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reserveCapacityForAppend(newElementsCount: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="newElementsCount: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withContiguousMutableStorageIfAvailable">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withContiguousMutableStorageIfAvailableSwift.UnsafeMutableBufferPointer(Self) -> ??? -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withContiguousStorageIfAvailable">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withContiguousStorageIfAvailableSwift.UnsafeBufferPointer(Self) -> ??? -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBufferPointer">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBufferPointerSwift.UnsafeBufferPointer(Self) -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafeRawBufferPointer -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutableBufferPointer">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutableBufferPointerSwift.UnsafeMutableBufferPointer(Self) -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutableBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutableBytesSwift.UnsafeMutableRawBufferPointer -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.DecodingError.Context">
                  <property>
                     <name="codingPath">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="underlyingError">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.DefaultIndicies">
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="formIndex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIndex(after: Self.Index)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Self.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Self.Index) -> Self.Index">
                     <isStatic="False">
                     <returnType="Self.Index">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Self.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.DefaultStringInterpolation">
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="appendInterpolation">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func appendInterpolationSelf">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="appendLiteral">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func appendLiteralSwift.String">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="make">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func make() -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="write">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func writeSwift.String">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary">
                  <property>
                     <name="capacity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isEmpty">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="compactMapValues">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func compactMapValues??? -> ???? -> Swift.Dictionary(Self, ???)">
                     <isStatic="False">
                     <returnType="Swift.Dictionary<Self, ???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="filter">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func filter((key: Self, value: ???)) -> Bool -> Swift.Dictionary(Self, ???)">
                     <isStatic="False">
                     <returnType="Swift.Dictionary<Self, ???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="(key: Self value: ???)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="mapValues">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func mapValues??? -> ??? -> Swift.Dictionary(Self, ???)">
                     <isStatic="False">
                     <returnType="Swift.Dictionary<Self, ???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="popFirst">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func popFirst() -> (key: Self, value: ???)?">
                     <isStatic="False">
                     <returnType="Swift.Optional<(key: key: Self, value: value: ???)>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeAll">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func removeAll(keepingCapacity: Bool)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeValue">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func removeValue(forKey: Self) -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="reserveCapacity">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reserveCapacityInt">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary.Index">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary.Iterator">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> (key: Self, value: ???)?">
                     <isStatic="False">
                     <returnType="Swift.Optional<(key: key: Self, value: value: ???)>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary.Keys">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isEmpty">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Dictionary.Keys.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Dictionary.Values">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isEmpty">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Dictionary.Values.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Double">
                  <property>
                     <name="binade">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="bitPattern">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="exponent">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="exponentBitCount">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="exponentBitPattern">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="greatestFiniteMagnitude">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="infinity">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isCanonical">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isFinite">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isInfinite">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isNaN">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isNormal">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSignMinus">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSignalingNaN">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSubnormal">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isZero">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leastNonzeroMagnitude">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leastNormalMagnitude">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="magnitude">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nan">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nextUp">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="pi">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="quietNaN">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="sign">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="signalingNaN">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significand">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significandBitCount">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significandBitPattern">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significandWidth">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ulp">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ulpOfOne">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(Double, Double) -> Double">
                     <isStatic="True">
                     <returnType="Double">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *=(Double, Double)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Double, Double) -> Double">
                     <isStatic="True">
                     <returnType="Double">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Double, Double)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(Double, Double) -> Double">
                     <isStatic="True">
                     <returnType="Double">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(Double, Double)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(Double, Double) -> Double">
                     <isStatic="True">
                     <returnType="Double">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /=(Double, Double)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addProduct">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addProduct(Double, Double)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="advanced">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func advanced(by: Double) -> Double">
                     <isStatic="False">
                     <returnType="Double">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(to: Double) -> Double">
                     <isStatic="False">
                     <returnType="Double">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formRemainder">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formRemainder(dividingBy: Double)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formSquareRoot">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formSquareRoot()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formTruncatingRemainder">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formTruncatingRemainder(dividingBy: Double)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isEqual">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isEqual(to: Double) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isLess">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isLess(than: Double) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="than: Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isLessThanOrEqualTo">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isLessThanOrEqualToDouble -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="negate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func negate()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="round">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func roundSwift.FloatingPointRoundingRule">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="write">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func write(to: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Double.SIMD16Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Double.SIMD2Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Double.SIMD32Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Double.SIMD4Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Double.SIMD64Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Double.SIMD8Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.DropFirstSequence">
                  <func>
                     <name="dropFirst">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dropFirstInt -> Swift.DropFirstSequence(Self)">
                     <isStatic="False">
                     <returnType="Swift.DropFirstSequence<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Self.Iterator">
                     <isStatic="False">
                     <returnType="Self.Iterator">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.DropWhileSequence">
                  <func>
                     <name="drop">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func drop(while: Self.Element -> Bool) -> Swift.DropWhileSequence(Self)">
                     <isStatic="False">
                     <returnType="Swift.DropWhileSequence<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="while: Self.Element -> Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.DropWhileSequence.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self.Element?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self.Element>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.EmptyCollection">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.EmptyCollection(Self), Swift.EmptyCollection(Self)) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.EmptyCollection(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.EmptyCollection(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Int, to: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.EmptyCollection.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.EncodingError.Context">
                  <property>
                     <name="codingPath">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="underlyingError">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.EnumeratedSequence">
               </Struct>
               <Struct name="Swift.EnumeratedSequence.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> (offset: Int, element: Self.Element)?">
                     <isStatic="False">
                     <returnType="Swift.Optional<(offset: offset: Int, element: element: Self.Element)>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.FlattenSequence">
               </Struct>
               <Struct name="Swift.FlattenSequence.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self.Element.Element?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self.Element.Element>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Float">
                  <property>
                     <name="binade">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="bitPattern">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="exponent">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="exponentBitCount">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="exponentBitPattern">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="greatestFiniteMagnitude">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="infinity">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isCanonical">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isFinite">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isInfinite">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isNaN">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isNormal">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSignMinus">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSignalingNaN">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSubnormal">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isZero">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leastNonzeroMagnitude">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leastNormalMagnitude">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="magnitude">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nan">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nextUp">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="pi">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="quietNaN">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="sign">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="signalingNaN">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significand">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significandBitCount">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significandBitPattern">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significandWidth">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ulp">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ulpOfOne">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(Float, Float) -> Float">
                     <isStatic="True">
                     <returnType="Float">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *=(Float, Float)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Float, Float) -> Float">
                     <isStatic="True">
                     <returnType="Float">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Float, Float)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(Float, Float) -> Float">
                     <isStatic="True">
                     <returnType="Float">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(Float, Float)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(Float, Float) -> Float">
                     <isStatic="True">
                     <returnType="Float">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /=(Float, Float)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addProduct">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addProduct(Float, Float)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="advanced">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func advanced(by: Float) -> Float">
                     <isStatic="False">
                     <returnType="Float">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(to: Float) -> Float">
                     <isStatic="False">
                     <returnType="Float">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formRemainder">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formRemainder(dividingBy: Float)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formSquareRoot">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formSquareRoot()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formTruncatingRemainder">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formTruncatingRemainder(dividingBy: Float)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isEqual">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isEqual(to: Float) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isLess">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isLess(than: Float) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="than: Float" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isLessThanOrEqualTo">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isLessThanOrEqualToFloat -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="negate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func negate()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="round">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func roundSwift.FloatingPointRoundingRule">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="write">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func write(to: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Float.SIMD16Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Float.SIMD2Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Float.SIMD32Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Float.SIMD4Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Float.SIMD64Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Float.SIMD8Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Float16">
                  <property>
                     <name="binade">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="bitPattern">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="exponent">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="exponentBitCount">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="exponentBitPattern">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="greatestFiniteMagnitude">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="infinity">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isCanonical">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isFinite">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isInfinite">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isNaN">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isNormal">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSignMinus">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSignalingNaN">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSubnormal">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isZero">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leastNonzeroMagnitude">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leastNormalMagnitude">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="magnitude">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nan">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nextUp">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="pi">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="quietNaN">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="sign">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="signalingNaN">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significand">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significandBitCount">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significandBitPattern">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significandWidth">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ulp">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ulpOfOne">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(Swift.Float16, Swift.Float16) -> Swift.Float16">
                     <isStatic="True">
                     <returnType="Swift.Float16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *=(Swift.Float16, Swift.Float16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Swift.Float16, Swift.Float16) -> Swift.Float16">
                     <isStatic="True">
                     <returnType="Swift.Float16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Swift.Float16, Swift.Float16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(Swift.Float16, Swift.Float16) -> Swift.Float16">
                     <isStatic="True">
                     <returnType="Swift.Float16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(Swift.Float16, Swift.Float16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(Swift.Float16, Swift.Float16) -> Swift.Float16">
                     <isStatic="True">
                     <returnType="Swift.Float16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /=(Swift.Float16, Swift.Float16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addProduct">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addProduct(Swift.Float16, Swift.Float16)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="advanced">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func advanced(by: Swift.Float16) -> Swift.Float16">
                     <isStatic="False">
                     <returnType="Swift.Float16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(to: Swift.Float16) -> Swift.Float16">
                     <isStatic="False">
                     <returnType="Swift.Float16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formRemainder">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formRemainder(dividingBy: Swift.Float16)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formSquareRoot">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formSquareRoot()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formTruncatingRemainder">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formTruncatingRemainder(dividingBy: Swift.Float16)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isEqual">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isEqual(to: Swift.Float16) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isLess">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isLess(than: Swift.Float16) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="than: Swift.Float16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isLessThanOrEqualTo">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isLessThanOrEqualToSwift.Float16 -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="negate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func negate()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="round">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func roundSwift.FloatingPointRoundingRule">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="write">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func write(to: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Float16.SIMD16Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Float16.SIMD2Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Float16.SIMD32Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Float16.SIMD4Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Float16.SIMD64Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Float16.SIMD8Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Float80">
               </Struct>
               <Struct name="Swift.Hasher">
                  <func>
                     <name="combine">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func combine(bytes: Swift.UnsafeRawBufferPointer)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="bytes: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="finalize">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func finalize() -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.IndexingIterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self.Element?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self.Element>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Int">
                  <property>
                     <name="bitWidth">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="byteSwapped">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leadingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="magnitude">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nonzeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="trailingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="words">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="%">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %(Int, Int) -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="%=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %=(Int, Int)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &(Int, Int) -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<(Int, Int) -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<=(Int, Int)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &=(Int, Int)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>(Int, Int) -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>=(Int, Int)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(Int, Int) -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *=(Int, Int)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Int, Int) -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Int, Int)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(Int, Int) -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(Int, Int)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(Int, Int) -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /=(Int, Int)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Int, Int) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <=(Int, Int) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Int, Int) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >(Int, Int) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >=(Int, Int) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^(Int, Int) -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^=(Int, Int)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addingReportingOverflowInt -> (partialValue: Int, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Int, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="advanced">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func advanced(by: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(to: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividedReportingOverflow(by: Int) -> (partialValue: Int, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Int, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividingFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividingFullWidth((high: Int, low: UInt)) -> (quotient: Int, remainder: Int)">
                     <isStatic="False">
                     <returnType="(quotient: quotient: Int, remainder: remainder: Int)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="(high: Int low: UInt)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedFullWidth(by: Int) -> (high: Int, low: UInt)">
                     <isStatic="False">
                     <returnType="(high: high: Int, low: low: UInt)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedReportingOverflow(by: Int) -> (partialValue: Int, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Int, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remainderReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remainderReportingOverflow(dividingBy: Int) -> (partialValue: Int, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Int, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="signum">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func signum() -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtractingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subtractingReportingOverflowInt -> (partialValue: Int, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Int, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |(Int, Int) -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |=(Int, Int)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Int.SIMD16Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int.SIMD2Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int.SIMD32Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int.SIMD4Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int.SIMD64Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int.SIMD8Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int.Words">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Int16">
                  <property>
                     <name="bitWidth">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="byteSwapped">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leadingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="magnitude">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nonzeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="trailingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="words">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="%">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %(Swift.Int16, Swift.Int16) -> Swift.Int16">
                     <isStatic="True">
                     <returnType="Swift.Int16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="%=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %=(Swift.Int16, Swift.Int16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &(Swift.Int16, Swift.Int16) -> Swift.Int16">
                     <isStatic="True">
                     <returnType="Swift.Int16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<(Swift.Int16, Swift.Int16) -> Swift.Int16">
                     <isStatic="True">
                     <returnType="Swift.Int16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<=(Swift.Int16, Swift.Int16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &=(Swift.Int16, Swift.Int16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>(Swift.Int16, Swift.Int16) -> Swift.Int16">
                     <isStatic="True">
                     <returnType="Swift.Int16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>=(Swift.Int16, Swift.Int16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(Swift.Int16, Swift.Int16) -> Swift.Int16">
                     <isStatic="True">
                     <returnType="Swift.Int16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *=(Swift.Int16, Swift.Int16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Swift.Int16, Swift.Int16) -> Swift.Int16">
                     <isStatic="True">
                     <returnType="Swift.Int16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Swift.Int16, Swift.Int16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(Swift.Int16, Swift.Int16) -> Swift.Int16">
                     <isStatic="True">
                     <returnType="Swift.Int16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(Swift.Int16, Swift.Int16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(Swift.Int16, Swift.Int16) -> Swift.Int16">
                     <isStatic="True">
                     <returnType="Swift.Int16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /=(Swift.Int16, Swift.Int16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.Int16, Swift.Int16) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <=(Swift.Int16, Swift.Int16) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.Int16, Swift.Int16) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >(Swift.Int16, Swift.Int16) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >=(Swift.Int16, Swift.Int16) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^(Swift.Int16, Swift.Int16) -> Swift.Int16">
                     <isStatic="True">
                     <returnType="Swift.Int16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^=(Swift.Int16, Swift.Int16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addingReportingOverflowSwift.Int16 -> (partialValue: Swift.Int16, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int16, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividedReportingOverflow(by: Swift.Int16) -> (partialValue: Swift.Int16, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int16, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividingFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividingFullWidth((high: Swift.Int16, low: Swift.UInt16)) -> (quotient: Swift.Int16, remainder: Swift.Int16)">
                     <isStatic="False">
                     <returnType="(quotient: quotient: Swift.Int16, remainder: remainder: Swift.Int16)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="(high: Swift.Int16 low: Swift.UInt16)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedFullWidth(by: Swift.Int16) -> (high: Swift.Int16, low: Swift.UInt16)">
                     <isStatic="False">
                     <returnType="(high: high: Swift.Int16, low: low: Swift.UInt16)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedReportingOverflow(by: Swift.Int16) -> (partialValue: Swift.Int16, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int16, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remainderReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remainderReportingOverflow(dividingBy: Swift.Int16) -> (partialValue: Swift.Int16, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int16, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="signum">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func signum() -> Swift.Int16">
                     <isStatic="False">
                     <returnType="Swift.Int16">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtractingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subtractingReportingOverflowSwift.Int16 -> (partialValue: Swift.Int16, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int16, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |(Swift.Int16, Swift.Int16) -> Swift.Int16">
                     <isStatic="True">
                     <returnType="Swift.Int16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |=(Swift.Int16, Swift.Int16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Int16.SIMD16Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int16.SIMD2Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int16.SIMD32Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int16.SIMD4Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int16.SIMD64Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int16.SIMD8Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int16.Words">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Int32">
                  <property>
                     <name="bitWidth">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="byteSwapped">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leadingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="magnitude">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nonzeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="trailingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="words">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="%">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %(Swift.Int32, Swift.Int32) -> Swift.Int32">
                     <isStatic="True">
                     <returnType="Swift.Int32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="%=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %=(Swift.Int32, Swift.Int32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &(Swift.Int32, Swift.Int32) -> Swift.Int32">
                     <isStatic="True">
                     <returnType="Swift.Int32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<(Swift.Int32, Swift.Int32) -> Swift.Int32">
                     <isStatic="True">
                     <returnType="Swift.Int32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<=(Swift.Int32, Swift.Int32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &=(Swift.Int32, Swift.Int32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>(Swift.Int32, Swift.Int32) -> Swift.Int32">
                     <isStatic="True">
                     <returnType="Swift.Int32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>=(Swift.Int32, Swift.Int32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(Swift.Int32, Swift.Int32) -> Swift.Int32">
                     <isStatic="True">
                     <returnType="Swift.Int32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *=(Swift.Int32, Swift.Int32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Swift.Int32, Swift.Int32) -> Swift.Int32">
                     <isStatic="True">
                     <returnType="Swift.Int32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Swift.Int32, Swift.Int32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(Swift.Int32, Swift.Int32) -> Swift.Int32">
                     <isStatic="True">
                     <returnType="Swift.Int32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(Swift.Int32, Swift.Int32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(Swift.Int32, Swift.Int32) -> Swift.Int32">
                     <isStatic="True">
                     <returnType="Swift.Int32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /=(Swift.Int32, Swift.Int32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.Int32, Swift.Int32) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <=(Swift.Int32, Swift.Int32) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.Int32, Swift.Int32) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >(Swift.Int32, Swift.Int32) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >=(Swift.Int32, Swift.Int32) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^(Swift.Int32, Swift.Int32) -> Swift.Int32">
                     <isStatic="True">
                     <returnType="Swift.Int32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^=(Swift.Int32, Swift.Int32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addingReportingOverflowSwift.Int32 -> (partialValue: Swift.Int32, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int32, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividedReportingOverflow(by: Swift.Int32) -> (partialValue: Swift.Int32, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int32, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividingFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividingFullWidth((high: Swift.Int32, low: Swift.UInt32)) -> (quotient: Swift.Int32, remainder: Swift.Int32)">
                     <isStatic="False">
                     <returnType="(quotient: quotient: Swift.Int32, remainder: remainder: Swift.Int32)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="(high: Swift.Int32 low: Swift.UInt32)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedFullWidth(by: Swift.Int32) -> (high: Swift.Int32, low: Swift.UInt32)">
                     <isStatic="False">
                     <returnType="(high: high: Swift.Int32, low: low: Swift.UInt32)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedReportingOverflow(by: Swift.Int32) -> (partialValue: Swift.Int32, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int32, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remainderReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remainderReportingOverflow(dividingBy: Swift.Int32) -> (partialValue: Swift.Int32, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int32, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="signum">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func signum() -> Swift.Int32">
                     <isStatic="False">
                     <returnType="Swift.Int32">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtractingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subtractingReportingOverflowSwift.Int32 -> (partialValue: Swift.Int32, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int32, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |(Swift.Int32, Swift.Int32) -> Swift.Int32">
                     <isStatic="True">
                     <returnType="Swift.Int32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |=(Swift.Int32, Swift.Int32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Int32.SIMD16Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int32.SIMD2Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int32.SIMD32Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int32.SIMD4Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int32.SIMD64Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int32.SIMD8Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int32.Words">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Int64">
                  <property>
                     <name="bitWidth">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="byteSwapped">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leadingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="magnitude">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nonzeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="trailingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="words">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="%">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %(Swift.Int64, Swift.Int64) -> Swift.Int64">
                     <isStatic="True">
                     <returnType="Swift.Int64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="%=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %=(Swift.Int64, Swift.Int64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &(Swift.Int64, Swift.Int64) -> Swift.Int64">
                     <isStatic="True">
                     <returnType="Swift.Int64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<(Swift.Int64, Swift.Int64) -> Swift.Int64">
                     <isStatic="True">
                     <returnType="Swift.Int64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<=(Swift.Int64, Swift.Int64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &=(Swift.Int64, Swift.Int64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>(Swift.Int64, Swift.Int64) -> Swift.Int64">
                     <isStatic="True">
                     <returnType="Swift.Int64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>=(Swift.Int64, Swift.Int64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(Swift.Int64, Swift.Int64) -> Swift.Int64">
                     <isStatic="True">
                     <returnType="Swift.Int64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *=(Swift.Int64, Swift.Int64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Swift.Int64, Swift.Int64) -> Swift.Int64">
                     <isStatic="True">
                     <returnType="Swift.Int64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Swift.Int64, Swift.Int64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(Swift.Int64, Swift.Int64) -> Swift.Int64">
                     <isStatic="True">
                     <returnType="Swift.Int64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(Swift.Int64, Swift.Int64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(Swift.Int64, Swift.Int64) -> Swift.Int64">
                     <isStatic="True">
                     <returnType="Swift.Int64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /=(Swift.Int64, Swift.Int64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.Int64, Swift.Int64) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <=(Swift.Int64, Swift.Int64) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.Int64, Swift.Int64) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >(Swift.Int64, Swift.Int64) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >=(Swift.Int64, Swift.Int64) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^(Swift.Int64, Swift.Int64) -> Swift.Int64">
                     <isStatic="True">
                     <returnType="Swift.Int64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^=(Swift.Int64, Swift.Int64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addingReportingOverflowSwift.Int64 -> (partialValue: Swift.Int64, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int64, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividedReportingOverflow(by: Swift.Int64) -> (partialValue: Swift.Int64, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int64, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividingFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividingFullWidth((high: Swift.Int64, low: Swift.UInt64)) -> (quotient: Swift.Int64, remainder: Swift.Int64)">
                     <isStatic="False">
                     <returnType="(quotient: quotient: Swift.Int64, remainder: remainder: Swift.Int64)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="(high: Swift.Int64 low: Swift.UInt64)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedFullWidth(by: Swift.Int64) -> (high: Swift.Int64, low: Swift.UInt64)">
                     <isStatic="False">
                     <returnType="(high: high: Swift.Int64, low: low: Swift.UInt64)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedReportingOverflow(by: Swift.Int64) -> (partialValue: Swift.Int64, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int64, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remainderReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remainderReportingOverflow(dividingBy: Swift.Int64) -> (partialValue: Swift.Int64, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int64, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="signum">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func signum() -> Swift.Int64">
                     <isStatic="False">
                     <returnType="Swift.Int64">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtractingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subtractingReportingOverflowSwift.Int64 -> (partialValue: Swift.Int64, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int64, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |(Swift.Int64, Swift.Int64) -> Swift.Int64">
                     <isStatic="True">
                     <returnType="Swift.Int64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |=(Swift.Int64, Swift.Int64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Int64.SIMD16Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int64.SIMD2Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int64.SIMD32Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int64.SIMD4Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int64.SIMD64Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int64.SIMD8Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int64.Words">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Int8">
                  <property>
                     <name="bitWidth">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="byteSwapped">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leadingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="magnitude">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nonzeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="trailingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="words">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="%">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %(Swift.Int8, Swift.Int8) -> Swift.Int8">
                     <isStatic="True">
                     <returnType="Swift.Int8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="%=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %=(Swift.Int8, Swift.Int8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &(Swift.Int8, Swift.Int8) -> Swift.Int8">
                     <isStatic="True">
                     <returnType="Swift.Int8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<(Swift.Int8, Swift.Int8) -> Swift.Int8">
                     <isStatic="True">
                     <returnType="Swift.Int8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<=(Swift.Int8, Swift.Int8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &=(Swift.Int8, Swift.Int8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>(Swift.Int8, Swift.Int8) -> Swift.Int8">
                     <isStatic="True">
                     <returnType="Swift.Int8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>=(Swift.Int8, Swift.Int8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(Swift.Int8, Swift.Int8) -> Swift.Int8">
                     <isStatic="True">
                     <returnType="Swift.Int8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *=(Swift.Int8, Swift.Int8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Swift.Int8, Swift.Int8) -> Swift.Int8">
                     <isStatic="True">
                     <returnType="Swift.Int8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Swift.Int8, Swift.Int8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(Swift.Int8, Swift.Int8) -> Swift.Int8">
                     <isStatic="True">
                     <returnType="Swift.Int8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(Swift.Int8, Swift.Int8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(Swift.Int8, Swift.Int8) -> Swift.Int8">
                     <isStatic="True">
                     <returnType="Swift.Int8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /=(Swift.Int8, Swift.Int8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.Int8, Swift.Int8) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <=(Swift.Int8, Swift.Int8) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.Int8, Swift.Int8) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >(Swift.Int8, Swift.Int8) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >=(Swift.Int8, Swift.Int8) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^(Swift.Int8, Swift.Int8) -> Swift.Int8">
                     <isStatic="True">
                     <returnType="Swift.Int8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^=(Swift.Int8, Swift.Int8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addingReportingOverflowSwift.Int8 -> (partialValue: Swift.Int8, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int8, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividedReportingOverflow(by: Swift.Int8) -> (partialValue: Swift.Int8, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int8, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividingFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividingFullWidth((high: Swift.Int8, low: Swift.UInt8)) -> (quotient: Swift.Int8, remainder: Swift.Int8)">
                     <isStatic="False">
                     <returnType="(quotient: quotient: Swift.Int8, remainder: remainder: Swift.Int8)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="(high: Swift.Int8 low: Swift.UInt8)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedFullWidth(by: Swift.Int8) -> (high: Swift.Int8, low: Swift.UInt8)">
                     <isStatic="False">
                     <returnType="(high: high: Swift.Int8, low: low: Swift.UInt8)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedReportingOverflow(by: Swift.Int8) -> (partialValue: Swift.Int8, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int8, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remainderReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remainderReportingOverflow(dividingBy: Swift.Int8) -> (partialValue: Swift.Int8, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int8, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="signum">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func signum() -> Swift.Int8">
                     <isStatic="False">
                     <returnType="Swift.Int8">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtractingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subtractingReportingOverflowSwift.Int8 -> (partialValue: Swift.Int8, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.Int8, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |(Swift.Int8, Swift.Int8) -> Swift.Int8">
                     <isStatic="True">
                     <returnType="Swift.Int8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |=(Swift.Int8, Swift.Int8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Int8.SIMD16Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int8.SIMD2Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int8.SIMD32Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int8.SIMD4Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int8.SIMD64Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int8.SIMD8Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Int8.Words">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.IteratorSequence">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self.Element?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self.Element>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.JoinedSequence">
               </Struct>
               <Struct name="Swift.JoinedSequence.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self.Element.Element?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self.Element.Element>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.KeyValuePairs">
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.KeyedDecodingContainer">
                  <property>
                     <name="allKeys">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="codingPath">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="contains">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func containsSelf -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func decode(: Meta Swift.String, forKey: Self) -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.String" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta Swift.String, forKey: Self) -> Swift.String?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.String>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.String" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeNil">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func decodeNil(forKey: Self) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nestedContainer">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func nestedContainer(keyedBy: Meta , forKey: Self) -> Swift.KeyedDecodingContainer(???)">
                     <isStatic="False">
                     <returnType="Swift.KeyedDecodingContainer<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keyedBy: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nestedUnkeyedContainer">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func nestedUnkeyedContainer(forKey: Self) -> Swift.UnkeyedDecodingContainer">
                     <isStatic="False">
                     <returnType="Swift.UnkeyedDecodingContainer">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="superDecoder">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func superDecoder(forKey: Self) -> Swift.Decoder">
                     <isStatic="False">
                     <returnType="Swift.Decoder">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.KeyedEncodingContainer">
                  <property>
                     <name="codingPath">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(: Swift.String, forKey: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeConditional">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encodeConditional(: ???, forKey: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": ???" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Swift.String?, forKey: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.String?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeNil">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encodeNil(forKey: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nestedContainer">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func nestedContainer(keyedBy: Meta , forKey: Self) -> Swift.KeyedEncodingContainer(???)">
                     <isStatic="False">
                     <returnType="Swift.KeyedEncodingContainer<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keyedBy: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nestedUnkeyedContainer">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func nestedUnkeyedContainer(forKey: Self) -> Swift.UnkeyedEncodingContainer">
                     <isStatic="False">
                     <returnType="Swift.UnkeyedEncodingContainer">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="superEncoder">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func superEncoder(forKey: Self) -> Swift.Encoder">
                     <isStatic="False">
                     <returnType="Swift.Encoder">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.LazyDropWhileSequence">
               </Struct>
               <Struct name="Swift.LazyDropWhileSequence.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self.Element?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self.Element>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.LazyFilterSequence">
                  <func>
                     <name="filter">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func filterSelf.Element -> Bool -> Swift.LazyFilterSequence(Self)">
                     <isStatic="False">
                     <returnType="Swift.LazyFilterSequence<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.LazyFilterSequence.Iterator">
                  <property>
                     <name="base">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self.Element?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self.Element>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.LazyMapSequence">
                  <property>
                     <name="underestimatedCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="map">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func map??? -> ??? -> Swift.LazyMapSequence(Self, ???)">
                     <isStatic="False">
                     <returnType="Swift.LazyMapSequence<Self, ???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.LazyMapSequence.Iterator">
                  <property>
                     <name="base">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.LazyPrefixWhileSequence">
               </Struct>
               <Struct name="Swift.LazyPrefixWhileSequence.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self.Element?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self.Element>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.LazySequence">
                  <property>
                     <name="elements">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="underestimatedCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Self.Iterator">
                     <isStatic="False">
                     <returnType="Self.Iterator">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.ManagedBufferPointer">
                  <property>
                     <name="buffer">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="capacity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="header">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.ManagedBufferPointer(Self, ???), Swift.ManagedBufferPointer(Self, ???)) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.ManagedBufferPointer(Self ???)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.ManagedBufferPointer(Self ???)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isUniqueReference">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isUniqueReference() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutablePointerToElements">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutablePointerToElementsSwift.UnsafeMutablePointer(???) -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutablePointerToHeader">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutablePointerToHeaderSwift.UnsafeMutablePointer(Self) -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutablePointers">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutablePointers(Swift.UnsafeMutablePointer(Self), Swift.UnsafeMutablePointer(???)) -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UnsafeMutablePointer(???)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Mirror">
                  <property>
                     <name="children">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="displayStyle">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="subjectType">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="superclassMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="descendant">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func descendant(Swift.MirrorPath, Swift.Array(Swift.MirrorPath)) -> Swift.Any?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.Any>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.MirrorPath" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Array(Swift.MirrorPath)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.ObjectIdentifier">
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.ObjectIdentifier, Swift.ObjectIdentifier) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.ObjectIdentifier" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.ObjectIdentifier" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.ObjectIdentifier, Swift.ObjectIdentifier) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.ObjectIdentifier" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.ObjectIdentifier" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.OpaquePointer">
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.OpaquePointer, Swift.OpaquePointer) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.OpaquePointer" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.OpaquePointer" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.PartialRangeFrom">
                  <property>
                     <name="lowerBound">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="contains">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func containsSelf -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="relative">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func relative(to: ???) -> Swift.Range(Self)">
                     <isStatic="False">
                     <returnType="Swift.Range<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.PartialRangeThrough">
                  <property>
                     <name="upperBound">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="contains">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func containsSelf -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="relative">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func relative(to: ???) -> Swift.Range(Self)">
                     <isStatic="False">
                     <returnType="Swift.Range<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.PartialRangeUpTo">
                  <property>
                     <name="upperBound">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="contains">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func containsSelf -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="relative">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func relative(to: ???) -> Swift.Range(Self)">
                     <isStatic="False">
                     <returnType="Swift.Range<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.PrefixSequence">
                  <func>
                     <name="prefix">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func prefixInt -> Swift.PrefixSequence(Self)">
                     <isStatic="False">
                     <returnType="Swift.PrefixSequence<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.PrefixSequence.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self.Element?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self.Element>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Range">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isEmpty">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lowerBound">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="upperBound">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.Range(Self), Swift.Range(Self)) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Range(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Range(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="clamped">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func clamped(to: Swift.Range(Self)) -> Swift.Range(Self)">
                     <isStatic="False">
                     <returnType="Swift.Range<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Range(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="contains">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func containsSelf -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="overlaps">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func overlapsSwift.ClosedRange(Self) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="relative">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func relative(to: ???) -> Swift.Range(Self)">
                     <isStatic="False">
                     <returnType="Swift.Range<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: ???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Repeated">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="repeatedValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.ReversedCollection">
                  <func>
                     <name="reversed">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reversed() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.ReversedCollection.Index">
                  <property>
                     <name="base">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.ReversedCollection.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self.Element?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self.Element>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.SIMD16">
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="evenHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="highHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lowHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="oddHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.SIMD2">
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="x">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="y">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.SIMD3">
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="x">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="y">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="z">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.SIMD32">
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="evenHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="highHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lowHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="oddHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.SIMD4">
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="evenHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="highHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lowHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="oddHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="w">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="x">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="y">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="z">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.SIMD64">
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="evenHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="highHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lowHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="oddHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.SIMD8">
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="evenHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="highHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lowHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="oddHalf">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.SIMDMask">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="random">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func random(using: ???) -> Swift.SIMDMask(Self)">
                     <isStatic="True">
                     <returnType="Swift.SIMDMask<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="using: ???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Set">
                  <property>
                     <name="capacity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isEmpty">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.Set(Self), Swift.Set(Self)) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Set(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Set(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="contains">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func containsSelf -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="filter">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func filterSelf -> Bool -> Swift.Set(Self)">
                     <isStatic="False">
                     <returnType="Swift.Set<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIntersection">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIntersection???">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="intersection">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func intersectionSwift.Set(Self) -> Swift.Set(Self)">
                     <isStatic="False">
                     <returnType="Swift.Set<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isDisjoint">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isDisjoint(with: Swift.Set(Self)) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="with: Swift.Set(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isStrictSubset">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isStrictSubset(of: Swift.Set(Self)) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Swift.Set(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isStrictSuperset">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isStrictSuperset(of: Swift.Set(Self)) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Swift.Set(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isSubset">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isSubset(of: Swift.Set(Self)) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Swift.Set(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isSuperset">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isSuperset(of: Swift.Set(Self)) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Swift.Set(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="popFirst">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func popFirst() -> Self?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remove">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func removeSelf -> Self?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeAll">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func removeAll(keepingCapacity: Bool)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeFirst">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func removeFirst() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="reserveCapacity">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reserveCapacityInt">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtract">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subtractSwift.Set(Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtracting">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subtractingSwift.Set(Self) -> Swift.Set(Self)">
                     <isStatic="False">
                     <returnType="Swift.Set<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Set.Index">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Set.Iterator">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Slice">
                  <property>
                     <name="base">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Self.Index, to: Self.Index) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Self.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIndex(after: Self.Index)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Self.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Self.Index) -> Self.Index">
                     <isStatic="False">
                     <returnType="Self.Index">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Self.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.StaticString">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hasPointerRepresentation">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isASCII">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="unicodeScalar">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf8CodeUnitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf8Start">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="withUTF8Buffer">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func withUTF8BufferSwift.UnsafeBufferPointer(Swift.UInt8) -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.StrideThrough">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="underestimatedCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Swift.StrideThroughIterator(Self)">
                     <isStatic="False">
                     <returnType="Swift.StrideThroughIterator<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.StrideThroughIterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.StrideTo">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="underestimatedCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Swift.StrideToIterator(Self)">
                     <isStatic="False">
                     <returnType="Swift.StrideToIterator<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.StrideToIterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.String">
                  <property>
                     <name="characters">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isEmpty">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="unicodeScalars">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf16">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf8">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf8CString">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Swift.String, Swift.String) -> Swift.String">
                     <isStatic="True">
                     <returnType="Swift.String">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Swift.String, Swift.String)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.String, Swift.String) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.String, Swift.String) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="append">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func append(contentsOf: Swift.String)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="contentsOf: Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeCString">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func decodeCString(: Swift.UnsafePointer(Self.CodeUnit)?, as: Meta , repairingInvalidCodeUnits: Bool) -> (result: Swift.String, repairsMade: Bool)?">
                     <isStatic="True">
                     <returnType="Swift.Optional<(result: result: Swift.String, repairsMade: repairsMade: Bool)>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UnsafePointer(Self.CodeUnit)?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="repairingInvalidCodeUnits: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Swift.String.Index, to: Swift.String.Index) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hasPrefix">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hasPrefixSwift.String -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hasSuffix">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hasSuffixSwift.String -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Swift.String.Index) -> Swift.String.Index">
                     <isStatic="False">
                     <returnType="Swift.String.Index">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="insert">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func insert(contentsOf: Self, at: Swift.String.Index)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="contentsOf: Self" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="at: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="lowercased">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func lowercased() -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Swift.String.Iterator">
                     <isStatic="False">
                     <returnType="Swift.String.Iterator">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="max">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func max(Self, Self) -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="min">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func min(Self, Self) -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remove">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remove(at: Swift.String.Index) -> Swift.Character">
                     <isStatic="False">
                     <returnType="Swift.Character">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="at: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeAll">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func removeAll(keepingCapacity: Bool)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keepingCapacity: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeSubrange">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func removeSubrangeSwift.Range(Swift.String.Index)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="replaceSubrange">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func replaceSubrange(: Swift.Range(Swift.String.Index), with: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Range(Swift.String.Index)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="with: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="reserveCapacity">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reserveCapacityInt">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="uppercased">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func uppercased() -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withCString">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withCString(encodedAs: Meta , : Swift.UnsafePointer(???A1.CodeUnit) -> Self) -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="encodedAs: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UnsafePointer(???A1.CodeUnit) -> Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withMutableCharacters">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func withMutableCharactersSwift.String -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafeRawBufferPointer -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="write">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func write(to: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.String.Index">
                  <property>
                     <name="characterStride">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="encodedOffset">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isZeroPosition">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nextEncoded">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nextTranscoded">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="orderingValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="priorEncoded">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="priorTranscoded">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="strippingTranscoding">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="transcodedOffset">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.String.Index, Swift.String.Index) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.String.Index, Swift.String.Index) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encoded">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func encoded(offsetBy: Int) -> Swift.String.Index">
                     <isStatic="False">
                     <returnType="Swift.String.Index">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="offsetBy: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="samePosition">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func samePosition(in: Swift.String.UnicodeScalarView) -> Swift.String.Index?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.String.Index>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: Swift.String.UnicodeScalarView" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="transcoded">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func transcoded(withOffset: Int) -> Swift.String.Index">
                     <isStatic="False">
                     <returnType="Swift.String.Index">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="withOffset: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="utf16Offset">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func utf16Offset(in: Self) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.String.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Swift.Character?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.Character>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.String.UTF16View">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Swift.String.Index, to: Swift.String.Index) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Swift.String.Index) -> Swift.String.Index">
                     <isStatic="False">
                     <returnType="Swift.String.Index">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Swift.String.UTF16View.Iterator">
                     <isStatic="False">
                     <returnType="Swift.String.UTF16View.Iterator">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.String.UTF16View.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Swift.UInt16?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.UInt16>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.String.UTF8View">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Swift.String.Index, to: Swift.String.Index) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Swift.String.Index) -> Swift.String.Index">
                     <isStatic="False">
                     <returnType="Swift.String.Index">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withContiguousStorageIfAvailable">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withContiguousStorageIfAvailableSwift.UnsafeBufferPointer(Swift.UInt8) -> Self -> Self?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.String.UnicodeScalarView">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="append">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func append(contentsOf: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="contentsOf: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Swift.String.Index) -> Swift.String.Index">
                     <isStatic="False">
                     <returnType="Swift.String.Index">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Swift.String.UnicodeScalarView.Iterator">
                     <isStatic="False">
                     <returnType="Swift.String.UnicodeScalarView.Iterator">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="replaceSubrange">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func replaceSubrange(: Swift.Range(Swift.String.Index), with: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Range(Swift.String.Index)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="with: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="reserveCapacity">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reserveCapacityInt">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.String.UnicodeScalarView.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Swift.Unicode.Scalar?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.Unicode.Scalar>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Substring">
                  <property>
                     <name="characters">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="unicodeScalars">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf16">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf8">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="append">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func append(contentsOf: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="contentsOf: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Swift.String.Index, to: Swift.String.Index) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="filter">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func filterSwift.Character -> Bool -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Swift.String.Index) -> Swift.String.Index">
                     <isStatic="False">
                     <returnType="Swift.String.Index">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="lowercased">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func lowercased() -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="replaceSubrange">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func replaceSubrange(: Swift.Range(Swift.String.Index), with: Swift.Substring)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Range(Swift.String.Index)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="with: Swift.Substring" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="uppercased">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func uppercased() -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withCString">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withCString(encodedAs: Meta , : Swift.UnsafePointer(???A1.CodeUnit) -> Self) -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="encodedAs: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UnsafePointer(???A1.CodeUnit) -> Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withMutableCharacters">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func withMutableCharactersSwift.Substring -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafeRawBufferPointer -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="write">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func write(to: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Substring.UTF16View">
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Swift.String.Index, to: Swift.String.Index) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIndex(after: Swift.String.Index)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Swift.String.Index) -> Swift.String.Index">
                     <isStatic="False">
                     <returnType="Swift.String.Index">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Substring.UTF8View">
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Swift.String.Index, to: Swift.String.Index) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIndex(after: Swift.String.Index)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Swift.String.Index) -> Swift.String.Index">
                     <isStatic="False">
                     <returnType="Swift.String.Index">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Substring.UnicodeScalarView">
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Swift.String.Index, to: Swift.String.Index) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIndex(after: Swift.String.Index)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Swift.String.Index) -> Swift.String.Index">
                     <isStatic="False">
                     <returnType="Swift.String.Index">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Swift.String.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="replaceSubrange">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func replaceSubrange(: Swift.Range(Swift.String.Index), with: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Range(Swift.String.Index)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="with: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.SystemRandomNumberGenerator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Swift.UInt64">
                     <isStatic="False">
                     <returnType="Swift.UInt64">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UInt">
                  <property>
                     <name="bitWidth">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="byteSwapped">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leadingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nonzeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="trailingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="words">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="%">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %(UInt, UInt) -> UInt">
                     <isStatic="True">
                     <returnType="UInt">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="%=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %=(UInt, UInt)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &(UInt, UInt) -> UInt">
                     <isStatic="True">
                     <returnType="UInt">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<(UInt, UInt) -> UInt">
                     <isStatic="True">
                     <returnType="UInt">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<=(UInt, UInt)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &=(UInt, UInt)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>(UInt, UInt) -> UInt">
                     <isStatic="True">
                     <returnType="UInt">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>=(UInt, UInt)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(UInt, UInt) -> UInt">
                     <isStatic="True">
                     <returnType="UInt">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *=(UInt, UInt)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(UInt, UInt) -> UInt">
                     <isStatic="True">
                     <returnType="UInt">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(UInt, UInt)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(UInt, UInt) -> UInt">
                     <isStatic="True">
                     <returnType="UInt">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(UInt, UInt)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(UInt, UInt) -> UInt">
                     <isStatic="True">
                     <returnType="UInt">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /=(UInt, UInt)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(UInt, UInt) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <=(UInt, UInt) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(UInt, UInt) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >(UInt, UInt) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >=(UInt, UInt) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^(UInt, UInt) -> UInt">
                     <isStatic="True">
                     <returnType="UInt">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^=(UInt, UInt)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addingReportingOverflowUInt -> (partialValue: UInt, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: UInt, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividedReportingOverflow(by: UInt) -> (partialValue: UInt, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: UInt, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividingFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividingFullWidth((high: UInt, low: UInt)) -> (quotient: UInt, remainder: UInt)">
                     <isStatic="False">
                     <returnType="(quotient: quotient: UInt, remainder: remainder: UInt)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="(high: UInt low: UInt)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedFullWidth(by: UInt) -> (high: UInt, low: UInt)">
                     <isStatic="False">
                     <returnType="(high: high: UInt, low: low: UInt)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedReportingOverflow(by: UInt) -> (partialValue: UInt, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: UInt, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remainderReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remainderReportingOverflow(dividingBy: UInt) -> (partialValue: UInt, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: UInt, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="signum">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func signum() -> UInt">
                     <isStatic="False">
                     <returnType="UInt">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtractingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subtractingReportingOverflowUInt -> (partialValue: UInt, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: UInt, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |(UInt, UInt) -> UInt">
                     <isStatic="True">
                     <returnType="UInt">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |=(UInt, UInt)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UInt.SIMD16Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt.SIMD2Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt.SIMD32Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt.SIMD4Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt.SIMD64Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt.SIMD8Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt.Words">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UInt16">
                  <property>
                     <name="bitWidth">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="byteSwapped">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leadingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nonzeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="trailingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="words">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="%">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %(Swift.UInt16, Swift.UInt16) -> Swift.UInt16">
                     <isStatic="True">
                     <returnType="Swift.UInt16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="%=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %=(Swift.UInt16, Swift.UInt16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &(Swift.UInt16, Swift.UInt16) -> Swift.UInt16">
                     <isStatic="True">
                     <returnType="Swift.UInt16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<(Swift.UInt16, Swift.UInt16) -> Swift.UInt16">
                     <isStatic="True">
                     <returnType="Swift.UInt16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<=(Swift.UInt16, Swift.UInt16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &=(Swift.UInt16, Swift.UInt16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>(Swift.UInt16, Swift.UInt16) -> Swift.UInt16">
                     <isStatic="True">
                     <returnType="Swift.UInt16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>=(Swift.UInt16, Swift.UInt16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(Swift.UInt16, Swift.UInt16) -> Swift.UInt16">
                     <isStatic="True">
                     <returnType="Swift.UInt16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *=(Swift.UInt16, Swift.UInt16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Swift.UInt16, Swift.UInt16) -> Swift.UInt16">
                     <isStatic="True">
                     <returnType="Swift.UInt16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Swift.UInt16, Swift.UInt16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(Swift.UInt16, Swift.UInt16) -> Swift.UInt16">
                     <isStatic="True">
                     <returnType="Swift.UInt16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(Swift.UInt16, Swift.UInt16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(Swift.UInt16, Swift.UInt16) -> Swift.UInt16">
                     <isStatic="True">
                     <returnType="Swift.UInt16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /=(Swift.UInt16, Swift.UInt16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.UInt16, Swift.UInt16) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <=(Swift.UInt16, Swift.UInt16) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.UInt16, Swift.UInt16) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >(Swift.UInt16, Swift.UInt16) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >=(Swift.UInt16, Swift.UInt16) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^(Swift.UInt16, Swift.UInt16) -> Swift.UInt16">
                     <isStatic="True">
                     <returnType="Swift.UInt16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^=(Swift.UInt16, Swift.UInt16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addingReportingOverflowSwift.UInt16 -> (partialValue: Swift.UInt16, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt16, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividedReportingOverflow(by: Swift.UInt16) -> (partialValue: Swift.UInt16, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt16, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividingFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividingFullWidth((high: Swift.UInt16, low: Swift.UInt16)) -> (quotient: Swift.UInt16, remainder: Swift.UInt16)">
                     <isStatic="False">
                     <returnType="(quotient: quotient: Swift.UInt16, remainder: remainder: Swift.UInt16)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="(high: Swift.UInt16 low: Swift.UInt16)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedFullWidth(by: Swift.UInt16) -> (high: Swift.UInt16, low: Swift.UInt16)">
                     <isStatic="False">
                     <returnType="(high: high: Swift.UInt16, low: low: Swift.UInt16)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedReportingOverflow(by: Swift.UInt16) -> (partialValue: Swift.UInt16, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt16, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remainderReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remainderReportingOverflow(dividingBy: Swift.UInt16) -> (partialValue: Swift.UInt16, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt16, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="signum">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func signum() -> Swift.UInt16">
                     <isStatic="False">
                     <returnType="Swift.UInt16">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtractingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subtractingReportingOverflowSwift.UInt16 -> (partialValue: Swift.UInt16, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt16, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |(Swift.UInt16, Swift.UInt16) -> Swift.UInt16">
                     <isStatic="True">
                     <returnType="Swift.UInt16">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |=(Swift.UInt16, Swift.UInt16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UInt16.SIMD16Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt16.SIMD2Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt16.SIMD32Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt16.SIMD4Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt16.SIMD64Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt16.SIMD8Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt16.Words">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UInt32">
                  <property>
                     <name="bitWidth">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="byteSwapped">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leadingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nonzeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="trailingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="words">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="%">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %(Swift.UInt32, Swift.UInt32) -> Swift.UInt32">
                     <isStatic="True">
                     <returnType="Swift.UInt32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="%=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %=(Swift.UInt32, Swift.UInt32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &(Swift.UInt32, Swift.UInt32) -> Swift.UInt32">
                     <isStatic="True">
                     <returnType="Swift.UInt32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<(Swift.UInt32, Swift.UInt32) -> Swift.UInt32">
                     <isStatic="True">
                     <returnType="Swift.UInt32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<=(Swift.UInt32, Swift.UInt32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &=(Swift.UInt32, Swift.UInt32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>(Swift.UInt32, Swift.UInt32) -> Swift.UInt32">
                     <isStatic="True">
                     <returnType="Swift.UInt32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>=(Swift.UInt32, Swift.UInt32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(Swift.UInt32, Swift.UInt32) -> Swift.UInt32">
                     <isStatic="True">
                     <returnType="Swift.UInt32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *=(Swift.UInt32, Swift.UInt32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Swift.UInt32, Swift.UInt32) -> Swift.UInt32">
                     <isStatic="True">
                     <returnType="Swift.UInt32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Swift.UInt32, Swift.UInt32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(Swift.UInt32, Swift.UInt32) -> Swift.UInt32">
                     <isStatic="True">
                     <returnType="Swift.UInt32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(Swift.UInt32, Swift.UInt32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(Swift.UInt32, Swift.UInt32) -> Swift.UInt32">
                     <isStatic="True">
                     <returnType="Swift.UInt32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /=(Swift.UInt32, Swift.UInt32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.UInt32, Swift.UInt32) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <=(Swift.UInt32, Swift.UInt32) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.UInt32, Swift.UInt32) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >(Swift.UInt32, Swift.UInt32) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >=(Swift.UInt32, Swift.UInt32) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^(Swift.UInt32, Swift.UInt32) -> Swift.UInt32">
                     <isStatic="True">
                     <returnType="Swift.UInt32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^=(Swift.UInt32, Swift.UInt32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addingReportingOverflowSwift.UInt32 -> (partialValue: Swift.UInt32, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt32, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividedReportingOverflow(by: Swift.UInt32) -> (partialValue: Swift.UInt32, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt32, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividingFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividingFullWidth((high: Swift.UInt32, low: Swift.UInt32)) -> (quotient: Swift.UInt32, remainder: Swift.UInt32)">
                     <isStatic="False">
                     <returnType="(quotient: quotient: Swift.UInt32, remainder: remainder: Swift.UInt32)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="(high: Swift.UInt32 low: Swift.UInt32)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedFullWidth(by: Swift.UInt32) -> (high: Swift.UInt32, low: Swift.UInt32)">
                     <isStatic="False">
                     <returnType="(high: high: Swift.UInt32, low: low: Swift.UInt32)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedReportingOverflow(by: Swift.UInt32) -> (partialValue: Swift.UInt32, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt32, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remainderReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remainderReportingOverflow(dividingBy: Swift.UInt32) -> (partialValue: Swift.UInt32, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt32, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="signum">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func signum() -> Swift.UInt32">
                     <isStatic="False">
                     <returnType="Swift.UInt32">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtractingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subtractingReportingOverflowSwift.UInt32 -> (partialValue: Swift.UInt32, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt32, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |(Swift.UInt32, Swift.UInt32) -> Swift.UInt32">
                     <isStatic="True">
                     <returnType="Swift.UInt32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |=(Swift.UInt32, Swift.UInt32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UInt32.SIMD16Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt32.SIMD2Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt32.SIMD32Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt32.SIMD4Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt32.SIMD64Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt32.SIMD8Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt32.Words">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UInt64">
                  <property>
                     <name="bitWidth">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="byteSwapped">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leadingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nonzeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="trailingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="words">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="%">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %(Swift.UInt64, Swift.UInt64) -> Swift.UInt64">
                     <isStatic="True">
                     <returnType="Swift.UInt64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="%=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %=(Swift.UInt64, Swift.UInt64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &(Swift.UInt64, Swift.UInt64) -> Swift.UInt64">
                     <isStatic="True">
                     <returnType="Swift.UInt64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<(Swift.UInt64, Swift.UInt64) -> Swift.UInt64">
                     <isStatic="True">
                     <returnType="Swift.UInt64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<=(Swift.UInt64, Swift.UInt64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &=(Swift.UInt64, Swift.UInt64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>(Swift.UInt64, Swift.UInt64) -> Swift.UInt64">
                     <isStatic="True">
                     <returnType="Swift.UInt64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>=(Swift.UInt64, Swift.UInt64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(Swift.UInt64, Swift.UInt64) -> Swift.UInt64">
                     <isStatic="True">
                     <returnType="Swift.UInt64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *=(Swift.UInt64, Swift.UInt64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Swift.UInt64, Swift.UInt64) -> Swift.UInt64">
                     <isStatic="True">
                     <returnType="Swift.UInt64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Swift.UInt64, Swift.UInt64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(Swift.UInt64, Swift.UInt64) -> Swift.UInt64">
                     <isStatic="True">
                     <returnType="Swift.UInt64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(Swift.UInt64, Swift.UInt64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(Swift.UInt64, Swift.UInt64) -> Swift.UInt64">
                     <isStatic="True">
                     <returnType="Swift.UInt64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /=(Swift.UInt64, Swift.UInt64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.UInt64, Swift.UInt64) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <=(Swift.UInt64, Swift.UInt64) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.UInt64, Swift.UInt64) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >(Swift.UInt64, Swift.UInt64) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >=(Swift.UInt64, Swift.UInt64) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^(Swift.UInt64, Swift.UInt64) -> Swift.UInt64">
                     <isStatic="True">
                     <returnType="Swift.UInt64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^=(Swift.UInt64, Swift.UInt64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addingReportingOverflowSwift.UInt64 -> (partialValue: Swift.UInt64, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt64, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividedReportingOverflow(by: Swift.UInt64) -> (partialValue: Swift.UInt64, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt64, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividingFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividingFullWidth((high: Swift.UInt64, low: Swift.UInt64)) -> (quotient: Swift.UInt64, remainder: Swift.UInt64)">
                     <isStatic="False">
                     <returnType="(quotient: quotient: Swift.UInt64, remainder: remainder: Swift.UInt64)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="(high: Swift.UInt64 low: Swift.UInt64)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedFullWidth(by: Swift.UInt64) -> (high: Swift.UInt64, low: Swift.UInt64)">
                     <isStatic="False">
                     <returnType="(high: high: Swift.UInt64, low: low: Swift.UInt64)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedReportingOverflow(by: Swift.UInt64) -> (partialValue: Swift.UInt64, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt64, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remainderReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remainderReportingOverflow(dividingBy: Swift.UInt64) -> (partialValue: Swift.UInt64, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt64, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="signum">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func signum() -> Swift.UInt64">
                     <isStatic="False">
                     <returnType="Swift.UInt64">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtractingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subtractingReportingOverflowSwift.UInt64 -> (partialValue: Swift.UInt64, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt64, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |(Swift.UInt64, Swift.UInt64) -> Swift.UInt64">
                     <isStatic="True">
                     <returnType="Swift.UInt64">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |=(Swift.UInt64, Swift.UInt64)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt64" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UInt64.SIMD16Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt64.SIMD2Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt64.SIMD32Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt64.SIMD4Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt64.SIMD64Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt64.SIMD8Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt64.Words">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UInt8">
                  <property>
                     <name="bitWidth">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="byteSwapped">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leadingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nonzeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="trailingZeroBitCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="words">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="%">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %(Swift.UInt8, Swift.UInt8) -> Swift.UInt8">
                     <isStatic="True">
                     <returnType="Swift.UInt8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="%=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func %=(Swift.UInt8, Swift.UInt8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &(Swift.UInt8, Swift.UInt8) -> Swift.UInt8">
                     <isStatic="True">
                     <returnType="Swift.UInt8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<(Swift.UInt8, Swift.UInt8) -> Swift.UInt8">
                     <isStatic="True">
                     <returnType="Swift.UInt8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &<<=(Swift.UInt8, Swift.UInt8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &=(Swift.UInt8, Swift.UInt8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>(Swift.UInt8, Swift.UInt8) -> Swift.UInt8">
                     <isStatic="True">
                     <returnType="Swift.UInt8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func &>>=(Swift.UInt8, Swift.UInt8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(Swift.UInt8, Swift.UInt8) -> Swift.UInt8">
                     <isStatic="True">
                     <returnType="Swift.UInt8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *=(Swift.UInt8, Swift.UInt8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Swift.UInt8, Swift.UInt8) -> Swift.UInt8">
                     <isStatic="True">
                     <returnType="Swift.UInt8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Swift.UInt8, Swift.UInt8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(Swift.UInt8, Swift.UInt8) -> Swift.UInt8">
                     <isStatic="True">
                     <returnType="Swift.UInt8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(Swift.UInt8, Swift.UInt8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(Swift.UInt8, Swift.UInt8) -> Swift.UInt8">
                     <isStatic="True">
                     <returnType="Swift.UInt8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /=(Swift.UInt8, Swift.UInt8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.UInt8, Swift.UInt8) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <=(Swift.UInt8, Swift.UInt8) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.UInt8, Swift.UInt8) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >(Swift.UInt8, Swift.UInt8) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >=(Swift.UInt8, Swift.UInt8) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^(Swift.UInt8, Swift.UInt8) -> Swift.UInt8">
                     <isStatic="True">
                     <returnType="Swift.UInt8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ^=(Swift.UInt8, Swift.UInt8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addingReportingOverflowSwift.UInt8 -> (partialValue: Swift.UInt8, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt8, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividedReportingOverflow(by: Swift.UInt8) -> (partialValue: Swift.UInt8, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt8, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividingFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dividingFullWidth((high: Swift.UInt8, low: Swift.UInt8)) -> (quotient: Swift.UInt8, remainder: Swift.UInt8)">
                     <isStatic="False">
                     <returnType="(quotient: quotient: Swift.UInt8, remainder: remainder: Swift.UInt8)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="(high: Swift.UInt8 low: Swift.UInt8)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedFullWidth">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedFullWidth(by: Swift.UInt8) -> (high: Swift.UInt8, low: Swift.UInt8)">
                     <isStatic="False">
                     <returnType="(high: high: Swift.UInt8, low: low: Swift.UInt8)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func multipliedReportingOverflow(by: Swift.UInt8) -> (partialValue: Swift.UInt8, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt8, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remainderReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remainderReportingOverflow(dividingBy: Swift.UInt8) -> (partialValue: Swift.UInt8, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt8, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="signum">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func signum() -> Swift.UInt8">
                     <isStatic="False">
                     <returnType="Swift.UInt8">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtractingReportingOverflow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subtractingReportingOverflowSwift.UInt8 -> (partialValue: Swift.UInt8, overflow: Bool)">
                     <isStatic="False">
                     <returnType="(partialValue: partialValue: Swift.UInt8, overflow: overflow: Bool)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |(Swift.UInt8, Swift.UInt8) -> Swift.UInt8">
                     <isStatic="True">
                     <returnType="Swift.UInt8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func |=(Swift.UInt8, Swift.UInt8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UInt8.SIMD16Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt8.SIMD2Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt8.SIMD32Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt8.SIMD4Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt8.SIMD64Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt8.SIMD8Storage">
                  <property>
                     <name="scalarCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.UInt8.Words">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnfoldSequence">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.ASCII.Parser">
                  <func>
                     <name="parseScalar">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func parseScalar(from: Self) -> Swift.Unicode.ParseResult(Swift.CollectionOfOne(Swift.UInt8))">
                     <isStatic="False">
                     <returnType="Swift.Unicode.ParseResult<Swift.CollectionOfOne<Swift.UInt8>>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.CanonicalCombiningClass">
                  <property>
                     <name="above">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="aboveLeft">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="aboveRight">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="attachedAbove">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="attachedAboveRight">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="attachedBelow">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="attachedBelowLeft">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="below">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="belowLeft">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="belowRight">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="doubleAbove">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="doubleBelow">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="iotaSubscript">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="kanaVoicing">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="left">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="notReordered">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nukta">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="overlay">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="right">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="virama">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.Unicode.CanonicalCombiningClass, Swift.Unicode.CanonicalCombiningClass) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Unicode.CanonicalCombiningClass" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Unicode.CanonicalCombiningClass" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.Unicode.CanonicalCombiningClass, Swift.Unicode.CanonicalCombiningClass) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Unicode.CanonicalCombiningClass" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Unicode.CanonicalCombiningClass" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.Scalar">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isASCII">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="properties">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf16">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf8">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.Unicode.Scalar, Swift.Unicode.Scalar) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.Unicode.Scalar, Swift.Unicode.Scalar) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="escaped">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func escaped(asASCII: Bool) -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="asASCII: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUTF8CodeUnits">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUTF8CodeUnitsSwift.UnsafeBufferPointer(Swift.UInt8) -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="write">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func write(to: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.Scalar.Properties">
                  <property>
                     <name="age">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="canonicalCombiningClass">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="changesWhenCaseFolded">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="changesWhenCaseMapped">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="changesWhenLowercased">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="changesWhenNFKCCaseFolded">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="changesWhenTitlecased">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="changesWhenUppercased">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="generalCategory">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isASCIIHexDigit">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isAlphabetic">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isBidiControl">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isBidiMirrored">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isCaseIgnorable">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isCased">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isDash">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isDefaultIgnorableCodePoint">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isDeprecated">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isDiacritic">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isEmoji">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isEmojiModifier">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isEmojiModifierBase">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isEmojiPresentation">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isExtender">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isFullCompositionExclusion">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isGraphemeBase">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isGraphemeExtend">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isHexDigit">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isIDContinue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isIDSBinaryOperator">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isIDSTrinaryOperator">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isIDStart">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isIdeographic">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isJoinControl">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isLogicalOrderException">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isLowercase">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isMath">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isNoncharacterCodePoint">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isPatternSyntax">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isPatternWhitespace">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isQuotationMark">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isRadical">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSentenceTerminal">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSoftDotted">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isTerminalPunctuation">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isUnifiedIdeograph">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isUppercase">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isVariationSelector">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isWhitespace">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isXIDContinue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isXIDStart">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lowercaseMapping">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="name">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nameAlias">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="numericType">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="numericValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="titlecaseMapping">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="uppercaseMapping">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Unicode.Scalar.UTF16View">
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Unicode.Scalar.UTF8View">
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Unicode.UTF16.ForwardParser">
               </Struct>
               <Struct name="Swift.Unicode.UTF16.ReverseParser">
               </Struct>
               <Struct name="Swift.Unicode.UTF32.Parser">
                  <func>
                     <name="parseScalar">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func parseScalar(from: Self) -> Swift.Unicode.ParseResult(Swift.CollectionOfOne(Swift.UInt32))">
                     <isStatic="False">
                     <returnType="Swift.Unicode.ParseResult<Swift.CollectionOfOne<Swift.UInt32>>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Unicode.UTF8.ForwardParser">
               </Struct>
               <Struct name="Swift.Unicode.UTF8.ReverseParser">
               </Struct>
               <Struct name="Swift.Unmanaged">
                  <func>
                     <name="autorelease">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func autorelease() -> Swift.Unmanaged(Self)">
                     <isStatic="False">
                     <returnType="Swift.Unmanaged<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="fromOpaque">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func fromOpaqueSwift.UnsafeRawPointer -> Swift.Unmanaged(Self)">
                     <isStatic="True">
                     <returnType="Swift.Unmanaged<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="passRetained">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func passRetainedSelf -> Swift.Unmanaged(Self)">
                     <isStatic="True">
                     <returnType="Swift.Unmanaged<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="passUnretained">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func passUnretainedSelf -> Swift.Unmanaged(Self)">
                     <isStatic="True">
                     <returnType="Swift.Unmanaged<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="release">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func release()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="retain">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func retain() -> Swift.Unmanaged(Self)">
                     <isStatic="False">
                     <returnType="Swift.Unmanaged<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="takeRetainedValue">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func takeRetainedValue() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="takeUnretainedValue">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func takeUnretainedValue() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="toOpaque">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func toOpaque() -> Swift.UnsafeMutableRawPointer">
                     <isStatic="False">
                     <returnType="Swift.UnsafeMutableRawPointer">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeBufferPointer">
                  <property>
                     <name="baseAddress">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="deallocate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func deallocate()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Int, to: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIndex(after: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withContiguousStorageIfAvailable">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withContiguousStorageIfAvailableSwift.UnsafeBufferPointer(Self) -> ??? -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withMemoryRebound">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withMemoryRebound(to: Meta , : Swift.UnsafeBufferPointer(???) -> ???) -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UnsafeBufferPointer(???) -> ???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafeRawBufferPointer -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeBufferPointer.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Self?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeMutableBufferPointer">
                  <property>
                     <name="baseAddress">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="allocate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func allocate(capacity: Int) -> Swift.UnsafeMutableBufferPointer(Self)">
                     <isStatic="True">
                     <returnType="Swift.UnsafeMutableBufferPointer<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="assign">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func assign(repeating: Self)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="repeating: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="deallocate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func deallocate()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(from: Int, to: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIndex(after: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="initialize">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func initialize(from: ???) -> (???B0.Iterator, Int)">
                     <isStatic="False">
                     <returnType="(???B0.Iterator, Int)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: ???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="swapAt">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func swapAt(Int, Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withContiguousMutableStorageIfAvailable">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withContiguousMutableStorageIfAvailableSwift.UnsafeMutableBufferPointer(Self) -> ??? -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withContiguousStorageIfAvailable">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withContiguousStorageIfAvailableSwift.UnsafeBufferPointer(Self) -> ??? -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withMemoryRebound">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withMemoryRebound(to: Meta , : Swift.UnsafeMutableBufferPointer(???) -> ???) -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UnsafeMutableBufferPointer(???) -> ???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafeRawBufferPointer -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeMutablePointer">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="pointee">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="allocate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func allocate(capacity: Int) -> Swift.UnsafeMutablePointer(Self)">
                     <isStatic="True">
                     <returnType="Swift.UnsafeMutablePointer<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="assign">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func assign(from: Swift.UnsafePointer(Self), count: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.UnsafePointer(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="deallocate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func deallocate(capacity: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="deinitialize">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func deinitialize(count: Int) -> Swift.UnsafeMutableRawPointer">
                     <isStatic="False">
                     <returnType="Swift.UnsafeMutableRawPointer">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="initialize">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func initialize(to: Self, count: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="move">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func move() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="moveAssign">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func moveAssign(from: Swift.UnsafeMutablePointer(Self), count: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="moveInitialize">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func moveInitialize(from: Swift.UnsafeMutablePointer(Self), count: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withMemoryRebound">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withMemoryRebound(to: Meta , capacity: Int, : Swift.UnsafeMutablePointer(???) -> ???) -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UnsafeMutablePointer(???) -> ???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeMutableRawBufferPointer">
                  <property>
                     <name="baseAddress">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="allocate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func allocate(count: Int) -> Swift.UnsafeMutableRawBufferPointer">
                     <isStatic="True">
                     <returnType="Swift.UnsafeMutableRawBufferPointer">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="bindMemory">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func bindMemory(to: Meta ) -> Swift.UnsafeMutableBufferPointer(Self)">
                     <isStatic="False">
                     <returnType="Swift.UnsafeMutableBufferPointer<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="copyBytes">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func copyBytes(from: Swift.UnsafeRawBufferPointer)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="copyMemory">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func copyMemory(from: Swift.UnsafeRawBufferPointer)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="deallocate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func deallocate()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="initializeMemory">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func initializeMemory(as: Meta , from: Self) -> (unwritten: Self.Iterator, initialized: Swift.UnsafeMutableBufferPointer(Self.Element))">
                     <isStatic="False">
                     <returnType="(unwritten: unwritten: Self.Iterator, initialized: initialized: Swift.UnsafeMutableBufferPointer<Self.Element>)">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="load">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func load(fromByteOffset: Int, as: Meta ) -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="fromByteOffset: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Swift.UnsafeRawBufferPointer.Iterator">
                     <isStatic="False">
                     <returnType="Swift.UnsafeRawBufferPointer.Iterator">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="storeBytes">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func storeBytes(of: Self, toByteOffset: Int, as: Meta )">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Self" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="toByteOffset: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="swapAt">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func swapAt(Int, Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafeRawBufferPointer -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeMutableRawPointer">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="advanced">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func advanced(by: Int) -> Swift.UnsafeMutableRawPointer">
                     <isStatic="False">
                     <returnType="Swift.UnsafeMutableRawPointer">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="allocate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func allocate(bytes: Int, alignedTo: Int) -> Swift.UnsafeMutableRawPointer">
                     <isStatic="True">
                     <returnType="Swift.UnsafeMutableRawPointer">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="bytes: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="alignedTo: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="assumingMemoryBound">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func assumingMemoryBound(to: Meta ) -> Swift.UnsafeMutablePointer(Self)">
                     <isStatic="False">
                     <returnType="Swift.UnsafeMutablePointer<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="bindMemory">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func bindMemory(to: Meta , capacity: Int) -> Swift.UnsafeMutablePointer(Self)">
                     <isStatic="False">
                     <returnType="Swift.UnsafeMutablePointer<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="copyBytes">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func copyBytes(from: Swift.UnsafeRawPointer, count: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.UnsafeRawPointer" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="copyMemory">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func copyMemory(from: Swift.UnsafeRawPointer, byteCount: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.UnsafeRawPointer" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="byteCount: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="deallocate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func deallocate(bytes: Int, alignedTo: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="bytes: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="alignedTo: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="initializeMemory">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func initializeMemory(as: Meta , at: Int, count: Int, to: Self) -> Swift.UnsafeMutablePointer(Self)">
                     <isStatic="False">
                     <returnType="Swift.UnsafeMutablePointer<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="at: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="load">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func load(fromByteOffset: Int, as: Meta ) -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="fromByteOffset: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="moveInitializeMemory">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func moveInitializeMemory(as: Meta , from: Swift.UnsafeMutablePointer(Self), count: Int) -> Swift.UnsafeMutablePointer(Self)">
                     <isStatic="False">
                     <returnType="Swift.UnsafeMutablePointer<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.UnsafeMutablePointer(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="storeBytes">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func storeBytes(of: Self, toByteOffset: Int, as: Meta )">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Self" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="toByteOffset: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafePointer">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="pointee">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="deallocate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func deallocate()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withMemoryRebound">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withMemoryRebound(to: Meta , capacity: Int, : Swift.UnsafePointer(???) -> ???) -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UnsafePointer(???) -> ???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeRawBufferPointer">
                  <property>
                     <name="baseAddress">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="bindMemory">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func bindMemory(to: Meta ) -> Swift.UnsafeBufferPointer(Self)">
                     <isStatic="False">
                     <returnType="Swift.UnsafeBufferPointer<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="deallocate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func deallocate()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="load">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func load(fromByteOffset: Int, as: Meta ) -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="fromByteOffset: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Swift.UnsafeRawBufferPointer.Iterator">
                     <isStatic="False">
                     <returnType="Swift.UnsafeRawBufferPointer.Iterator">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafeRawBufferPointer -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeRawBufferPointer.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Swift.UInt8?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.UInt8>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.UnsafeRawPointer">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="advanced">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func advanced(by: Int) -> Swift.UnsafeRawPointer">
                     <isStatic="False">
                     <returnType="Swift.UnsafeRawPointer">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="assumingMemoryBound">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func assumingMemoryBound(to: Meta ) -> Swift.UnsafePointer(Self)">
                     <isStatic="False">
                     <returnType="Swift.UnsafePointer<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="bindMemory">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func bindMemory(to: Meta , capacity: Int) -> Swift.UnsafePointer(Self)">
                     <isStatic="False">
                     <returnType="Swift.UnsafePointer<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="capacity: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="deallocate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func deallocate()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="load">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func load(fromByteOffset: Int, as: Meta ) -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="fromByteOffset: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="as: Meta " type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.Zip2Sequence">
                  <property>
                     <name="underestimatedCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Swift.Zip2Sequence.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> (Self.Element, ???A1.Element)?">
                     <isStatic="False">
                     <returnType="Swift.Optional<(Self.Element, ???A1.Element)>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="Swift.CollectionDifference.Change">
               </Enum>
               <Enum name="Swift.CommandLine">
                  <property>
                     <name="argc">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="arguments">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="unsafeArgv">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Enum>
               <Enum name="Swift.DecodingError">
                  <func>
                     <name="dataCorruptedError">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func dataCorruptedError(in: Swift.SingleValueDecodingContainer, debugDescription: Swift.String) -> Swift.DecodingError">
                     <isStatic="True">
                     <returnType="Swift.DecodingError">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: Swift.SingleValueDecodingContainer" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="debugDescription: Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.EncodingError">
               </Enum>
               <Enum name="Swift.FloatingPointClassification">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.FloatingPointClassification, Swift.FloatingPointClassification) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.FloatingPointClassification" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.FloatingPointClassification" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.FloatingPointRoundingRule">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.FloatingPointRoundingRule, Swift.FloatingPointRoundingRule) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.FloatingPointRoundingRule" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.FloatingPointRoundingRule" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.FloatingPointSign">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.FloatingPointSign, Swift.FloatingPointSign) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.FloatingPointSign" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.FloatingPointSign" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.MemoryLayout">
                  <property>
                     <name="alignment">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="size">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="stride">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="alignment">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func alignment(ofValue: Self) -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="ofValue: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="offset">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func offset(of: Swift.PartialKeyPath(Self)) -> Int?">
                     <isStatic="True">
                     <returnType="Swift.Optional<Int>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Swift.PartialKeyPath(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="size">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func size(ofValue: Self) -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="ofValue: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="stride">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func stride(ofValue: Self) -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="ofValue: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.Mirror.AncestorRepresentation">
               </Enum>
               <Enum name="Swift.Mirror.DisplayStyle">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.Mirror.DisplayStyle, Swift.Mirror.DisplayStyle) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Mirror.DisplayStyle" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Mirror.DisplayStyle" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.Never">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Swift.Never, Swift.Never) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Never" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Never" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.Never, Swift.Never) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Never" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Never" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.Optional">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="unsafelyUnwrapped">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="flatMap">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func flatMapSelf -> ???? -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="map">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func mapSelf -> ??? -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.Result">
                  <func>
                     <name="flatMap">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func flatMapSelf -> Swift.Result(???, ???) -> Swift.Result(???, ???)">
                     <isStatic="False">
                     <returnType="Swift.Result<???, ???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="flatMapError">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func flatMapError??? -> Swift.Result(Self, ???) -> Swift.Result(Self, ???)">
                     <isStatic="False">
                     <returnType="Swift.Result<Self, ???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="get">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func get() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="map">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func mapSelf -> ??? -> Swift.Result(???, ???)">
                     <isStatic="False">
                     <returnType="Swift.Result<???, ???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="mapError">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func mapError??? -> ??? -> Swift.Result(Self, ???)">
                     <isStatic="False">
                     <returnType="Swift.Result<Self, ???>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.Unicode">
               </Enum>
               <Enum name="Swift.Unicode.ASCII">
                  <property>
                     <name="encodedReplacementCharacter">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="decode">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func decodeSwift.CollectionOfOne(Swift.UInt8) -> Swift.Unicode.Scalar">
                     <isStatic="True">
                     <returnType="Swift.Unicode.Scalar">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func encodeSwift.Unicode.Scalar -> Swift.CollectionOfOne(Swift.UInt8)?">
                     <isStatic="True">
                     <returnType="Swift.Optional<Swift.CollectionOfOne<Swift.UInt8>>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="transcode">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func transcode(: Self.EncodedScalar, from: Meta ) -> Swift.CollectionOfOne(Swift.UInt8)?">
                     <isStatic="True">
                     <returnType="Swift.Optional<Swift.CollectionOfOne<Swift.UInt8>>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Self.EncodedScalar" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Meta " type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.GeneralCategory">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.Unicode.GeneralCategory, Swift.Unicode.GeneralCategory) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Unicode.GeneralCategory" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Unicode.GeneralCategory" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.NumericType">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.Unicode.NumericType, Swift.Unicode.NumericType) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Unicode.NumericType" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Unicode.NumericType" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.ParseResult">
               </Enum>
               <Enum name="Swift.Unicode.UTF16">
                  <func>
                     <name="decode">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func decodeSelf -> Swift.UnicodeDecodingResult">
                     <isStatic="False">
                     <returnType="Swift.UnicodeDecodingResult">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func encode(: Swift.Unicode.Scalar, into: Swift.UInt16)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.UInt16" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isLeadSurrogate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func isLeadSurrogateSwift.UInt16 -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isTrailSurrogate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func isTrailSurrogateSwift.UInt16 -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="leadSurrogate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func leadSurrogateSwift.Unicode.Scalar -> Swift.UInt16">
                     <isStatic="True">
                     <returnType="Swift.UInt16">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="trailSurrogate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func trailSurrogateSwift.Unicode.Scalar -> Swift.UInt16">
                     <isStatic="True">
                     <returnType="Swift.UInt16">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="transcodedLength">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func transcodedLength(of: Self, decodedAs: Meta , repairingIllFormedSequences: Bool) -> (count: Int, isASCII: Bool)?">
                     <isStatic="True">
                     <returnType="Swift.Optional<(count: count: Int, isASCII: isASCII: Bool)>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Self" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="decodedAs: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="repairingIllFormedSequences: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="width">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func widthSwift.Unicode.Scalar -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.UTF32">
                  <property>
                     <name="encodedReplacementCharacter">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.Unicode.UTF32, Swift.Unicode.UTF32) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Unicode.UTF32" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Unicode.UTF32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func decodeSelf -> Swift.UnicodeDecodingResult">
                     <isStatic="False">
                     <returnType="Swift.UnicodeDecodingResult">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func decodeSwift.CollectionOfOne(Swift.UInt32) -> Swift.Unicode.Scalar">
                     <isStatic="True">
                     <returnType="Swift.Unicode.Scalar">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func encode(: Swift.Unicode.Scalar, into: Swift.UInt32)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.Unicode.UTF8">
                  <func>
                     <name="decode">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func decodeSelf -> Swift.UnicodeDecodingResult">
                     <isStatic="False">
                     <returnType="Swift.UnicodeDecodingResult">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func encode(: Swift.Unicode.Scalar, into: Swift.UInt8)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isContinuation">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func isContinuationSwift.UInt8 -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Swift.UnicodeDecodingResult">
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.UnicodeDecodingResult, Swift.UnicodeDecodingResult) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UnicodeDecodingResult" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UnicodeDecodingResult" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
            </innerenums>
         </typedeclaration>
         <typedeclaration kind="protocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerprotocols>
               <Protocol name="Swift.AdditiveArithmetic">
                  <func>
                     <name="+">
                     <operatorKind="Infix">
                     <signature="func +(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <operatorKind="Infix">
                     <signature="func +=(Self, Self)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <operatorKind="Infix">
                     <signature="func -(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <operatorKind="Infix">
                     <signature="func -=(Self, Self)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="zero">
                     <operatorKind="None">
                     <signature="func zero() -> Self">
                     <isStatic="True">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.BidirectionalCollection">
                  <func>
                     <name="distance">
                     <operatorKind="None">
                     <signature="func distance(from: Self.Index, to: Self.Index) -> Int">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Self.Index" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <operatorKind="None">
                     <signature="func formIndex(before: Self.Index)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="before: Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <operatorKind="None">
                     <signature="func index(before: Self.Index) -> Self.Index">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="before: Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self.Index">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <operatorKind="None">
                     <signature="func index(: Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Self.Index" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="offsetBy: Int" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="limitedBy: Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Self.Index>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <operatorKind="None">
                     <signature="func index(: Self.Index, offsetBy: Int) -> Self.Index">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Self.Index" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="offsetBy: Int" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self.Index">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.BinaryFloatingPoint">
                  <func>
                     <name="binade">
                     <operatorKind="None">
                     <signature="func binade() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="exponentBitCount">
                     <operatorKind="None">
                     <signature="func exponentBitCount() -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="exponentBitPattern">
                     <operatorKind="None">
                     <signature="func exponentBitPattern() -> Self.RawExponent">
                     <isStatic="False">
                     <returnType="Self.RawExponent">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="significandBitCount">
                     <operatorKind="None">
                     <signature="func significandBitCount() -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="significandBitPattern">
                     <operatorKind="None">
                     <signature="func significandBitPattern() -> Self.RawSignificand">
                     <isStatic="False">
                     <returnType="Self.RawSignificand">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="significandWidth">
                     <operatorKind="None">
                     <signature="func significandWidth() -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.BinaryInteger">
                  <func>
                     <name="%">
                     <operatorKind="Infix">
                     <signature="func %(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="%=">
                     <operatorKind="Infix">
                     <signature="func %=(Self, Self)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&">
                     <operatorKind="Infix">
                     <signature="func &(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&=">
                     <operatorKind="Infix">
                     <signature="func &=(Self, Self)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <operatorKind="Infix">
                     <signature="func /(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <operatorKind="Infix">
                     <signature="func /=(Self, Self)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<<">
                     <operatorKind="Infix">
                     <signature="func <<(Self, ???) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<<=">
                     <operatorKind="Infix">
                     <signature="func <<=(Self, ???)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">>">
                     <operatorKind="Infix">
                     <signature="func >>(Self, ???) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">>=">
                     <operatorKind="Infix">
                     <signature="func >>=(Self, ???)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^">
                     <operatorKind="Infix">
                     <signature="func ^(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="^=">
                     <operatorKind="Infix">
                     <signature="func ^=(Self, Self)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="bitWidth">
                     <operatorKind="None">
                     <signature="func bitWidth() -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isMultiple">
                     <operatorKind="None">
                     <signature="func isMultiple(of: Self) -> Bool">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isSigned">
                     <operatorKind="None">
                     <signature="func isSigned() -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="quotientAndRemainder">
                     <operatorKind="None">
                     <signature="func quotientAndRemainder(dividingBy: Self) -> (quotient: Self, remainder: Self)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="(quotient: quotient: Self, remainder: remainder: Self)">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="signum">
                     <operatorKind="None">
                     <signature="func signum() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="trailingZeroBitCount">
                     <operatorKind="None">
                     <signature="func trailingZeroBitCount() -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="words">
                     <operatorKind="None">
                     <signature="func words() -> Self.Words">
                     <isStatic="False">
                     <returnType="Self.Words">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|">
                     <operatorKind="Infix">
                     <signature="func |(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="|=">
                     <operatorKind="Infix">
                     <signature="func |=(Self, Self)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="~">
                     <operatorKind="Prefix">
                     <signature="func ~Self -> Self">
                     <isStatic="True">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.CVarArg">
               </Protocol>
               <Protocol name="Swift.CaseIterable">
                  <func>
                     <name="allCases">
                     <operatorKind="None">
                     <signature="func allCases() -> Self.AllCases">
                     <isStatic="True">
                     <returnType="Self.AllCases">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.CodingKey">
                  <func>
                     <name="intValue">
                     <operatorKind="None">
                     <signature="func intValue() -> Int?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Int>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="stringValue">
                     <operatorKind="None">
                     <signature="func stringValue() -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Collection">
                  <func>
                     <name="count">
                     <operatorKind="None">
                     <signature="func count() -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <operatorKind="None">
                     <signature="func distance(from: Self.Index, to: Self.Index) -> Int">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Self.Index" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="endIndex">
                     <operatorKind="None">
                     <signature="func endIndex() -> Self.Index">
                     <isStatic="False">
                     <returnType="Self.Index">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <operatorKind="None">
                     <signature="func formIndex(after: Self.Index)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <operatorKind="None">
                     <signature="func index(: Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Self.Index" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="offsetBy: Int" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="limitedBy: Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Self.Index>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <operatorKind="None">
                     <signature="func index(: Self.Index, offsetBy: Int) -> Self.Index">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Self.Index" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="offsetBy: Int" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self.Index">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <operatorKind="None">
                     <signature="func index(after: Self.Index) -> Self.Index">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self.Index">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="indices">
                     <operatorKind="None">
                     <signature="func indices() -> Self.Indices">
                     <isStatic="False">
                     <returnType="Self.Indices">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isEmpty">
                     <operatorKind="None">
                     <signature="func isEmpty() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="startIndex">
                     <operatorKind="None">
                     <signature="func startIndex() -> Self.Index">
                     <isStatic="False">
                     <returnType="Self.Index">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subscript">
                     <operatorKind="None">
                     <signature="func subscriptSwift.Range(Self.Index) -> Self.SubSequence">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self.SubSequence">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Comparable">
                  <func>
                     <name="<">
                     <operatorKind="Infix">
                     <signature="func <(Self, Self) -> Bool">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<=">
                     <operatorKind="Infix">
                     <signature="func <=(Self, Self) -> Bool">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">">
                     <operatorKind="Infix">
                     <signature="func >(Self, Self) -> Bool">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">=">
                     <operatorKind="Infix">
                     <signature="func >=(Self, Self) -> Bool">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.CustomDebugStringConvertible">
                  <func>
                     <name="debugDescription">
                     <operatorKind="None">
                     <signature="func debugDescription() -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.CustomLeafReflectable">
               </Protocol>
               <Protocol name="Swift.CustomPlaygroundDisplayConvertible">
                  <func>
                     <name="playgroundDescription">
                     <operatorKind="None">
                     <signature="func playgroundDescription() -> Swift.Any">
                     <isStatic="False">
                     <returnType="Swift.Any">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.CustomReflectable">
                  <func>
                     <name="customMirror">
                     <operatorKind="None">
                     <signature="func customMirror() -> Swift.Mirror">
                     <isStatic="False">
                     <returnType="Swift.Mirror">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.CustomStringConvertible">
                  <func>
                     <name="description">
                     <operatorKind="None">
                     <signature="func description() -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Decodable">
               </Protocol>
               <Protocol name="Swift.Decoder">
                  <func>
                     <name="codingPath">
                     <operatorKind="None">
                     <signature="func codingPath() -> Swift.Array(Swift.CodingKey)">
                     <isStatic="False">
                     <returnType="Swift.Array<Swift.CodingKey>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="container">
                     <operatorKind="None">
                     <signature="func container(keyedBy: Meta ) -> Swift.KeyedDecodingContainer(???)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keyedBy: Meta " type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.KeyedDecodingContainer<???>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="singleValueContainer">
                     <operatorKind="None">
                     <signature="func singleValueContainer() -> Swift.SingleValueDecodingContainer">
                     <isStatic="False">
                     <returnType="Swift.SingleValueDecodingContainer">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="unkeyedContainer">
                     <operatorKind="None">
                     <signature="func unkeyedContainer() -> Swift.UnkeyedDecodingContainer">
                     <isStatic="False">
                     <returnType="Swift.UnkeyedDecodingContainer">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="userInfo">
                     <operatorKind="None">
                     <signature="func userInfo() -> Swift.Dictionary(Swift.CodingUserInfoKey, Swift.Any)">
                     <isStatic="False">
                     <returnType="Swift.Dictionary<Swift.CodingUserInfoKey, Swift.Any>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Encodable">
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Encoder">
                  <func>
                     <name="codingPath">
                     <operatorKind="None">
                     <signature="func codingPath() -> Swift.Array(Swift.CodingKey)">
                     <isStatic="False">
                     <returnType="Swift.Array<Swift.CodingKey>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="container">
                     <operatorKind="None">
                     <signature="func container(keyedBy: Meta ) -> Swift.KeyedEncodingContainer(???)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keyedBy: Meta " type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.KeyedEncodingContainer<???>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="singleValueContainer">
                     <operatorKind="None">
                     <signature="func singleValueContainer() -> Swift.SingleValueEncodingContainer">
                     <isStatic="False">
                     <returnType="Swift.SingleValueEncodingContainer">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="unkeyedContainer">
                     <operatorKind="None">
                     <signature="func unkeyedContainer() -> Swift.UnkeyedEncodingContainer">
                     <isStatic="False">
                     <returnType="Swift.UnkeyedEncodingContainer">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="userInfo">
                     <operatorKind="None">
                     <signature="func userInfo() -> Swift.Dictionary(Swift.CodingUserInfoKey, Swift.Any)">
                     <isStatic="False">
                     <returnType="Swift.Dictionary<Swift.CodingUserInfoKey, Swift.Any>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Equatable">
                  <func>
                     <name="==">
                     <operatorKind="Infix">
                     <signature="func ==(Self, Self) -> Bool">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Error">
               </Protocol>
               <Protocol name="Swift.ExpressibleByArrayLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByBooleanLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByDictionaryLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByExtendedGraphemeClusterLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByFloatLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByIntegerLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByNilLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByStringInterpolation">
               </Protocol>
               <Protocol name="Swift.ExpressibleByStringLiteral">
               </Protocol>
               <Protocol name="Swift.ExpressibleByUnicodeScalarLiteral">
               </Protocol>
               <Protocol name="Swift.FixedWidthInteger">
                  <func>
                     <name="&<<">
                     <operatorKind="Infix">
                     <signature="func &<<(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&<<=">
                     <operatorKind="Infix">
                     <signature="func &<<=(Self, Self)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>">
                     <operatorKind="Infix">
                     <signature="func &>>(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="&>>=">
                     <operatorKind="Infix">
                     <signature="func &>>=(Self, Self)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addingReportingOverflow">
                     <operatorKind="None">
                     <signature="func addingReportingOverflowSelf -> (partialValue: Self, overflow: Bool)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="(partialValue: partialValue: Self, overflow: overflow: Bool)">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="bigEndian">
                     <operatorKind="None">
                     <signature="func bigEndian() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="bitWidth">
                     <operatorKind="None">
                     <signature="func bitWidth() -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="byteSwapped">
                     <operatorKind="None">
                     <signature="func byteSwapped() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividedReportingOverflow">
                     <operatorKind="None">
                     <signature="func dividedReportingOverflow(by: Self) -> (partialValue: Self, overflow: Bool)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="(partialValue: partialValue: Self, overflow: overflow: Bool)">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dividingFullWidth">
                     <operatorKind="None">
                     <signature="func dividingFullWidth((high: Self, low: Self.Magnitude)) -> (quotient: Self, remainder: Self)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="(high: Self low: Self.Magnitude)" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="(quotient: quotient: Self, remainder: remainder: Self)">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="leadingZeroBitCount">
                     <operatorKind="None">
                     <signature="func leadingZeroBitCount() -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="littleEndian">
                     <operatorKind="None">
                     <signature="func littleEndian() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="max">
                     <operatorKind="None">
                     <signature="func max() -> Self">
                     <isStatic="True">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="min">
                     <operatorKind="None">
                     <signature="func min() -> Self">
                     <isStatic="True">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedFullWidth">
                     <operatorKind="None">
                     <signature="func multipliedFullWidth(by: Self) -> (high: Self, low: Self.Magnitude)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="(high: high: Self, low: low: Self.Magnitude)">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="multipliedReportingOverflow">
                     <operatorKind="None">
                     <signature="func multipliedReportingOverflow(by: Self) -> (partialValue: Self, overflow: Bool)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="(partialValue: partialValue: Self, overflow: overflow: Bool)">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nonzeroBitCount">
                     <operatorKind="None">
                     <signature="func nonzeroBitCount() -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remainderReportingOverflow">
                     <operatorKind="None">
                     <signature="func remainderReportingOverflow(dividingBy: Self) -> (partialValue: Self, overflow: Bool)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="(partialValue: partialValue: Self, overflow: overflow: Bool)">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtractingReportingOverflow">
                     <operatorKind="None">
                     <signature="func subtractingReportingOverflowSelf -> (partialValue: Self, overflow: Bool)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="partialValue: Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="overflow: Bool" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="(partialValue: partialValue: Self, overflow: overflow: Bool)">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.FloatingPoint">
                  <func>
                     <name="/">
                     <operatorKind="Infix">
                     <signature="func /(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <operatorKind="Infix">
                     <signature="func /=(Self, Self)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addProduct">
                     <operatorKind="None">
                     <signature="func addProduct(Self, Self)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addingProduct">
                     <operatorKind="None">
                     <signature="func addingProduct(Self, Self) -> Self">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="exponent">
                     <operatorKind="None">
                     <signature="func exponent() -> Self.Exponent">
                     <isStatic="False">
                     <returnType="Self.Exponent">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="floatingPointClass">
                     <operatorKind="None">
                     <signature="func floatingPointClass() -> Swift.FloatingPointClassification">
                     <isStatic="False">
                     <returnType="Swift.FloatingPointClassification">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formRemainder">
                     <operatorKind="None">
                     <signature="func formRemainder(dividingBy: Self)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formSquareRoot">
                     <operatorKind="None">
                     <signature="func formSquareRoot()">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formTruncatingRemainder">
                     <operatorKind="None">
                     <signature="func formTruncatingRemainder(dividingBy: Self)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="greatestFiniteMagnitude">
                     <operatorKind="None">
                     <signature="func greatestFiniteMagnitude() -> Self">
                     <isStatic="True">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="infinity">
                     <operatorKind="None">
                     <signature="func infinity() -> Self">
                     <isStatic="True">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isCanonical">
                     <operatorKind="None">
                     <signature="func isCanonical() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isEqual">
                     <operatorKind="None">
                     <signature="func isEqual(to: Self) -> Bool">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isFinite">
                     <operatorKind="None">
                     <signature="func isFinite() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isInfinite">
                     <operatorKind="None">
                     <signature="func isInfinite() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isLess">
                     <operatorKind="None">
                     <signature="func isLess(than: Self) -> Bool">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="than: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isLessThanOrEqualTo">
                     <operatorKind="None">
                     <signature="func isLessThanOrEqualToSelf -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isNaN">
                     <operatorKind="None">
                     <signature="func isNaN() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isNormal">
                     <operatorKind="None">
                     <signature="func isNormal() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isSignalingNaN">
                     <operatorKind="None">
                     <signature="func isSignalingNaN() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isSubnormal">
                     <operatorKind="None">
                     <signature="func isSubnormal() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isTotallyOrdered">
                     <operatorKind="None">
                     <signature="func isTotallyOrdered(belowOrEqualTo: Self) -> Bool">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="belowOrEqualTo: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isZero">
                     <operatorKind="None">
                     <signature="func isZero() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="leastNonzeroMagnitude">
                     <operatorKind="None">
                     <signature="func leastNonzeroMagnitude() -> Self">
                     <isStatic="True">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="leastNormalMagnitude">
                     <operatorKind="None">
                     <signature="func leastNormalMagnitude() -> Self">
                     <isStatic="True">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="maximum">
                     <operatorKind="None">
                     <signature="func maximum(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="maximumMagnitude">
                     <operatorKind="None">
                     <signature="func maximumMagnitude(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="minimum">
                     <operatorKind="None">
                     <signature="func minimum(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="minimumMagnitude">
                     <operatorKind="None">
                     <signature="func minimumMagnitude(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nan">
                     <operatorKind="None">
                     <signature="func nan() -> Self">
                     <isStatic="True">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nextDown">
                     <operatorKind="None">
                     <signature="func nextDown() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nextUp">
                     <operatorKind="None">
                     <signature="func nextUp() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="pi">
                     <operatorKind="None">
                     <signature="func pi() -> Self">
                     <isStatic="True">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="radix">
                     <operatorKind="None">
                     <signature="func radix() -> Int">
                     <isStatic="True">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remainder">
                     <operatorKind="None">
                     <signature="func remainder(dividingBy: Self) -> Self">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="round">
                     <operatorKind="None">
                     <signature="func roundSwift.FloatingPointRoundingRule">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="rounded">
                     <operatorKind="None">
                     <signature="func roundedSwift.FloatingPointRoundingRule -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="sign">
                     <operatorKind="None">
                     <signature="func sign() -> Swift.FloatingPointSign">
                     <isStatic="False">
                     <returnType="Swift.FloatingPointSign">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="signalingNaN">
                     <operatorKind="None">
                     <signature="func signalingNaN() -> Self">
                     <isStatic="True">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="significand">
                     <operatorKind="None">
                     <signature="func significand() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="squareRoot">
                     <operatorKind="None">
                     <signature="func squareRoot() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="truncatingRemainder">
                     <operatorKind="None">
                     <signature="func truncatingRemainder(dividingBy: Self) -> Self">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="ulp">
                     <operatorKind="None">
                     <signature="func ulp() -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="ulpOfOne">
                     <operatorKind="None">
                     <signature="func ulpOfOne() -> Self">
                     <isStatic="True">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Hashable">
                  <func>
                     <name="hash">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hashValue">
                     <operatorKind="None">
                     <signature="func hashValue() -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Identifiable">
                  <func>
                     <name="id">
                     <operatorKind="None">
                     <signature="func id() -> Self.ID">
                     <isStatic="False">
                     <returnType="Self.ID">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.IteratorProtocol">
                  <func>
                     <name="next">
                     <operatorKind="None">
                     <signature="func next() -> Self.Element?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self.Element>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.KeyedDecodingContainerProtocol">
                  <func>
                     <name="allKeys">
                     <operatorKind="None">
                     <signature="func allKeys() -> Swift.Array(Self.Key)">
                     <isStatic="False">
                     <returnType="Swift.Array<Self.Key>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="codingPath">
                     <operatorKind="None">
                     <signature="func codingPath() -> Swift.Array(Swift.CodingKey)">
                     <isStatic="False">
                     <returnType="Swift.Array<Swift.CodingKey>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="contains">
                     <operatorKind="None">
                     <signature="func containsSelf.Key -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode(: Meta Swift.UInt16, forKey: Self.Key) -> Swift.UInt16">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.UInt16" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.UInt16">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode(: Meta Swift.String, forKey: Self.Key) -> Swift.String">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.String" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.String">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode(: Meta Swift.UInt16, forKey: Self.Key) -> Swift.UInt16">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.UInt16" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.UInt16">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode(: Meta , forKey: Self.Key) -> ???">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta " type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="???">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode(: Meta Swift.Int8, forKey: Self.Key) -> Swift.Int8">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.Int8" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Int8">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode(: Meta Swift.Int16, forKey: Self.Key) -> Swift.Int16">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.Int16" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Int16">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode(: Meta Swift.Int64, forKey: Self.Key) -> Swift.Int64">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.Int64" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Int64">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode(: Meta Swift.Int32, forKey: Self.Key) -> Swift.Int32">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.Int32" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Int32">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode(: Meta Swift.Int64, forKey: Self.Key) -> Swift.Int64">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.Int64" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Int64">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode(: Meta Swift.UInt8, forKey: Self.Key) -> Swift.UInt8">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.UInt8" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.UInt8">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode(: Meta Swift.UInt32, forKey: Self.Key) -> Swift.UInt32">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.UInt32" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.UInt32">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode(: Meta Swift.UInt64, forKey: Self.Key) -> Swift.UInt64">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.UInt64" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.UInt64">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode(: Meta Swift.Int32, forKey: Self.Key) -> Swift.Int32">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.Int32" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Int32">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode(: Meta Swift.UInt32, forKey: Self.Key) -> Swift.UInt32">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.UInt32" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.UInt32">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta Swift.UInt64, forKey: Self.Key) -> Swift.UInt64?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.UInt64" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.UInt64>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta Swift.UInt8, forKey: Self.Key) -> Swift.UInt8?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.UInt8" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.UInt8>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta Swift.UInt16, forKey: Self.Key) -> Swift.UInt16?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.UInt16" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.UInt16>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta Swift.String, forKey: Self.Key) -> Swift.String?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.String" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.String>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta , forKey: Self.Key) -> ????">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta " type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<???>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta Swift.Int8, forKey: Self.Key) -> Swift.Int8?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.Int8" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.Int8>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta Swift.UInt32, forKey: Self.Key) -> Swift.UInt32?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.UInt32" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.UInt32>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta Swift.Int16, forKey: Self.Key) -> Swift.Int16?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.Int16" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.Int16>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta Swift.Int32, forKey: Self.Key) -> Swift.Int32?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.Int32" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.Int32>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta Swift.Int64, forKey: Self.Key) -> Swift.Int64?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.Int64" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.Int64>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta Swift.UInt8, forKey: Self.Key) -> Swift.UInt8?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.UInt8" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.UInt8>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta Swift.UInt16, forKey: Self.Key) -> Swift.UInt16?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.UInt16" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.UInt16>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta Swift.Int16, forKey: Self.Key) -> Swift.Int16?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.Int16" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.Int16>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresent(: Meta Swift.UInt32, forKey: Self.Key) -> Swift.UInt32?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta Swift.UInt32" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.UInt32>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeNil">
                     <operatorKind="None">
                     <signature="func decodeNil(forKey: Self.Key) -> Bool">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nestedContainer">
                     <operatorKind="None">
                     <signature="func nestedContainer(keyedBy: Meta , forKey: Self.Key) -> Swift.KeyedDecodingContainer(???)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keyedBy: Meta " type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.KeyedDecodingContainer<???>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nestedUnkeyedContainer">
                     <operatorKind="None">
                     <signature="func nestedUnkeyedContainer(forKey: Self.Key) -> Swift.UnkeyedDecodingContainer">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.UnkeyedDecodingContainer">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="superDecoder">
                     <operatorKind="None">
                     <signature="func superDecoder() -> Swift.Decoder">
                     <isStatic="False">
                     <returnType="Swift.Decoder">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="superDecoder">
                     <operatorKind="None">
                     <signature="func superDecoder(forKey: Self.Key) -> Swift.Decoder">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Decoder">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.KeyedEncodingContainerProtocol">
                  <func>
                     <name="codingPath">
                     <operatorKind="None">
                     <signature="func codingPath() -> Swift.Array(Swift.CodingKey)">
                     <isStatic="False">
                     <returnType="Swift.Array<Swift.CodingKey>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Swift.Int64, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Int64" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Swift.String, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.String" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Bool, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Bool" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Double, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Double" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Float, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Float" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Int, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Int" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: UInt, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": UInt" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: ???, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": ???" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: UInt, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": UInt" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Swift.Int8, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Int8" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Swift.UInt64, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UInt64" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Swift.UInt32, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UInt32" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: ???, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": ???" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Swift.UInt16, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UInt16" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Swift.Int32, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Int32" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Swift.Int16, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Int16" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Swift.Int8, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Int8" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Swift.UInt8, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UInt8" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeConditional">
                     <operatorKind="None">
                     <signature="func encodeConditional(: ???, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": ???" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Swift.UInt32?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UInt32?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Swift.UInt64?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UInt64?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Swift.Int64?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Int64?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Swift.UInt16?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UInt16?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Swift.String?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.String?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Bool?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Bool?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Double?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Double?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Float?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Float?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Int?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Int?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: UInt?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": UInt?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: ????, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": ????" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Swift.Int8?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Int8?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Swift.Int16?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Int16?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Swift.Int32?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Int32?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Swift.Int64?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Int64?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Swift.UInt8?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UInt8?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Swift.UInt16?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UInt16?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeIfPresent">
                     <operatorKind="None">
                     <signature="func encodeIfPresent(: Swift.UInt32?, forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UInt32?" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeNil">
                     <operatorKind="None">
                     <signature="func encodeNil(forKey: Self.Key)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nestedContainer">
                     <operatorKind="None">
                     <signature="func nestedContainer(keyedBy: Meta , forKey: Self.Key) -> Swift.KeyedEncodingContainer(???)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keyedBy: Meta " type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.KeyedEncodingContainer<???>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nestedUnkeyedContainer">
                     <operatorKind="None">
                     <signature="func nestedUnkeyedContainer(forKey: Self.Key) -> Swift.UnkeyedEncodingContainer">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.UnkeyedEncodingContainer">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="superEncoder">
                     <operatorKind="None">
                     <signature="func superEncoder() -> Swift.Encoder">
                     <isStatic="False">
                     <returnType="Swift.Encoder">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="superEncoder">
                     <operatorKind="None">
                     <signature="func superEncoder(forKey: Self.Key) -> Swift.Encoder">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forKey: Self.Key" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Encoder">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.LazyCollectionProtocol">
               </Protocol>
               <Protocol name="Swift.LazySequenceProtocol">
                  <func>
                     <name="elements">
                     <operatorKind="None">
                     <signature="func elements() -> Self.Elements">
                     <isStatic="False">
                     <returnType="Self.Elements">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.LosslessStringConvertible">
               </Protocol>
               <Protocol name="Swift.MirrorPath">
               </Protocol>
               <Protocol name="Swift.MutableCollection">
                  <func>
                     <name="partition">
                     <operatorKind="None">
                     <signature="func partition(by: Self.Element -> Bool) -> Self.Index">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Self.Element -> Bool" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self.Index">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subscript">
                     <operatorKind="None">
                     <signature="func subscriptSwift.Range(Self.Index) -> Self.SubSequence">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self.SubSequence">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subscript">
                     <operatorKind="None">
                     <signature="func subscript(Self.SubSequence, a: Swift.Range(Self.Index))">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self.SubSequence" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="a: Swift.Range(Self.Index)" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subscript">
                     <operatorKind="None">
                     <signature="func subscriptSelf.Index -> Self.Element">
                     <isStatic="False">
                     <returnType="Self.Element">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subscript">
                     <operatorKind="None">
                     <signature="func subscript(Self.Element, a: Self.Index)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self.Element" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="a: Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="swapAt">
                     <operatorKind="None">
                     <signature="func swapAt(Self.Index, Self.Index)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self.Index" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withContiguousMutableStorageIfAvailable">
                     <operatorKind="None">
                     <signature="func withContiguousMutableStorageIfAvailableSwift.UnsafeMutableBufferPointer(Self.Element) -> ??? -> ????">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self.Element" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<???>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Numeric">
                  <func>
                     <name="*">
                     <operatorKind="Infix">
                     <signature="func *(Self, Self) -> Self">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <operatorKind="Infix">
                     <signature="func *=(Self, Self)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="magnitude">
                     <operatorKind="None">
                     <signature="func magnitude() -> Self.Magnitude">
                     <isStatic="False">
                     <returnType="Self.Magnitude">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.OptionSet">
               </Protocol>
               <Protocol name="Swift.RandomAccessCollection">
                  <func>
                     <name="distance">
                     <operatorKind="None">
                     <signature="func distance(from: Self.Index, to: Self.Index) -> Int">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Self.Index" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <operatorKind="None">
                     <signature="func index(: Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Self.Index" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="offsetBy: Int" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="limitedBy: Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Self.Index>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <operatorKind="None">
                     <signature="func index(: Self.Index, offsetBy: Int) -> Self.Index">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Self.Index" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="offsetBy: Int" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self.Index">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.RandomNumberGenerator">
                  <func>
                     <name="next">
                     <operatorKind="None">
                     <signature="func next() -> Swift.UInt64">
                     <isStatic="False">
                     <returnType="Swift.UInt64">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.RangeExpression">
                  <func>
                     <name="contains">
                     <operatorKind="None">
                     <signature="func containsSelf.Bound -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="relative">
                     <operatorKind="None">
                     <signature="func relative(to: ???) -> Swift.Range(Self.Bound)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: ???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Range<Self.Bound>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.RangeReplaceableCollection">
                  <func>
                     <name="remove">
                     <operatorKind="None">
                     <signature="func remove(at: Self.Index) -> Self.Element">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="at: Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self.Element">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeAll">
                     <operatorKind="None">
                     <signature="func removeAll(keepingCapacity: Bool)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keepingCapacity: Bool" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeAll">
                     <operatorKind="None">
                     <signature="func removeAll(where: Self.Element -> Bool)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="where: Self.Element -> Bool" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeFirst">
                     <operatorKind="None">
                     <signature="func removeFirstInt">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeFirst">
                     <operatorKind="None">
                     <signature="func removeFirst() -> Self.Element">
                     <isStatic="False">
                     <returnType="Self.Element">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeSubrange">
                     <operatorKind="None">
                     <signature="func removeSubrangeSwift.Range(Self.Index)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self.Index" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="reserveCapacity">
                     <operatorKind="None">
                     <signature="func reserveCapacityInt">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.RawRepresentable">
                  <func>
                     <name="rawValue">
                     <operatorKind="None">
                     <signature="func rawValue() -> Self.RawValue">
                     <isStatic="False">
                     <returnType="Self.RawValue">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.SIMD">
               </Protocol>
               <Protocol name="Swift.SIMDScalar">
               </Protocol>
               <Protocol name="Swift.SIMDStorage">
                  <func>
                     <name="scalarCount">
                     <operatorKind="None">
                     <signature="func scalarCount() -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subscript">
                     <operatorKind="None">
                     <signature="func subscriptInt -> Self.Scalar">
                     <isStatic="False">
                     <returnType="Self.Scalar">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subscript">
                     <operatorKind="None">
                     <signature="func subscript(Self.Scalar, a: Int)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self.Scalar" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="a: Int" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Sequence">
                  <func>
                     <name="makeIterator">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Self.Iterator">
                     <isStatic="False">
                     <returnType="Self.Iterator">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="underestimatedCount">
                     <operatorKind="None">
                     <signature="func underestimatedCount() -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withContiguousStorageIfAvailable">
                     <operatorKind="None">
                     <signature="func withContiguousStorageIfAvailableSwift.UnsafeBufferPointer(Self.Element) -> ??? -> ????">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self.Element" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<???>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.SetAlgebra">
                  <func>
                     <name="contains">
                     <operatorKind="None">
                     <signature="func containsSelf.Element -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIntersection">
                     <operatorKind="None">
                     <signature="func formIntersectionSelf">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="intersection">
                     <operatorKind="None">
                     <signature="func intersectionSelf -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isDisjoint">
                     <operatorKind="None">
                     <signature="func isDisjoint(with: Self) -> Bool">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="with: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isEmpty">
                     <operatorKind="None">
                     <signature="func isEmpty() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isSubset">
                     <operatorKind="None">
                     <signature="func isSubset(of: Self) -> Bool">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isSuperset">
                     <operatorKind="None">
                     <signature="func isSuperset(of: Self) -> Bool">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remove">
                     <operatorKind="None">
                     <signature="func removeSelf.Element -> Self.Element?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Self.Element>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtract">
                     <operatorKind="None">
                     <signature="func subtractSelf">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtracting">
                     <operatorKind="None">
                     <signature="func subtractingSelf -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.SignedInteger">
               </Protocol>
               <Protocol name="Swift.SignedNumeric">
                  <func>
                     <name="-">
                     <operatorKind="Prefix">
                     <signature="func -Self -> Self">
                     <isStatic="True">
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="negate">
                     <operatorKind="None">
                     <signature="func negate()">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.SingleValueDecodingContainer">
                  <func>
                     <name="codingPath">
                     <operatorKind="None">
                     <signature="func codingPath() -> Swift.Array(Swift.CodingKey)">
                     <isStatic="False">
                     <returnType="Swift.Array<Swift.CodingKey>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.UInt64 -> Swift.UInt64">
                     <isStatic="False">
                     <returnType="Swift.UInt64">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.UInt32 -> Swift.UInt32">
                     <isStatic="False">
                     <returnType="Swift.UInt32">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.UInt16 -> Swift.UInt16">
                     <isStatic="False">
                     <returnType="Swift.UInt16">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.UInt8 -> Swift.UInt8">
                     <isStatic="False">
                     <returnType="Swift.UInt8">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.Int64 -> Swift.Int64">
                     <isStatic="False">
                     <returnType="Swift.Int64">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.Int32 -> Swift.Int32">
                     <isStatic="False">
                     <returnType="Swift.Int32">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.Int16 -> Swift.Int16">
                     <isStatic="False">
                     <returnType="Swift.Int16">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.Int8 -> Swift.Int8">
                     <isStatic="False">
                     <returnType="Swift.Int8">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta  -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.String -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeNil">
                     <operatorKind="None">
                     <signature="func decodeNil() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.SingleValueEncodingContainer">
                  <func>
                     <name="codingPath">
                     <operatorKind="None">
                     <signature="func codingPath() -> Swift.Array(Swift.CodingKey)">
                     <isStatic="False">
                     <returnType="Swift.Array<Swift.CodingKey>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.Int16">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.Int32">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.Int64">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.UInt8">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.UInt16">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.UInt32">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.UInt64">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.Int16">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.Int8">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode???">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeUInt">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeInt">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeFloat">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeDouble">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeBool">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.String">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeNil">
                     <operatorKind="None">
                     <signature="func encodeNil()">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.Strideable">
                  <func>
                     <name="advanced">
                     <operatorKind="None">
                     <signature="func advanced(by: Self.Stride) -> Self">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Self.Stride" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <operatorKind="None">
                     <signature="func distance(to: Self) -> Self.Stride">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Self" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self.Stride">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.StringInterpolationProtocol">
                  <func>
                     <name="appendLiteral">
                     <operatorKind="None">
                     <signature="func appendLiteralSelf.StringLiteralType">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.StringProtocol">
                  <func>
                     <name="hasPrefix">
                     <operatorKind="None">
                     <signature="func hasPrefixSwift.String -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hasSuffix">
                     <operatorKind="None">
                     <signature="func hasSuffixSwift.String -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="lowercased">
                     <operatorKind="None">
                     <signature="func lowercased() -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="unicodeScalars">
                     <operatorKind="None">
                     <signature="func unicodeScalars() -> Self.UnicodeScalarView">
                     <isStatic="False">
                     <returnType="Self.UnicodeScalarView">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="uppercased">
                     <operatorKind="None">
                     <signature="func uppercased() -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="utf16">
                     <operatorKind="None">
                     <signature="func utf16() -> Self.UTF16View">
                     <isStatic="False">
                     <returnType="Self.UTF16View">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="utf8">
                     <operatorKind="None">
                     <signature="func utf8() -> Self.UTF8View">
                     <isStatic="False">
                     <returnType="Self.UTF8View">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withCString">
                     <operatorKind="None">
                     <signature="func withCString(encodedAs: Meta , : Swift.UnsafePointer(???B1.CodeUnit) -> ???) -> ???">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="encodedAs: Meta " type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UnsafePointer(???B1.CodeUnit) -> ???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="???">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withCString">
                     <operatorKind="None">
                     <signature="func withCStringSwift.UnsafePointer(Swift.Int8) -> ??? -> ???">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="???">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withCString">
                     <operatorKind="None">
                     <signature="func withCString(encodedAs: Meta , : Swift.UnsafePointer(???B1.CodeUnit) -> ???) -> ???">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="encodedAs: Meta " type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UnsafePointer(???B1.CodeUnit) -> ???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="???">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.TextOutputStream">
                  <func>
                     <name="write">
                     <operatorKind="None">
                     <signature="func writeSwift.String">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.TextOutputStreamable">
                  <func>
                     <name="write">
                     <operatorKind="None">
                     <signature="func write(to: ???)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: ???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.UnicodeCodec">
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decode??? -> Swift.UnicodeDecodingResult">
                     <isStatic="False">
                     <returnType="Swift.UnicodeDecodingResult">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(: Swift.Unicode.Scalar, into: Self.CodeUnit)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Unicode.Scalar" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Self.CodeUnit" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.UnkeyedDecodingContainer">
                  <func>
                     <name="codingPath">
                     <operatorKind="None">
                     <signature="func codingPath() -> Swift.Array(Swift.CodingKey)">
                     <isStatic="False">
                     <returnType="Swift.Array<Swift.CodingKey>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="count">
                     <operatorKind="None">
                     <signature="func count() -> Int?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Int>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="currentIndex">
                     <operatorKind="None">
                     <signature="func currentIndex() -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.UInt8 -> Swift.UInt8">
                     <isStatic="False">
                     <returnType="Swift.UInt8">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.String -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta  -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.Int8 -> Swift.Int8">
                     <isStatic="False">
                     <returnType="Swift.Int8">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.Int16 -> Swift.Int16">
                     <isStatic="False">
                     <returnType="Swift.Int16">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.Int32 -> Swift.Int32">
                     <isStatic="False">
                     <returnType="Swift.Int32">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.Int64 -> Swift.Int64">
                     <isStatic="False">
                     <returnType="Swift.Int64">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.UInt16 -> Swift.UInt16">
                     <isStatic="False">
                     <returnType="Swift.UInt16">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.UInt32 -> Swift.UInt32">
                     <isStatic="False">
                     <returnType="Swift.UInt32">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.UInt64 -> Swift.UInt64">
                     <isStatic="False">
                     <returnType="Swift.UInt64">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.Int16 -> Swift.Int16">
                     <isStatic="False">
                     <returnType="Swift.Int16">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decode">
                     <operatorKind="None">
                     <signature="func decodeMeta Swift.UInt16 -> Swift.UInt16">
                     <isStatic="False">
                     <returnType="Swift.UInt16">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresentMeta Swift.UInt64 -> Swift.UInt64?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.UInt64>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresentMeta Swift.UInt8 -> Swift.UInt8?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.UInt8>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresentMeta Swift.UInt16 -> Swift.UInt16?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.UInt16>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresentMeta Swift.String -> Swift.String?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.String>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresentMeta  -> ????">
                     <isStatic="False">
                     <returnType="Swift.Optional<???>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresentMeta Swift.Int8 -> Swift.Int8?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.Int8>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresentMeta Swift.UInt32 -> Swift.UInt32?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.UInt32>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresentMeta Swift.Int16 -> Swift.Int16?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.Int16>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresentMeta Swift.Int32 -> Swift.Int32?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.Int32>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresentMeta Swift.Int64 -> Swift.Int64?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.Int64>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresentMeta Swift.UInt8 -> Swift.UInt8?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.UInt8>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresentMeta Swift.UInt16 -> Swift.UInt16?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.UInt16>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresentMeta Swift.Int16 -> Swift.Int16?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.Int16>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeIfPresent">
                     <operatorKind="None">
                     <signature="func decodeIfPresentMeta Swift.UInt32 -> Swift.UInt32?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.UInt32>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="decodeNil">
                     <operatorKind="None">
                     <signature="func decodeNil() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isAtEnd">
                     <operatorKind="None">
                     <signature="func isAtEnd() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nestedContainer">
                     <operatorKind="None">
                     <signature="func nestedContainer(keyedBy: Meta ) -> Swift.KeyedDecodingContainer(???)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keyedBy: Meta " type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.KeyedDecodingContainer<???>">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nestedUnkeyedContainer">
                     <operatorKind="None">
                     <signature="func nestedUnkeyedContainer() -> Swift.UnkeyedDecodingContainer">
                     <isStatic="False">
                     <returnType="Swift.UnkeyedDecodingContainer">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="superDecoder">
                     <operatorKind="None">
                     <signature="func superDecoder() -> Swift.Decoder">
                     <isStatic="False">
                     <returnType="Swift.Decoder">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.UnkeyedEncodingContainer">
                  <func>
                     <name="codingPath">
                     <operatorKind="None">
                     <signature="func codingPath() -> Swift.Array(Swift.CodingKey)">
                     <isStatic="False">
                     <returnType="Swift.Array<Swift.CodingKey>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="count">
                     <operatorKind="None">
                     <signature="func count() -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(contentsOf: ???)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="contentsOf: ???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeDouble">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeBool">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.String">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeFloat">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(contentsOf: ???)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="contentsOf: ???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.String">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeFloat">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeUInt">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeInt">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.UInt16">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeUInt">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode???">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.Int8">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.Int16">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.Int32">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.Int64">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeInt">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(contentsOf: ???)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="contentsOf: ???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.UInt64">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.UInt32">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.UInt16">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(contentsOf: ???)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="contentsOf: ???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.UInt8">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encode(contentsOf: ???)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="contentsOf: ???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <operatorKind="None">
                     <signature="func encodeSwift.UInt8">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeConditional">
                     <operatorKind="None">
                     <signature="func encodeConditional???">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encodeNil">
                     <operatorKind="None">
                     <signature="func encodeNil()">
                     <isStatic="False">
                     <returnType="()">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nestedContainer">
                     <operatorKind="None">
                     <signature="func nestedContainer(keyedBy: Meta ) -> Swift.KeyedEncodingContainer(???)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="keyedBy: Meta " type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.KeyedEncodingContainer<???>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nestedUnkeyedContainer">
                     <operatorKind="None">
                     <signature="func nestedUnkeyedContainer() -> Swift.UnkeyedEncodingContainer">
                     <isStatic="False">
                     <returnType="Swift.UnkeyedEncodingContainer">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="superEncoder">
                     <operatorKind="None">
                     <signature="func superEncoder() -> Swift.Encoder">
                     <isStatic="False">
                     <returnType="Swift.Encoder">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Swift.UnsignedInteger">
               </Protocol>
            </innerprotocols>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftCoreGraphics" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="CoreGraphics.CGAffineTransform">
               </Struct>
               <Struct name="CoreGraphics.CGFloat">
                  <property>
                     <name="binade">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="bitPattern">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="exponent">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="exponentBitCount">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="exponentBitPattern">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="floatingPointClass">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="greatestFiniteMagnitude">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="infinity">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isCanonical">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isFinite">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isInfinite">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isNaN">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isNormal">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSignaling">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSignalingNaN">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSubnormal">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isZero">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leastNonzeroMagnitude">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="leastNormalMagnitude">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="magnitude">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="max">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="min">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nan">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="native">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nextUp">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="pi">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="quietNaN">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="sign">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="signalingNaN">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significand">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significandBitCount">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significandBitPattern">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="significandWidth">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ulp">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(CoreGraphics.CGFloat, CoreGraphics.CGFloat) -> CoreGraphics.CGFloat">
                     <isStatic="True">
                     <returnType="CoreGraphics.CGFloat">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="*=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *=(CoreGraphics.CGFloat, CoreGraphics.CGFloat)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(CoreGraphics.CGFloat, CoreGraphics.CGFloat) -> CoreGraphics.CGFloat">
                     <isStatic="True">
                     <returnType="CoreGraphics.CGFloat">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(CoreGraphics.CGFloat, CoreGraphics.CGFloat)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(CoreGraphics.CGFloat, CoreGraphics.CGFloat) -> CoreGraphics.CGFloat">
                     <isStatic="True">
                     <returnType="CoreGraphics.CGFloat">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(CoreGraphics.CGFloat, CoreGraphics.CGFloat)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(CoreGraphics.CGFloat, CoreGraphics.CGFloat) -> CoreGraphics.CGFloat">
                     <isStatic="True">
                     <returnType="CoreGraphics.CGFloat">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /=(CoreGraphics.CGFloat, CoreGraphics.CGFloat)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addProduct">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addProduct(CoreGraphics.CGFloat, CoreGraphics.CGFloat)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="advanced">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func advanced(by: CoreGraphics.CGFloat) -> CoreGraphics.CGFloat">
                     <isStatic="False">
                     <returnType="CoreGraphics.CGFloat">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(to: CoreGraphics.CGFloat) -> CoreGraphics.CGFloat">
                     <isStatic="False">
                     <returnType="CoreGraphics.CGFloat">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formRemainder">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formRemainder(dividingBy: CoreGraphics.CGFloat)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formSquareRoot">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formSquareRoot()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formTruncatingRemainder">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formTruncatingRemainder(dividingBy: CoreGraphics.CGFloat)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="dividingBy: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isEqual">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isEqual(to: CoreGraphics.CGFloat) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isLess">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isLess(than: CoreGraphics.CGFloat) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="than: CoreGraphics.CGFloat" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isLessThanOrEqualTo">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isLessThanOrEqualToCoreGraphics.CGFloat -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="negate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func negate()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="round">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func roundSwift.FloatingPointRoundingRule">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="CoreGraphics.CGPoint">
               </Struct>
               <Struct name="CoreGraphics.CGRect">
               </Struct>
               <Struct name="CoreGraphics.CGSize">
               </Struct>
               <Struct name="CoreGraphics.CGVector">
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="CoreGraphics.CGPathFillRule">
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftOSLogTestHelper" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="OSLogTestHelper.OSLogArguments">
                  <property>
                     <name="argumentClosures">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="append">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func append() -> Swift.String">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="OSLogTestHelper.OSLogIntegerFormatting">
                  <property>
                     <name="decimal">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="explicitPositiveSign">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hex">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="includePrefix">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="minDigits">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="octal">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="radix">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="uppercase">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="decimal">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func decimal(explicitPositiveSign: Bool) -> OSLogTestHelper.OSLogIntegerFormatting">
                     <isStatic="True">
                     <returnType="OSLogTestHelper.OSLogIntegerFormatting">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="explicitPositiveSign: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formatSpecifier">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formatSpecifier(for: Meta , align: OSLogTestHelper.OSLogStringAlignment, privacy: OSLogTestHelper.OSLogPrivacy) -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="for: Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="align: OSLogTestHelper.OSLogStringAlignment" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formatSpecifierLengthModifier">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func formatSpecifierLengthModifierMeta  -> Swift.String?">
                     <isStatic="True">
                     <returnType="Swift.Optional<Swift.String>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func hex(explicitPositiveSign: Bool, includePrefix: Bool, uppercase: Bool) -> OSLogTestHelper.OSLogIntegerFormatting">
                     <isStatic="True">
                     <returnType="OSLogTestHelper.OSLogIntegerFormatting">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="explicitPositiveSign: Bool" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="includePrefix: Bool" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="uppercase: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="octal">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func octal(explicitPositiveSign: Bool, includePrefix: Bool, uppercase: Bool) -> OSLogTestHelper.OSLogIntegerFormatting">
                     <isStatic="True">
                     <returnType="OSLogTestHelper.OSLogIntegerFormatting">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="explicitPositiveSign: Bool" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="includePrefix: Bool" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="uppercase: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="OSLogTestHelper.OSLogInterpolation">
                  <property>
                     <name="argumentCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="arguments">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="formatString">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="preamble">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="totalBytesForSerializingArguments">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="addDoubleHeaders">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addDoubleHeadersOSLogTestHelper.OSLogPrivacy">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addIntHeaders">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addIntHeaders(OSLogTestHelper.OSLogPrivacy, Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addNSObjectHeaders">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addNSObjectHeadersOSLogTestHelper.OSLogPrivacy">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addStringHeaders">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addStringHeadersOSLogTestHelper.OSLogPrivacy">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="appendInteger">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func appendInteger(: () -> Self, format: OSLogTestHelper.OSLogIntegerFormatting, align: OSLogTestHelper.OSLogStringAlignment, privacy: OSLogTestHelper.OSLogPrivacy)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": () -> Self" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="format: OSLogTestHelper.OSLogIntegerFormatting" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="align: OSLogTestHelper.OSLogStringAlignment" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="appendLiteral">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func appendLiteralSwift.String">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="appendPrecisionArgument">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func appendPrecisionArgument() -> Int">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="getArgumentHeader">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func getArgumentHeader(privacy: OSLogTestHelper.OSLogPrivacy, type: OSLogTestHelper.OSLogInterpolation.ArgumentType) -> Swift.UInt8">
                     <isStatic="False">
                     <returnType="Swift.UInt8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="type: OSLogTestHelper.OSLogInterpolation.ArgumentType" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="getArugmentFlag">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func getArugmentFlagOSLogTestHelper.OSLogPrivacy -> OSLogTestHelper.OSLogInterpolation.ArgumentFlag">
                     <isStatic="False">
                     <returnType="OSLogTestHelper.OSLogInterpolation.ArgumentFlag">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="getDoubleFormatSpecifier">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func getDoubleFormatSpecifier(privacy: OSLogTestHelper.OSLogPrivacy) -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="getNSObjectFormatSpecifier">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func getNSObjectFormatSpecifierOSLogTestHelper.OSLogPrivacy -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="getStringFormatSpecifier">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func getStringFormatSpecifier(OSLogTestHelper.OSLogStringAlignment, OSLogTestHelper.OSLogPrivacy) -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="OSLogTestHelper.OSLogStringAlignment" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="getUpdatedPreamble">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func getUpdatedPreamble(privacy: OSLogTestHelper.OSLogPrivacy, isScalar: Bool) -> Swift.UInt8">
                     <isStatic="False">
                     <returnType="Swift.UInt8">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="privacy: OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="isScalar: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="OSLogTestHelper.OSLogMessage">
                  <property>
                     <name="bufferSize">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="interpolation">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="OSLogTestHelper.OSLogStringAlignment">
                  <property>
                     <name="anchor">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="left">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="minimumColumnWidth">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="none">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="right">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="OSLogTestHelper.OSLogCollectionBound">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(OSLogTestHelper.OSLogCollectionBound, OSLogTestHelper.OSLogCollectionBound) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="OSLogTestHelper.OSLogCollectionBound" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="OSLogTestHelper.OSLogCollectionBound" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="OSLogTestHelper.OSLogInterpolation.ArgumentFlag">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(OSLogTestHelper.OSLogInterpolation.ArgumentFlag, OSLogTestHelper.OSLogInterpolation.ArgumentFlag) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="OSLogTestHelper.OSLogInterpolation.ArgumentFlag" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="OSLogTestHelper.OSLogInterpolation.ArgumentFlag" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="OSLogTestHelper.OSLogInterpolation.ArgumentType">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(OSLogTestHelper.OSLogInterpolation.ArgumentType, OSLogTestHelper.OSLogInterpolation.ArgumentType) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="OSLogTestHelper.OSLogInterpolation.ArgumentType" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="OSLogTestHelper.OSLogInterpolation.ArgumentType" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="OSLogTestHelper.OSLogInterpolation.PreambleBitMask">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(OSLogTestHelper.OSLogInterpolation.PreambleBitMask, OSLogTestHelper.OSLogInterpolation.PreambleBitMask) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="OSLogTestHelper.OSLogInterpolation.PreambleBitMask" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="OSLogTestHelper.OSLogInterpolation.PreambleBitMask" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="OSLogTestHelper.OSLogPrivacy">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(OSLogTestHelper.OSLogPrivacy, OSLogTestHelper.OSLogPrivacy) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="OSLogTestHelper.OSLogPrivacy" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftStdlibUnittestFoundationExtras" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftRemoteMirror" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftCoreFoundation" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftReflectionTest" swiftVersion="??">
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="SwiftReflectionTest.InstanceKind">
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftDarwin" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="Darwin.DarwinBoolean">
                  <property>
                     <name="boolValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Darwin.DarwinBoolean, Darwin.DarwinBoolean) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Darwin.DarwinBoolean" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Darwin.DarwinBoolean" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="Darwin.MachErrorCode">
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Enum>
               <Enum name="Darwin.POSIXErrorCode">
                  <property>
                     <name="ELAST">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EWOULDBLOCK">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftStdlibUnittest" swiftVersion="??">
         <typedeclaration kind="class" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerclasses>
               <Class name="StdlibUnittest.Box">
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Class>
               <Class name="StdlibUnittest.GenericMinimalHashableClass">
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="identity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(StdlibUnittest.GenericMinimalHashableClass(???), StdlibUnittest.GenericMinimalHashableClass(???)) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.GenericMinimalHashableClass(???)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.GenericMinimalHashableClass(???)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Class>
               <Class name="StdlibUnittest.LifetimeTracked">
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="identity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="instances">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="serialNumber">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(StdlibUnittest.LifetimeTracked, StdlibUnittest.LifetimeTracked) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.LifetimeTracked" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.LifetimeTracked" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="advanced">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func advanced(by: Int) -> StdlibUnittest.LifetimeTracked">
                     <isStatic="False">
                     <returnType="StdlibUnittest.LifetimeTracked">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(to: StdlibUnittest.LifetimeTracked) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: StdlibUnittest.LifetimeTracked" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Class>
               <Class name="StdlibUnittest.MinimalHashableClass">
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="equalImpl">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashIntoImpl">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="identity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timesEqualEqualWasCalled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timesHashIntoWasCalled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(StdlibUnittest.MinimalHashableClass, StdlibUnittest.MinimalHashableClass) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.MinimalHashableClass" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.MinimalHashableClass" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Class>
               <Class name="StdlibUnittest.ResettableValue">
                  <property>
                     <name="defaultValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="reset">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reset()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Class>
               <Class name="StdlibUnittest.TestSuite">
                  <func>
                     <name="setUp">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func setUp()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="tearDown">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func tearDown()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Class>
               <Class name="StdlibUnittest.TypeIndexed">
                  <func>
                     <name="reset">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reset()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Class>
            </innerclasses>
         </typedeclaration>
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="StdlibUnittest.AssertionResult">
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="withDescription">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func withDescriptionSwift.String -> StdlibUnittest.AssertionResult">
                     <isStatic="False">
                     <returnType="StdlibUnittest.AssertionResult">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.CustomPrintableValue">
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescriptionImpl">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="descriptionImpl">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="identity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timesDebugDescriptionWasCalled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timesDescriptionWasCalled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="advanced">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func advanced(by: Int) -> StdlibUnittest.CustomPrintableValue">
                     <isStatic="False">
                     <returnType="StdlibUnittest.CustomPrintableValue">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(to: StdlibUnittest.CustomPrintableValue) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: StdlibUnittest.CustomPrintableValue" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.GenericMinimalHashableValue">
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="identity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(StdlibUnittest.GenericMinimalHashableValue(???), StdlibUnittest.GenericMinimalHashableValue(???)) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.GenericMinimalHashableValue(???)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.GenericMinimalHashableValue(???)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.LinearCongruentialGenerator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Swift.UInt64">
                     <isStatic="False">
                     <returnType="Swift.UInt64">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.MinimalComparableValue">
                  <property>
                     <name="equalImpl">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="identity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lessImpl">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timesEqualEqualWasCalled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timesLessWasCalled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(StdlibUnittest.MinimalComparableValue, StdlibUnittest.MinimalComparableValue) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.MinimalComparableValue" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.MinimalComparableValue" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(StdlibUnittest.MinimalComparableValue, StdlibUnittest.MinimalComparableValue) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.MinimalComparableValue" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.MinimalComparableValue" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.MinimalEquatableValue">
                  <property>
                     <name="equalImpl">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="identity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timesEqualEqualWasCalled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(StdlibUnittest.MinimalEquatableValue, StdlibUnittest.MinimalEquatableValue) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.MinimalEquatableValue" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.MinimalEquatableValue" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.MinimalHashableValue">
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="equalImpl">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashIntoImpl">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="identity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timesEqualEqualWasCalled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timesHashIntoWasCalled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(StdlibUnittest.MinimalHashableValue, StdlibUnittest.MinimalHashableValue) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.MinimalHashableValue" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.MinimalHashableValue" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.MinimalStrideableValue">
                  <property>
                     <name="equalImpl">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="identity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lessImpl">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timesAdvancedWasCalled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timesDistanceWasCalled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timesEqualEqualWasCalled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timesLessWasCalled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(StdlibUnittest.MinimalStrideableValue, StdlibUnittest.MinimalStrideableValue) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(StdlibUnittest.MinimalStrideableValue, StdlibUnittest.MinimalStrideableValue) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="advanced">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func advanced(by: Int) -> StdlibUnittest.MinimalStrideableValue">
                     <isStatic="False">
                     <returnType="StdlibUnittest.MinimalStrideableValue">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(to: StdlibUnittest.MinimalStrideableValue) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: StdlibUnittest.MinimalStrideableValue" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.Observation1UInt">
                  <property>
                     <name="data1">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="StdlibUnittest.Observation3Int">
                  <property>
                     <name="data1">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data2">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data3">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="StdlibUnittest.Observation4Int">
                  <property>
                     <name="data1">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data2">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data3">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data4">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="StdlibUnittest.Observation4UInt">
                  <property>
                     <name="data1">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data2">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data3">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data4">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="StdlibUnittest.Observation5Int">
                  <property>
                     <name="data1">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data2">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data3">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data4">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data5">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="StdlibUnittest.Observation9Int">
                  <property>
                     <name="data1">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data2">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data3">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data4">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data5">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data6">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data7">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data8">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data9">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="StdlibUnittest.OpaqueValue">
                  <property>
                     <name="identity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="StdlibUnittest.SourceLoc">
                  <property>
                     <name="comment">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="file">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="line">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="withCurrentLoc">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func withCurrentLoc(: Swift.String, line: UInt) -> StdlibUnittest.SourceLocStack">
                     <isStatic="False">
                     <returnType="StdlibUnittest.SourceLocStack">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="line: UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.SourceLocStack">
                  <func>
                     <name="print">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func print()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="pushIf">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func pushIf(: Bool, file: Swift.String, line: UInt) -> StdlibUnittest.SourceLocStack">
                     <isStatic="False">
                     <returnType="StdlibUnittest.SourceLocStack">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Bool" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="file: Swift.String" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="line: UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="with">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func withStdlibUnittest.SourceLoc -> StdlibUnittest.SourceLocStack">
                     <isStatic="False">
                     <returnType="StdlibUnittest.SourceLocStack">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withCurrentLoc">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func withCurrentLoc(file: Swift.String, line: UInt) -> StdlibUnittest.SourceLocStack">
                     <isStatic="False">
                     <returnType="StdlibUnittest.SourceLocStack">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="file: Swift.String" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="line: UInt" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="StdlibUnittest.TypeIdentifier">
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="StdlibUnittest.ExpectedComparisonResult">
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(StdlibUnittest.ExpectedComparisonResult, StdlibUnittest.ExpectedComparisonResult) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.ExpectedComparisonResult" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.ExpectedComparisonResult" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="flip">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func flip() -> StdlibUnittest.ExpectedComparisonResult">
                     <isStatic="False">
                     <returnType="StdlibUnittest.ExpectedComparisonResult">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isEQ">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isEQ() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isGE">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isGE() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isGT">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isGT() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isLE">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isLE() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isLT">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isLT() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isNE">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isNE() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="StdlibUnittest.OSVersion">
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Enum>
               <Enum name="StdlibUnittest.RaceTestObservationEvaluation">
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Enum>
               <Enum name="StdlibUnittest.SwiftRuntime">
                  <func>
                     <name="metadataKind">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func metadataKind(of: Self) -> Swift.String">
                     <isStatic="True">
                     <returnType="Swift.String">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Self" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="StdlibUnittest.TestRunPredicate">
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="evaluate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func evaluate() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
            </innerenums>
         </typedeclaration>
         <typedeclaration kind="protocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerprotocols>
               <Protocol name="StdlibUnittest.RaceTestWithPerTrialData">
                  <func>
                     <name="evaluateObservations">
                     <operatorKind="None">
                     <signature="func evaluateObservations(Swift.Array(Self.Observation), StdlibUnittest.RaceTestObservationEvaluation)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Array(Self.Observation)" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="StdlibUnittest.RaceTestObservationEvaluation" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeRaceData">
                     <operatorKind="None">
                     <signature="func makeRaceData() -> Self.RaceData">
                     <isStatic="False">
                     <returnType="Self.RaceData">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeThreadLocalData">
                     <operatorKind="None">
                     <signature="func makeThreadLocalData() -> Self.ThreadLocalData">
                     <isStatic="False">
                     <returnType="Self.ThreadLocalData">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="thread1">
                     <operatorKind="None">
                     <signature="func thread1(Self.RaceData, Self.ThreadLocalData) -> Self.Observation">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self.RaceData" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Self.ThreadLocalData" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Self.Observation">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
            </innerprotocols>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftPrivateLibcExtras" swiftVersion="??">
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="SwiftPrivateLibcExtras.ProcessTerminationStatus">
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftDifferentiationUnittest" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="DifferentiationUnittest.Tracked">
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
            </innerstructs>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftRuntimeUnittest" swiftVersion="??">
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="RuntimeUnittest.SwiftRuntimeUnitTest">
                  <func>
                     <name="testExclusivityBogusPC">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func testExclusivityBogusPC()">
                     <isStatic="True">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="testExclusivityNonNestedPC">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func testExclusivityNonNestedPC()">
                     <isStatic="True">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="testExclusivityNullPC">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func testExclusivityNullPC()">
                     <isStatic="True">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="testExclusivityPCOne">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func testExclusivityPCOne()">
                     <isStatic="True">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
            </innerenums>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftPrivateThreadExtras" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswift_Differentiation" swiftVersion="??">
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="Swift.Array">
               </Struct>
               <Struct name="Swift.Double">
               </Struct>
               <Struct name="Swift.Float">
               </Struct>
               <Struct name="Swift.Float16">
               </Struct>
            </innerstructs>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftPrivate" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftFoundation" swiftVersion="??">
         <typedeclaration kind="class" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerclasses>
               <Class name="Foundation.Data.RangeReference">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lowerBound">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="range">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="upperBound">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Class>
               <Class name="Foundation.JSONDecoder">
                  <property>
                     <name="dataDecodingStrategy">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="dateDecodingStrategy">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="keyDecodingStrategy">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nonConformingFloatDecodingStrategy">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userInfo">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="decode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func decode(: Meta , from: Foundation.Data) -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Meta " type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Foundation.Data" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Class>
               <Class name="Foundation.JSONEncoder">
                  <property>
                     <name="dataEncodingStrategy">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="dateEncodingStrategy">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="keyEncodingStrategy">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nonConformingFloatEncodingStrategy">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="outputFormatting">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userInfo">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encodeSelf -> Foundation.Data">
                     <isStatic="False">
                     <returnType="Foundation.Data">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Class>
               <Class name="Foundation.NSKeyValueObservation">
                  <func>
                     <name="invalidate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func invalidate()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Class>
               <Class name="Foundation.NSURL">
               </Class>
               <Class name="Foundation.PropertyListDecoder">
                  <property>
                     <name="userInfo">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Class>
               <Class name="Foundation.PropertyListEncoder">
                  <property>
                     <name="userInfo">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encodeSelf -> Foundation.Data">
                     <isStatic="False">
                     <returnType="Foundation.Data">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Class>
            </innerclasses>
         </typedeclaration>
         <typedeclaration kind="struct" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerstructs>
               <Struct name="CoreGraphics.CGAffineTransform">
               </Struct>
               <Struct name="CoreGraphics.CGFloat">
               </Struct>
               <Struct name="CoreGraphics.CGPoint">
               </Struct>
               <Struct name="CoreGraphics.CGRect">
               </Struct>
               <Struct name="CoreGraphics.CGSize">
               </Struct>
               <Struct name="CoreGraphics.CGVector">
               </Struct>
               <Struct name="Dispatch.DispatchData">
               </Struct>
               <Struct name="Dispatch.DispatchData">
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="regions">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="withUnsafeBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafeRawBufferPointer -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.Calendar">
                  <property>
                     <name="amSymbol">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="autoupdatingCurrent">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="current">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="eraSymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="firstWeekday">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="identifier">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="locale">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="longEraSymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="minimumDaysInFirstWeek">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="monthSymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="pmSymbol">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="quarterSymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="shortMonthSymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="shortQuarterSymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="shortStandaloneMonthSymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="shortStandaloneQuarterSymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="shortStandaloneWeekdaySymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="shortWeekdaySymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="standaloneMonthSymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="standaloneQuarterSymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="standaloneWeekdaySymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timeZone">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="veryShortMonthSymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="veryShortStandaloneMonthSymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="veryShortStandaloneWeekdaySymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="veryShortWeekdaySymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="weekdaySymbols">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.Calendar, Foundation.Calendar) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Calendar" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Calendar" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="compare">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func compare(: Foundation.Date, to: Foundation.Date, toGranularity: Foundation.Calendar.Component) -> Foundation.NSComparisonResult">
                     <isStatic="False">
                     <returnType="Foundation.NSComparisonResult">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="toGranularity: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="component">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func component(: Foundation.Calendar.Component, from: Foundation.Date) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="components">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func components(in: Foundation.TimeZone, from: Foundation.Date) -> Foundation.DateComponents">
                     <isStatic="False">
                     <returnType="Foundation.DateComponents">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: Foundation.TimeZone" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="date">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func date(bySettingHour: Int, minute: Int, second: Int, of: Foundation.Date, matchingPolicy: Foundation.Calendar.MatchingPolicy, repeatedTimePolicy: Foundation.Calendar.RepeatedTimePolicy, direction: Foundation.Calendar.SearchDirection) -> Foundation.Date?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Foundation.Date>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="bySettingHour: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="minute: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="second: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="matchingPolicy: Foundation.Calendar.MatchingPolicy" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="repeatedTimePolicy: Foundation.Calendar.RepeatedTimePolicy" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="direction: Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dateComponents">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dateComponents(in: Foundation.TimeZone, from: Foundation.Date) -> Foundation.DateComponents">
                     <isStatic="False">
                     <returnType="Foundation.DateComponents">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: Foundation.TimeZone" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dateInterval">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dateInterval(of: Foundation.Calendar.Component, for: Foundation.Date) -> Foundation.DateInterval?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Foundation.DateInterval>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dateIntervalOfWeekend">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dateIntervalOfWeekend(containing: Foundation.Date, start: Foundation.Date, interval: Double) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="containing: Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="start: Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="interval: Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="enumerateDates">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func enumerateDates(startingAfter: Foundation.Date, matching: Foundation.DateComponents, matchingPolicy: Foundation.Calendar.MatchingPolicy, repeatedTimePolicy: Foundation.Calendar.RepeatedTimePolicy, direction: Foundation.Calendar.SearchDirection, using: (Foundation.Date?, Bool, Bool))">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="startingAfter: Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="matching: Foundation.DateComponents" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="matchingPolicy: Foundation.Calendar.MatchingPolicy" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="repeatedTimePolicy: Foundation.Calendar.RepeatedTimePolicy" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="direction: Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="using: (Foundation.Date? Bool Bool)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="getEra">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func getEra(: Swift.UnsafeMutablePointer(Int)?, yearForWeekOfYear: Swift.UnsafeMutablePointer(Int)?, weekOfYear: Swift.UnsafeMutablePointer(Int)?, weekday: Swift.UnsafeMutablePointer(Int)?, from: Foundation.Date)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="yearForWeekOfYear: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="weekOfYear: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="weekday: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="getHour">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func getHour(: Swift.UnsafeMutablePointer(Int)?, minute: Swift.UnsafeMutablePointer(Int)?, second: Swift.UnsafeMutablePointer(Int)?, nanosecond: Swift.UnsafeMutablePointer(Int)?, from: Foundation.Date)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="minute: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="second: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="nanosecond: Swift.UnsafeMutablePointer(Int)?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isDate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isDate(: Foundation.Date, inSameDayAs: Foundation.Date) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="inSameDayAs: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isDateInToday">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isDateInTodayFoundation.Date -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isDateInTomorrow">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isDateInTomorrowFoundation.Date -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isDateInWeekend">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isDateInWeekendFoundation.Date -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isDateInYesterday">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isDateInYesterdayFoundation.Date -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="maximumRange">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func maximumRange(of: Foundation.Calendar.Component) -> Swift.Range(Int)?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.Range<Int>>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="minimumRange">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func minimumRange(of: Foundation.Calendar.Component) -> Swift.Range(Int)?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.Range<Int>>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nextWeekend">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func nextWeekend(startingAfter: Foundation.Date, start: Foundation.Date, interval: Double, direction: Foundation.Calendar.SearchDirection) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="startingAfter: Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="start: Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="interval: Double" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="direction: Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="ordinality">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func ordinality(of: Foundation.Calendar.Component, in: Foundation.Calendar.Component, for: Foundation.Date) -> Int?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Int>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="startOfDay">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func startOfDay(for: Foundation.Date) -> Foundation.Date">
                     <isStatic="False">
                     <returnType="Foundation.Date">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.CharacterSet">
                  <property>
                     <name="alphanumerics">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="bitmapRepresentation">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="capitalizedLetters">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="controlCharacters">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="decimalDigits">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="decomposables">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="illegalCharacters">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="inverted">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="letters">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lowercaseLetters">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="newlines">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nonBaseCharacters">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="punctuation">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="punctuationCharacters">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="symbols">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="uppercaseLetters">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="urlFragmentAllowed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="urlHostAllowed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="urlPasswordAllowed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="urlPathAllowed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="urlQueryAllowed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="urlUserAllowed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="whitespaces">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="whitespacesAndNewlines">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.CharacterSet, Foundation.CharacterSet) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.CharacterSet" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.CharacterSet" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="contains">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func containsSwift.Unicode.Scalar -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIntersection">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIntersectionFoundation.CharacterSet">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formSymmetricDifference">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formSymmetricDifferenceFoundation.CharacterSet">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formUnion">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formUnionFoundation.CharacterSet">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hasMember">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hasMember(inPlane: Swift.UInt8) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="inPlane: Swift.UInt8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="insert">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func insert(charactersIn: Swift.ClosedRange(Swift.Unicode.Scalar))">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="charactersIn: Swift.ClosedRange(Swift.Unicode.Scalar)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="intersection">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func intersectionFoundation.CharacterSet -> Foundation.CharacterSet">
                     <isStatic="False">
                     <returnType="Foundation.CharacterSet">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="invert">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func invert()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isSuperset">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isSuperset(of: Foundation.CharacterSet) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Foundation.CharacterSet" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remove">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remove(charactersIn: Swift.ClosedRange(Swift.Unicode.Scalar))">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="charactersIn: Swift.ClosedRange(Swift.Unicode.Scalar)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtract">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subtractFoundation.CharacterSet">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subtracting">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subtractingFoundation.CharacterSet -> Foundation.CharacterSet">
                     <isStatic="False">
                     <returnType="Foundation.CharacterSet">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="symmetricDifference">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func symmetricDifferenceFoundation.CharacterSet -> Foundation.CharacterSet">
                     <isStatic="False">
                     <returnType="Foundation.CharacterSet">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="union">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func unionFoundation.CharacterSet -> Foundation.CharacterSet">
                     <isStatic="False">
                     <returnType="Foundation.CharacterSet">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="update">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func update(with: Swift.Unicode.Scalar) -> Swift.Unicode.Scalar?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.Unicode.Scalar>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="with: Swift.Unicode.Scalar" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.CocoaError">
                  <property>
                     <name="coderInvalidValue">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="coderReadCorrupt">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="coderReadCorruptError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="coderValueNotFound">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="coderValueNotFoundError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="errorDomain">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableArchitectureMismatch">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableArchitectureMismatchError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableLink">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableLinkError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableLoad">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableLoadError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableNotLoadable">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableNotLoadableError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableRuntimeMismatch">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableRuntimeMismatchError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="featureUnsupported">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="featureUnsupportedError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileLocking">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileLockingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileManagerUnmountBusy">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileManagerUnmountBusyError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileManagerUnmountUnknown">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileManagerUnmountUnknownError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileNoSuchFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileNoSuchFileError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="filePath">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadCorruptFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadCorruptFileError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadInapplicableStringEncoding">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadInapplicableStringEncodingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadInvalidFileName">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadInvalidFileNameError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadNoPermission">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadNoPermissionError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadNoSuchFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadNoSuchFileError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadTooLarge">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadTooLargeError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadUnknown">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadUnknownError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadUnknownStringEncoding">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadUnknownStringEncodingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadUnsupportedScheme">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadUnsupportedSchemeError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteFileExists">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteFileExistsError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteInapplicableStringEncoding">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteInapplicableStringEncodingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteInvalidFileName">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteInvalidFileNameError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteNoPermission">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteNoPermissionError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteOutOfSpace">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteOutOfSpaceError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteUnknown">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteUnknownError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteUnsupportedScheme">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteUnsupportedSchemeError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteVolumeReadOnly">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteVolumeReadOnlyError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="formatting">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="formattingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isCoderError">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isExecutableError">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isFileError">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isFormattingError">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isPropertyListError">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isUbiquitousFileError">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isUserActivityError">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isValidationError">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isXPCConnectionError">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="keyValueValidation">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="keyValueValidationError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListReadCorrupt">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListReadCorruptError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListReadStream">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListReadStreamError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListReadUnknownVersion">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListReadUnknownVersionError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListWriteInvalid">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListWriteInvalidError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListWriteStream">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListWriteStreamError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="stringEncoding">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousFileNotUploadedDueToQuota">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousFileNotUploadedDueToQuotaError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousFileUbiquityServerNotAvailable">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousFileUnavailable">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousFileUnavailableError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="underlying">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="url">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityConnectionUnavailable">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityConnectionUnavailableError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityHandoffFailed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityHandoffFailedError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityHandoffUserInfoTooLarge">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityHandoffUserInfoTooLargeError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityRemoteApplicationTimedOut">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityRemoteApplicationTimedOutError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userCancelled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userCancelledError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="xpcConnectionInterrupted">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="xpcConnectionInvalid">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="xpcConnectionReplyInvalid">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="error">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func error(: Foundation.CocoaError.Code, userInfo: Swift.Dictionary(Swift.AnyHashable, Swift.Any)?, url: Foundation.URL?) -> Swift.Error">
                     <isStatic="True">
                     <returnType="Swift.Error">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Foundation.CocoaError.Code" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="userInfo: Swift.Dictionary(Swift.AnyHashable Swift.Any)?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="url: Foundation.URL?" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.CocoaError.Code">
                  <property>
                     <name="CoderReadCorruptError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="CoderValueNotFoundError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ExecutableArchitectureMismatchError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ExecutableLinkError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ExecutableLoadError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ExecutableNotLoadableError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ExecutableRuntimeMismatchError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FeatureUnsupportedError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileLockingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileManagerUnmountBusyError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileManagerUnmountUnknownError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileNoSuchFileError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileReadCorruptFileError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileReadInapplicableStringEncodingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileReadInvalidFileNameError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileReadNoPermissionError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileReadNoSuchFileError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileReadTooLargeError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileReadUnknownError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileReadUnknownStringEncodingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileReadUnsupportedSchemeError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileWriteFileExistsError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileWriteInapplicableStringEncodingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileWriteInvalidFileNameError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileWriteNoPermissionError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileWriteOutOfSpaceError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileWriteUnknownError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileWriteUnsupportedSchemeError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileWriteVolumeReadOnlyError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FormattingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="KeyValueValidationError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="PropertyListReadCorruptError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="PropertyListReadStreamError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="PropertyListReadUnknownVersionError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="PropertyListWriteInvalidError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="PropertyListWriteStreamError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="UbiquitousFileNotUploadedDueToQuotaError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="UbiquitousFileUbiquityServerNotAvailable">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="UbiquitousFileUnavailableError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="UserActivityConnectionUnavailableError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="UserActivityHandoffFailedError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="UserActivityHandoffUserInfoTooLargeError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="UserActivityRemoteApplicationTimedOutError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="UserCancelledError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="XPCConnectionInterrupted">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="XPCConnectionInvalid">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="XPCConnectionReplyInvalid">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="coderInvalidValue">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="coderReadCorrupt">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="coderReadCorruptError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="coderValueNotFound">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="coderValueNotFoundError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableArchitectureMismatch">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableArchitectureMismatchError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableLink">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableLinkError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableLoad">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableLoadError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableNotLoadable">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableNotLoadableError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableRuntimeMismatch">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="executableRuntimeMismatchError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="featureUnsupported">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="featureUnsupportedError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileLocking">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileLockingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileManagerUnmountBusy">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileManagerUnmountBusyError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileManagerUnmountUnknown">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileManagerUnmountUnknownError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileNoSuchFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileNoSuchFileError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadCorruptFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadCorruptFileError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadInapplicableStringEncoding">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadInapplicableStringEncodingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadInvalidFileName">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadInvalidFileNameError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadNoPermission">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadNoPermissionError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadNoSuchFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadNoSuchFileError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadTooLarge">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadTooLargeError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadUnknown">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadUnknownError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadUnknownStringEncoding">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadUnknownStringEncodingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadUnsupportedScheme">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileReadUnsupportedSchemeError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteFileExists">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteFileExistsError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteInapplicableStringEncoding">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteInapplicableStringEncodingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteInvalidFileName">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteInvalidFileNameError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteNoPermission">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteNoPermissionError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteOutOfSpace">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteOutOfSpaceError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteUnknown">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteUnknownError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteUnsupportedScheme">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteUnsupportedSchemeError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteVolumeReadOnly">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileWriteVolumeReadOnlyError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="formatting">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="formattingError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="keyValueValidation">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="keyValueValidationError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListReadCorrupt">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListReadCorruptError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListReadStream">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListReadStreamError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListReadUnknownVersion">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListReadUnknownVersionError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListWriteInvalid">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListWriteInvalidError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListWriteStream">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="propertyListWriteStreamError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousFileNotUploadedDueToQuota">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousFileNotUploadedDueToQuotaError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousFileUbiquityServerNotAvailable">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousFileUnavailable">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousFileUnavailableError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityConnectionUnavailable">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityConnectionUnavailableError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityHandoffFailed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityHandoffFailedError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityHandoffUserInfoTooLarge">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityHandoffUserInfoTooLargeError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityRemoteApplicationTimedOut">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userActivityRemoteApplicationTimedOutError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userCancelled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userCancelledError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="xpcConnectionInterrupted">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="xpcConnectionInvalid">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="xpcConnectionReplyInvalid">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Foundation.Data">
                  <property>
                     <name="bytes">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="indices">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="length">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="mutableBytes">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="regions">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.Data, Foundation.Data) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Data" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Data" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="advanced">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func advanced(by: Int) -> Foundation.Data">
                     <isStatic="False">
                     <returnType="Foundation.Data">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="append">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func append(contentsOf: Swift.Array(Swift.UInt8))">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="contentsOf: Swift.Array(Swift.UInt8)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="copyBytes">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func copyBytes(to: Swift.UnsafeMutableBufferPointer(Self), from: Swift.Range(Int)?) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.UnsafeMutableBufferPointer(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.Range(Int)?" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="enumerateBytes">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func enumerateBytes(Swift.UnsafeBufferPointer(Swift.UInt8), Int, Bool)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.UnsafeBufferPointer(Swift.UInt8)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Foundation.Data.Iterator">
                     <isStatic="False">
                     <returnType="Foundation.Data.Iterator">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="replaceSubrange">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func replaceSubrange(: Swift.Range(Int), with: Swift.UnsafeRawPointer, count: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="with: Swift.UnsafeRawPointer" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="reserveCapacity">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reserveCapacityInt">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="resetBytes">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func resetBytes(in: Swift.Range(Int))">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="subdata">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func subdata(in: Swift.Range(Int)) -> Foundation.Data">
                     <isStatic="False">
                     <returnType="Foundation.Data">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafePointer(???) -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutableBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutableBytesSwift.UnsafeMutablePointer(???) -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="???" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.Data.InlineData">
                  <property>
                     <name="bytes">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="capacity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="length">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="append">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func append(contentsOf: Swift.UnsafeRawBufferPointer)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="contentsOf: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="canStore">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func canStore(count: Int) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="copyBytes">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func copyBytes(to: Swift.UnsafeMutableRawPointer, from: Swift.Range(Int))">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.UnsafeMutableRawPointer" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="replaceSubrange">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func replaceSubrange(: Swift.Range(Int), with: Swift.UnsafeRawPointer?, count: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="with: Swift.UnsafeRawPointer?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="resetBytes">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func resetBytes(in: Swift.Range(Int))">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafeRawBufferPointer -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutableBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutableBytesSwift.UnsafeMutableRawBufferPointer -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.Data.InlineSlice">
                  <property>
                     <name="capacity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="range">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="slice">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="append">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func append(contentsOf: Swift.UnsafeRawBufferPointer)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="contentsOf: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="canStore">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func canStore(count: Int) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="copyBytes">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func copyBytes(to: Swift.UnsafeMutableRawPointer, from: Swift.Range(Int))">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.UnsafeMutableRawPointer" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="ensureUniqueReference">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func ensureUniqueReference()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="replaceSubrange">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func replaceSubrange(: Swift.Range(Int), with: Swift.UnsafeRawPointer?, count: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="with: Swift.UnsafeRawPointer?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="reserveCapacity">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reserveCapacityInt">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="resetBytes">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func resetBytes(in: Swift.Range(Int))">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafeRawBufferPointer -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutableBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutableBytesSwift.UnsafeMutableRawBufferPointer -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.Data.Iterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Swift.UInt8?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.UInt8>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.Data.LargeSlice">
                  <property>
                     <name="capacity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="range">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="slice">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="append">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func append(contentsOf: Swift.UnsafeRawBufferPointer)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="contentsOf: Swift.UnsafeRawBufferPointer" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="copyBytes">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func copyBytes(to: Swift.UnsafeMutableRawPointer, from: Swift.Range(Int))">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.UnsafeMutableRawPointer" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="ensureUniqueReference">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func ensureUniqueReference()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="replaceSubrange">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func replaceSubrange(: Swift.Range(Int), with: Swift.UnsafeRawPointer?, count: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="with: Swift.UnsafeRawPointer?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="reserveCapacity">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func reserveCapacityInt">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="resetBytes">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func resetBytes(in: Swift.Range(Int))">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafeRawBufferPointer -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeMutableBytes">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeMutableBytesSwift.UnsafeMutableRawBufferPointer -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.Date">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="distantFuture">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="distantPast">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timeIntervalBetween1970AndReferenceDate">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timeIntervalSince1970">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timeIntervalSinceNow">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timeIntervalSinceReferenceDate">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timeIntervalSinceReferenceDate">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Foundation.Date, Double) -> Foundation.Date">
                     <isStatic="True">
                     <returnType="Foundation.Date">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Foundation.Date, Double)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(Foundation.Date, Double) -> Foundation.Date">
                     <isStatic="True">
                     <returnType="Foundation.Date">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -=(Foundation.Date, Double)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Foundation.Date, Foundation.Date) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.Date, Foundation.Date) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >(Foundation.Date, Foundation.Date) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addTimeInterval">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addTimeIntervalDouble">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addingTimeInterval">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addingTimeIntervalDouble -> Foundation.Date">
                     <isStatic="False">
                     <returnType="Foundation.Date">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="advanced">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func advanced(by: Double) -> Foundation.Date">
                     <isStatic="False">
                     <returnType="Foundation.Date">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="compare">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func compareFoundation.Date -> Foundation.NSComparisonResult">
                     <isStatic="False">
                     <returnType="Foundation.NSComparisonResult">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="description">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func description(with: Foundation.Locale?) -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="with: Foundation.Locale?" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="distance">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func distance(to: Foundation.Date) -> Double">
                     <isStatic="False">
                     <returnType="Double">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="timeIntervalSince">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func timeIntervalSinceFoundation.Date -> Double">
                     <isStatic="False">
                     <returnType="Double">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.DateComponents">
                  <property>
                     <name="calendar">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="date">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="day">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="era">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hour">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isLeapMonth">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isValidDate">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="minute">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="month">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nanosecond">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="quarter">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="second">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timeZone">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="weekOfMonth">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="weekOfYear">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="weekday">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="weekdayOrdinal">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="year">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="yearForWeekOfYear">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.DateComponents, Foundation.DateComponents) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.DateComponents" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.DateComponents" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isValidDate">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isValidDate(in: Foundation.Calendar) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: Foundation.Calendar" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="setValue">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func setValue(: Int?, for: Foundation.Calendar.Component)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Int?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="for: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="value">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func value(for: Foundation.Calendar.Component) -> Int?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Int>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="for: Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.DateInterval">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="duration">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="end">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="start">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Foundation.DateInterval, Foundation.DateInterval) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.DateInterval" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.DateInterval" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.DateInterval, Foundation.DateInterval) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.DateInterval" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.DateInterval" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="compare">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func compareFoundation.DateInterval -> Foundation.NSComparisonResult">
                     <isStatic="False">
                     <returnType="Foundation.NSComparisonResult">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="contains">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func containsFoundation.Date -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="intersection">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func intersection(with: Foundation.DateInterval) -> Foundation.DateInterval?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Foundation.DateInterval>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="with: Foundation.DateInterval" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="intersects">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func intersectsFoundation.DateInterval -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.ErrorUserInfoKey">
                  <property>
                     <name="NSURLErrorKey">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="filePathErrorKey">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="helpAnchorErrorKey">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="localizedDescriptionKey">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="localizedFailureReasonErrorKey">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="localizedRecoveryOptionsErrorKey">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="localizedRecoverySuggestionErrorKey">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="recoveryAttempterErrorKey">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="stringEncodingErrorKey">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="underlyingErrorKey">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Foundation.IndexPath">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Foundation.IndexPath, Foundation.IndexPath) -> Foundation.IndexPath">
                     <isStatic="True">
                     <returnType="Foundation.IndexPath">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +=(Foundation.IndexPath, Foundation.IndexPath)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Foundation.IndexPath, Foundation.IndexPath) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <=(Foundation.IndexPath, Foundation.IndexPath) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.IndexPath, Foundation.IndexPath) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >(Foundation.IndexPath, Foundation.IndexPath) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >=(Foundation.IndexPath, Foundation.IndexPath) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexPath" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="append">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func appendFoundation.IndexPath">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="appending">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func appendingFoundation.IndexPath -> Foundation.IndexPath">
                     <isStatic="False">
                     <returnType="Foundation.IndexPath">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="compare">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func compareFoundation.IndexPath -> Foundation.NSComparisonResult">
                     <isStatic="False">
                     <returnType="Foundation.NSComparisonResult">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="dropLast">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func dropLast() -> Foundation.IndexPath">
                     <isStatic="False">
                     <returnType="Foundation.IndexPath">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Swift.IndexingIterator(Foundation.IndexPath)">
                     <isStatic="False">
                     <returnType="Swift.IndexingIterator<Foundation.IndexPath>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.IndexSet">
                  <property>
                     <name="count">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="first">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isEmpty">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="last">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rangeView">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.IndexSet, Foundation.IndexSet) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexSet" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexSet" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="contains">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func contains(integersIn: Foundation.IndexSet) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="integersIn: Foundation.IndexSet" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="count">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func count(in: Swift.Range(Int)) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="filteredIndexSet">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func filteredIndexSet(includeInteger: Int -> Bool) -> Foundation.IndexSet">
                     <isStatic="False">
                     <returnType="Foundation.IndexSet">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="includeInteger: Int -> Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIndex">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIndex(after: Foundation.IndexSet.Index)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formIntersection">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formIntersectionFoundation.IndexSet">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formSymmetricDifference">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formSymmetricDifferenceFoundation.IndexSet">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="formUnion">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func formUnionFoundation.IndexSet">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Foundation.IndexSet.Index) -> Foundation.IndexSet.Index">
                     <isStatic="False">
                     <returnType="Foundation.IndexSet.Index">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="indexRange">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func indexRange(in: Swift.Range(Int)) -> Swift.Range(Foundation.IndexSet.Index)">
                     <isStatic="False">
                     <returnType="Swift.Range<Foundation.IndexSet.Index>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="insert">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func insert(integersIn: Swift.Range(Int))">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="integersIn: Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="integerGreaterThan">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func integerGreaterThanInt -> Int?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Int>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="integerGreaterThanOrEqualTo">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func integerGreaterThanOrEqualToInt -> Int?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Int>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="integerLessThan">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func integerLessThanInt -> Int?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Int>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="integerLessThanOrEqualTo">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func integerLessThanOrEqualToInt -> Int?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Int>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="intersection">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func intersectionFoundation.IndexSet -> Foundation.IndexSet">
                     <isStatic="False">
                     <returnType="Foundation.IndexSet">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="intersects">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func intersects(integersIn: Swift.Range(Int)) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="integersIn: Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Swift.IndexingIterator(Foundation.IndexSet)">
                     <isStatic="False">
                     <returnType="Swift.IndexingIterator<Foundation.IndexSet>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="rangeView">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func rangeView(of: Swift.Range(Int)) -> Foundation.IndexSet.RangeView">
                     <isStatic="False">
                     <returnType="Foundation.IndexSet.RangeView">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: Swift.Range(Int)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="remove">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func remove(integersIn: Swift.ClosedRange(Int))">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="integersIn: Swift.ClosedRange(Int)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeAll">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func removeAll()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="shift">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func shift(startingAt: Int, by: Int)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="startingAt: Int" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="by: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="symmetricDifference">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func symmetricDifferenceFoundation.IndexSet -> Foundation.IndexSet">
                     <isStatic="False">
                     <returnType="Foundation.IndexSet">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="union">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func unionFoundation.IndexSet -> Foundation.IndexSet">
                     <isStatic="False">
                     <returnType="Foundation.IndexSet">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="update">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func update(with: Int) -> Int?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Int>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="with: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.IndexSet.Index">
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Foundation.IndexSet.Index, Foundation.IndexSet.Index) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <=(Foundation.IndexSet.Index, Foundation.IndexSet.Index) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.IndexSet.Index, Foundation.IndexSet.Index) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >(Foundation.IndexSet.Index, Foundation.IndexSet.Index) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name=">=">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func >=(Foundation.IndexSet.Index, Foundation.IndexSet.Index) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexSet.Index" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.IndexSet.RangeView">
                  <property>
                     <name="endIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="startIndex">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.IndexSet.RangeView, Foundation.IndexSet.RangeView) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexSet.RangeView" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.IndexSet.RangeView" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="index">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func index(after: Int) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="makeIterator">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func makeIterator() -> Swift.IndexingIterator(Foundation.IndexSet.RangeView)">
                     <isStatic="False">
                     <returnType="Swift.IndexingIterator<Foundation.IndexSet.RangeView>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.JSONEncoder.OutputFormatting">
                  <property>
                     <name="prettyPrinted">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="sortedKeys">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="withoutEscapingSlashes">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Foundation.Locale">
                  <property>
                     <name="alternateQuotationBeginDelimiter">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="alternateQuotationEndDelimiter">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="autoupdatingCurrent">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="availableIdentifiers">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="availableLocaleIdentifiers">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="calendar">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="collationIdentifier">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="collatorIdentifier">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="commonISOCurrencyCodes">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="countryCode">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="currencyCode">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="currencySymbol">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="current">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="decimalSeparator">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="exemplarCharacterSet">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="groupingSeparator">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="identifier">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isoCountryCodes">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isoCurrencyCodes">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isoLanguageCodes">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isoRegionCodes">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="languageCode">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="localeIdentifier">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="preferredLanguages">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="quotationBeginDelimiter">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="quotationEndDelimiter">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="regionCode">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="scriptCode">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="system">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="usesMetricSystem">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="variantCode">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.Locale, Foundation.Locale) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Locale" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Locale" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="canonicalIdentifier">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func canonicalIdentifier(from: Swift.String) -> Swift.String">
                     <isStatic="True">
                     <returnType="Swift.String">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="canonicalLanguageIdentifier">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func canonicalLanguageIdentifier(from: Swift.String) -> Swift.String">
                     <isStatic="True">
                     <returnType="Swift.String">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="canonicalLocaleIdentifier">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func canonicalLocaleIdentifier(from: Swift.String) -> Swift.String">
                     <isStatic="True">
                     <returnType="Swift.String">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="components">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func components(fromLocaleIdentifier: Swift.String) -> Swift.Dictionary(Swift.String, Swift.String)">
                     <isStatic="True">
                     <returnType="Swift.Dictionary<Swift.String, Swift.String>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="fromLocaleIdentifier: Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="identifier">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func identifier(fromWindowsLocaleCode: Int) -> Swift.String?">
                     <isStatic="True">
                     <returnType="Swift.Optional<Swift.String>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="fromWindowsLocaleCode: Int" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="localeIdentifier">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func localeIdentifier(fromWindowsLocaleCode: Swift.UInt32) -> Swift.String?">
                     <isStatic="True">
                     <returnType="Swift.Optional<Swift.String>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="fromWindowsLocaleCode: Swift.UInt32" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="localizedString">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func localizedString(forLocaleIdentifier: Swift.String) -> Swift.String">
                     <isStatic="False">
                     <returnType="Swift.String">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forLocaleIdentifier: Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="windowsLocaleCode">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="static func windowsLocaleCode(fromLocaleIdentifier: Swift.String) -> Swift.UInt32">
                     <isStatic="True">
                     <returnType="Swift.UInt32">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="fromLocaleIdentifier: Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.MachError">
                  <property>
                     <name="aborted">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="alreadyInSet">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="alreadyWaiting">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="codesignError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="defaultSet">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="errorDomain">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="exceptionProtected">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="failure">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="invalidAddress">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="invalidArgument">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="invalidCapability">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="invalidHost">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="invalidLedger">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="invalidMemoryControl">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="invalidName">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="invalidObject">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="invalidPolicy">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="invalidProcessorSet">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="invalidRight">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="invalidSecurity">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="invalidTask">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="invalidValue">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lockOwned">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lockOwnedSelf">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lockSetDestroyed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lockUnstable">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="memoryDataMoved">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="memoryError">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="memoryFailure">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="memoryPresent">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="memoryRestartCopy">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nameExists">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="noAccess">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="noSpace">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nodeDown">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="notDepressed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="notInSet">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="notReceiver">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="notSupported">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="notWaiting">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="operationTimedOut">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="policyLimit">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="policyStatic">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="protectionFailure">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="resourceShortage">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rightExists">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rpcContinueOrphan">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rpcServerTerminated">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rpcTerminateOrphan">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="semaphoreDestroyed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="success">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="terminated">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userReferencesOverflow">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Foundation.Measurement">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="unit">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="*">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func *(Foundation.Measurement(Self), Double) -> Foundation.Measurement(Self)">
                     <isStatic="True">
                     <returnType="Foundation.Measurement<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="+">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func +(Foundation.Measurement(Self), Foundation.Measurement(Self)) -> Foundation.Measurement(Self)">
                     <isStatic="True">
                     <returnType="Foundation.Measurement<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="-">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func -(Foundation.Measurement(Self), Foundation.Measurement(Self)) -> Foundation.Measurement(Self)">
                     <isStatic="True">
                     <returnType="Foundation.Measurement<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="/">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func /(Foundation.Measurement(Self), Double) -> Foundation.Measurement(Self)">
                     <isStatic="True">
                     <returnType="Foundation.Measurement<Self>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Measurement(Self)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Double" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="<">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func <(Foundation.Measurement(???), Foundation.Measurement(???)) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Measurement(???)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Measurement(???)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.Measurement(???), Foundation.Measurement(???)) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Measurement(???)" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Measurement(???)" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.NSDecimal">
               </Struct>
               <Struct name="Foundation.NSFastEnumerationIterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Swift.Any?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.Any>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.NSIndexSetIterator">
                  <func>
                     <name="next">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func next() -> Int?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Int>">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.NSKeyValueObservedChange">
                  <property>
                     <name="indexes">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isPrior">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="kind">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="newValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="oldValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Foundation.Notification">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="object">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userInfo">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.Notification, Foundation.Notification) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Notification" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Notification" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.POSIXError">
                  <property>
                     <name="E2BIG">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EACCES">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EADDRINUSE">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EADDRNOTAVAIL">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EAFNOSUPPORT">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EAGAIN">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EALREADY">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EAUTH">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EBADARCH">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EBADEXEC">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EBADF">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EBADMACHO">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EBADMSG">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EBADRPC">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EBUSY">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ECANCELED">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ECHILD">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ECONNABORTED">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ECONNREFUSED">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ECONNRESET">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EDEADLK">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EDESTADDRREQ">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EDEVERR">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EDOM">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EDQUOT">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EEXIST">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EFAULT">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EFBIG">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EFTYPE">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EHOSTDOWN">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EHOSTUNREACH">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EIDRM">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EILSEQ">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EINPROGRESS">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EINTR">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EINVAL">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EIO">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EISCONN">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EISDIR">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ELOOP">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EMFILE">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EMLINK">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EMSGSIZE">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EMULTIHOP">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENAMETOOLONG">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENEEDAUTH">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENETDOWN">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENETRESET">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENETUNREACH">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENFILE">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOATTR">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOBUFS">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENODATA">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENODEV">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOENT">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOEXEC">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOLCK">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOLINK">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOMEM">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOMSG">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOPOLICY">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOPROTOOPT">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOSPC">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOSR">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOSTR">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOSYS">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOTBLK">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOTCONN">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOTDIR">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOTEMPTY">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOTRECOVERABLE">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOTSOCK">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOTSUP">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENOTTY">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ENXIO">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EOVERFLOW">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EOWNERDEAD">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EPERM">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EPFNOSUPPORT">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EPIPE">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EPROCLIM">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EPROCUNAVAIL">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EPROGMISMATCH">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EPROGUNAVAIL">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EPROTO">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EPROTONOSUPPORT">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EPROTOTYPE">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EPWROFF">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EQFULL">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ERANGE">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EREMOTE">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EROFS">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ERPCMISMATCH">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ESHLIBVERS">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ESHUTDOWN">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ESOCKTNOSUPPORT">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ESPIPE">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ESRCH">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ESTALE">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ETIME">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ETIMEDOUT">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ETOOMANYREFS">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ETXTBSY">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EUSERS">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EWOULDBLOCK">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="EXDEV">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="errorDomain">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Foundation.PersonNameComponents">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="familyName">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="givenName">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="middleName">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="namePrefix">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nameSuffix">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nickname">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="phoneticRepresentation">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.PersonNameComponents, Foundation.PersonNameComponents) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.PersonNameComponents" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.PersonNameComponents" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.TimeZone">
                  <property>
                     <name="abbreviationDictionary">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="autoupdatingCurrent">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="current">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="data">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="identifier">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="knownTimeZoneIdentifiers">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="name">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nextDaylightSavingTimeTransition">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timeZoneDataVersion">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.TimeZone, Foundation.TimeZone) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.TimeZone" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.TimeZone" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="abbreviation">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func abbreviation(for: Foundation.Date) -> Swift.String?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.String>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="daylightSavingTimeOffset">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func daylightSavingTimeOffset(for: Foundation.Date) -> Double">
                     <isStatic="False">
                     <returnType="Double">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="isDaylightSavingTime">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func isDaylightSavingTime(for: Foundation.Date) -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="nextDaylightSavingTimeTransition">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func nextDaylightSavingTimeTransition(after: Foundation.Date) -> Foundation.Date?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Foundation.Date>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="after: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="secondsFromGMT">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func secondsFromGMT(for: Foundation.Date) -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="for: Foundation.Date" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.URL">
                  <property>
                     <name="absoluteString">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="absoluteURL">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="baseURL">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="dataRepresentation">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fragment">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hasDirectoryPath">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="host">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isFileURL">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="lastPathComponent">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="parameterString">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="password">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="path">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="pathComponents">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="pathExtension">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="port">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="query">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="relativePath">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="relativeString">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="resourceSpecifier">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="scheme">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="standardized">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="standardizedFileURL">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="user">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.URL, Foundation.URL) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.URL" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.URL" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="appendPathComponent">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func appendPathComponent(: Swift.String, isDirectory: Bool)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="isDirectory: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="appendPathExtension">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func appendPathExtensionSwift.String">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="appendingPathComponent">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func appendingPathComponent(: Swift.String, isDirectory: Bool) -> Foundation.URL">
                     <isStatic="False">
                     <returnType="Foundation.URL">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="isDirectory: Bool" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="appendingPathExtension">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func appendingPathExtensionSwift.String -> Foundation.URL">
                     <isStatic="False">
                     <returnType="Foundation.URL">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="bookmarkData">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="static func bookmarkData(withContentsOf: Foundation.URL) -> Foundation.Data">
                     <isStatic="True">
                     <returnType="Foundation.Data">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="withContentsOf: Foundation.URL" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="checkPromisedItemIsReachable">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func checkPromisedItemIsReachable() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="checkResourceIsReachable">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func checkResourceIsReachable() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="deleteLastPathComponent">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func deleteLastPathComponent()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="deletePathExtension">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func deletePathExtension()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="deletingLastPathComponent">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func deletingLastPathComponent() -> Foundation.URL">
                     <isStatic="False">
                     <returnType="Foundation.URL">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="deletingPathExtension">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func deletingPathExtension() -> Foundation.URL">
                     <isStatic="False">
                     <returnType="Foundation.URL">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="removeAllCachedResourceValues">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func removeAllCachedResourceValues()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="resolveSymlinksInPath">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func resolveSymlinksInPath()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="resolvingSymlinksInPath">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func resolvingSymlinksInPath() -> Foundation.URL">
                     <isStatic="False">
                     <returnType="Foundation.URL">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="setResourceValues">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func setResourceValuesFoundation.URLResourceValues">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="standardize">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func standardize()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="startAccessingSecurityScopedResource">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func startAccessingSecurityScopedResource() -> Bool">
                     <isStatic="False">
                     <returnType="Bool">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="stopAccessingSecurityScopedResource">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func stopAccessingSecurityScopedResource()">
                     <isStatic="False">
                     <returnType="()">
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="withUnsafeFileSystemRepresentation">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func withUnsafeFileSystemRepresentationSwift.UnsafePointer(Swift.Int8)? -> Self -> Self">
                     <isStatic="False">
                     <returnType="Self">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.Int8" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="writeBookmarkData">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="static func writeBookmarkData(: Foundation.Data, to: Foundation.URL)">
                     <isStatic="True">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Foundation.Data" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Foundation.URL" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.URLComponents">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fragment">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="host">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="password">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="path">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="percentEncodedFragment">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="percentEncodedHost">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="percentEncodedPassword">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="percentEncodedPath">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="percentEncodedQuery">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="percentEncodedQueryItems">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="percentEncodedUser">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="port">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="query">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="queryItems">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rangeOfFragment">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rangeOfHost">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rangeOfPassword">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rangeOfPath">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rangeOfPort">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rangeOfQuery">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rangeOfScheme">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rangeOfUser">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="scheme">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="string">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="url">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="user">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.URLComponents, Foundation.URLComponents) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.URLComponents" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.URLComponents" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="url">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func url(relativeTo: Foundation.URL?) -> Foundation.URL?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Foundation.URL>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="relativeTo: Foundation.URL?" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.URLError">
                  <property>
                     <name="AppTransportSecurityRequiresSecureConnection">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="BackgroundSessionInUseByAnotherProcess">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="BackgroundSessionRequiresSharedContainer">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="BackgroundSessionWasDisconnected">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="BadServerResponse">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="BadURL">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="CallIsActive">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="Cancelled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="CannotCloseFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="CannotConnectToHost">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="CannotCreateFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="CannotDecodeContentData">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="CannotDecodeRawData">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="CannotFindHost">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="CannotLoadFromNetwork">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="CannotMoveFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="CannotOpenFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="CannotParseResponse">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="CannotRemoveFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="CannotWriteToFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ClientCertificateRejected">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ClientCertificateRequired">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="DNSLookupFailed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="DataLengthExceedsMaximum">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="DataNotAllowed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="DownloadDecodingFailedMidStream">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="DownloadDecodingFailedToComplete">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileDoesNotExist">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="FileIsDirectory">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="HTTPTooManyRedirects">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="InternationalRoamingOff">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="NetworkConnectionLost">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="NoPermissionsToReadFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="NotConnectedToInternet">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="RedirectToNonExistentLocation">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="RequestBodyStreamExhausted">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ResourceUnavailable">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="SecureConnectionFailed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ServerCertificateHasBadDate">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ServerCertificateHasUnknownRoot">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ServerCertificateNotYetValid">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ServerCertificateUntrusted">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="TimedOut">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="Unknown">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="UnsupportedURL">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="UserAuthenticationRequired">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="UserCancelledAuthentication">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ZeroByteResource">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="appTransportSecurityRequiresSecureConnection">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="backgroundSessionInUseByAnotherProcess">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="backgroundSessionRequiresSharedContainer">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="backgroundSessionWasDisconnected">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="backgroundTaskCancelledReason">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="badServerResponse">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="badURL">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="callIsActive">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cancelled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotCloseFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotConnectToHost">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotCreateFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotDecodeContentData">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotDecodeRawData">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotFindHost">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotLoadFromNetwork">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotMoveFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotOpenFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotParseResponse">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotRemoveFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotWriteToFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="clientCertificateRejected">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="clientCertificateRequired">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="dataLengthExceedsMaximum">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="dataNotAllowed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="dnsLookupFailed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="downloadDecodingFailedMidStream">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="downloadDecodingFailedToComplete">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="downloadTaskResumeData">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="errorDomain">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="failingURL">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="failureURLString">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileDoesNotExist">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileIsDirectory">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="httpTooManyRedirects">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="internationalRoamingOff">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="networkConnectionLost">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="networkUnavailableReason">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="noPermissionsToReadFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="notConnectedToInternet">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="redirectToNonExistentLocation">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="requestBodyStreamExhausted">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="resourceUnavailable">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="secureConnectionFailed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="serverCertificateHasBadDate">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="serverCertificateHasUnknownRoot">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="serverCertificateNotYetValid">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="serverCertificateUntrusted">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timedOut">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="unknown">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="unsupportedURL">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userAuthenticationRequired">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userCancelledAuthentication">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="zeroByteResource">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Foundation.URLError.Code">
                  <property>
                     <name="appTransportSecurityRequiresSecureConnection">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="backgroundSessionInUseByAnotherProcess">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="backgroundSessionRequiresSharedContainer">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="backgroundSessionWasDisconnected">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="badServerResponse">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="badURL">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="callIsActive">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cancelled">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotCloseFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotConnectToHost">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotCreateFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotDecodeContentData">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotDecodeRawData">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotFindHost">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotLoadFromNetwork">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotMoveFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotOpenFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotParseResponse">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotRemoveFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="cannotWriteToFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="clientCertificateRejected">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="clientCertificateRequired">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="dataLengthExceedsMaximum">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="dataNotAllowed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="dnsLookupFailed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="downloadDecodingFailedMidStream">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="downloadDecodingFailedToComplete">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileDoesNotExist">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileIsDirectory">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="httpTooManyRedirects">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="internationalRoamingOff">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="networkConnectionLost">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="noPermissionsToReadFile">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="notConnectedToInternet">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="redirectToNonExistentLocation">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="requestBodyStreamExhausted">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="resourceUnavailable">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="secureConnectionFailed">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="serverCertificateHasBadDate">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="serverCertificateHasUnknownRoot">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="serverCertificateNotYetValid">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="serverCertificateUntrusted">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timedOut">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="unknown">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="unsupportedURL">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userAuthenticationRequired">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="userCancelledAuthentication">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="zeroByteResource">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Foundation.URLQueryItem">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="name">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="value">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.URLQueryItem, Foundation.URLQueryItem) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.URLQueryItem" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.URLQueryItem" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.URLRequest">
                  <property>
                     <name="allHTTPHeaderFields">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="allowsCellularAccess">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="allowsConstrainedNetworkAccess">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="allowsExpensiveNetworkAccess">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="httpBody">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="httpMethod">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="httpShouldHandleCookies">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="httpShouldUsePipelining">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="mainDocumentURL">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="timeoutInterval">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="url">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.URLRequest, Foundation.URLRequest) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.URLRequest" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.URLRequest" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="addValue">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func addValue(: Swift.String, forHTTPHeaderField: Swift.String)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.String" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forHTTPHeaderField: Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="setValue">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func setValue(: Swift.String?, forHTTPHeaderField: Swift.String)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName=": Swift.String?" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forHTTPHeaderField: Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="value">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func value(forHTTPHeaderField: Swift.String) -> Swift.String?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.String>">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="forHTTPHeaderField: Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Foundation.URLResourceValues">
                  <property>
                     <name="addedToDirectoryDate">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="attributeModificationDate">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="canonicalPath">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="contentAccessDate">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="contentModificationDate">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="creationDate">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="documentIdentifier">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileAllocatedSize">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="fileSize">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hasHiddenExtension">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isAliasFile">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isApplication">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isDirectory">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isExcludedFromBackup">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isExecutable">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isHidden">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isMountTrigger">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isPackage">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isReadable">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isRegularFile">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSymbolicLink">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isSystemImmutable">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isUbiquitousItem">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isUserImmutable">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isVolume">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isWritable">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="labelNumber">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="linkCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="localizedLabel">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="localizedName">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="localizedTypeDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="name">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="parentDirectory">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="path">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="preferredIOBlockSize">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="totalFileAllocatedSize">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="totalFileSize">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="typeIdentifier">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousItemContainerDisplayName">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousItemDownloadRequested">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousItemHasUnresolvedConflicts">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousItemIsDownloading">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousItemIsUploaded">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="ubiquitousItemIsUploading">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volume">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeAvailableCapacity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeCreationDate">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeIsAutomounted">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeIsBrowsable">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeIsEjectable">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeIsEncrypted">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeIsInternal">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeIsJournaling">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeIsLocal">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeIsReadOnly">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeIsRemovable">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeIsRootFileSystem">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeLocalizedFormatDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeLocalizedName">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeMaximumFileSize">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeName">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeResourceCount">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsAccessPermissions">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsAdvisoryFileLocking">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsCasePreservedNames">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsCaseSensitiveNames">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsCompression">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsExclusiveRenaming">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsExtendedSecurity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsFileCloning">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsHardLinks">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsImmutableFiles">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsJournaling">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsPersistentIDs">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsRenaming">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsRootDirectoryDates">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsSparseFiles">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsSwapRenaming">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsSymbolicLinks">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsVolumeSizes">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeSupportsZeroRuns">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeTotalCapacity">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeURLForRemounting">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="volumeUUIDString">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Struct>
               <Struct name="Foundation.UUID">
                  <property>
                     <name="customMirror">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="debugDescription">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="uuid">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="uuidString">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.UUID, Foundation.UUID) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.UUID" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.UUID" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="encode">
                     <hasThrows="True">
                     <operatorKind="None">
                     <signature="func encode(to: Swift.Encoder)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.Encoder" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.AnyHashable">
               </Struct>
               <Struct name="Swift.Array">
               </Struct>
               <Struct name="Swift.Bool">
               </Struct>
               <Struct name="Swift.CollectionDifference">
               </Struct>
               <Struct name="Swift.Dictionary">
               </Struct>
               <Struct name="Swift.Double">
               </Struct>
               <Struct name="Swift.Float">
               </Struct>
               <Struct name="Swift.Int">
               </Struct>
               <Struct name="Swift.Int16">
               </Struct>
               <Struct name="Swift.Int32">
               </Struct>
               <Struct name="Swift.Int64">
               </Struct>
               <Struct name="Swift.Int8">
               </Struct>
               <Struct name="Swift.Set">
               </Struct>
               <Struct name="Swift.String">
                  <property>
                     <name="ascii">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="description">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="iso2022JP">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isoLatin1">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="isoLatin2">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="japaneseEUC">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="macOSRoman">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nextstep">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="nonLossyASCII">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="shiftJIS">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="symbol">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="unicode">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf16">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf16BigEndian">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf16LittleEndian">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf32">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf32BigEndian">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf32LittleEndian">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="utf8">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="windowsCP1250">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="windowsCP1251">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="windowsCP1252">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="windowsCP1253">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <property>
                     <name="windowsCP1254">
                     <isStatic="True">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Swift.String, Swift.String) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Swift.String" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Struct>
               <Struct name="Swift.String">
               </Struct>
               <Struct name="Swift.Substring">
               </Struct>
               <Struct name="Swift.UInt">
               </Struct>
               <Struct name="Swift.UInt16">
               </Struct>
               <Struct name="Swift.UInt32">
               </Struct>
               <Struct name="Swift.UInt64">
               </Struct>
               <Struct name="Swift.UInt8">
               </Struct>
               <Struct name="Swift.UnsafeMutableRawBufferPointer">
               </Struct>
               <Struct name="Swift.UnsafeRawBufferPointer">
               </Struct>
            </innerstructs>
         </typedeclaration>
         <typedeclaration kind="enum" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerenums>
               <Enum name="Darwin.MachErrorCode">
               </Enum>
               <Enum name="Darwin.POSIXErrorCode">
               </Enum>
               <Enum name="Foundation.Calendar.Component">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.Calendar.Component, Foundation.Calendar.Component) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Calendar.Component" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Foundation.Calendar.Identifier">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.Calendar.Identifier, Foundation.Calendar.Identifier) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Calendar.Identifier" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Calendar.Identifier" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Foundation.Calendar.MatchingPolicy">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.Calendar.MatchingPolicy, Foundation.Calendar.MatchingPolicy) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Calendar.MatchingPolicy" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Calendar.MatchingPolicy" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Foundation.Calendar.RepeatedTimePolicy">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.Calendar.RepeatedTimePolicy, Foundation.Calendar.RepeatedTimePolicy) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Calendar.RepeatedTimePolicy" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Calendar.RepeatedTimePolicy" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Foundation.Calendar.SearchDirection">
                  <property>
                     <name="hashValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
                  <func>
                     <name="==">
                     <hasThrows="False">
                     <operatorKind="Infix">
                     <signature="static func ==(Foundation.Calendar.SearchDirection, Foundation.Calendar.SearchDirection) -> Bool">
                     <isStatic="True">
                     <returnType="Bool">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="Foundation.Calendar.SearchDirection" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="hash">
                     <hasThrows="False">
                     <operatorKind="None">
                     <signature="func hash(into: Swift.Hasher)">
                     <isStatic="False">
                     <returnType="()">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="into: Swift.Hasher" type="Named" privateName="" isVariadic="False">
                     </parameterlist>
                     <!-- class func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- class func elements still working on -->
                     <objcSelector="">
                  </func>
               </Enum>
               <Enum name="Foundation.Data.Deallocator">
               </Enum>
               <Enum name="Foundation.JSONDecoder.DataDecodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONDecoder.DateDecodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONDecoder.KeyDecodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONDecoder.NonConformingFloatDecodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONEncoder.DataEncodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONEncoder.DateEncodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONEncoder.KeyEncodingStrategy">
               </Enum>
               <Enum name="Foundation.JSONEncoder.NonConformingFloatEncodingStrategy">
               </Enum>
               <Enum name="Foundation.URLError.BackgroundTaskCancelledReason">
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Enum>
               <Enum name="Foundation.URLError.NetworkUnavailableReason">
                  <property>
                     <name="rawValue">
                     <isStatic="False">
                     <accessibility="True">
                     <!-- property elements not yet found -->
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <type="Named">
                     <storage="Addressed">
                  </property>
               </Enum>
               <Enum name="Swift.DecodingError">
               </Enum>
               <Enum name="Swift.EncodingError">
               </Enum>
            </innerenums>
         </typedeclaration>
         <typedeclaration kind="protocol" accessibility="Public" isObjC="False" isFinal="False" isDeprecated="False" isUnavailable="False">
            <innerprotocols>
               <Protocol name="Foundation.ContiguousBytes">
                  <func>
                     <name="withUnsafeBytes">
                     <operatorKind="None">
                     <signature="func withUnsafeBytesSwift.UnsafeRawBufferPointer -> ??? -> ???">
                     <isStatic="False">
                     <returnType="???">
                     <hasThrows="True">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Foundation.CustomNSError">
                  <func>
                     <name="errorCode">
                     <operatorKind="None">
                     <signature="func errorCode() -> Int">
                     <isStatic="False">
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="errorDomain">
                     <operatorKind="None">
                     <signature="func errorDomain() -> Swift.String">
                     <isStatic="True">
                     <returnType="Swift.String">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="errorUserInfo">
                     <operatorKind="None">
                     <signature="func errorUserInfo() -> Swift.Dictionary(Swift.String, Swift.Any)">
                     <isStatic="False">
                     <returnType="Swift.Dictionary<Swift.String, Swift.Any>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Foundation.DataProtocol">
                  <func>
                     <name="copyBytes">
                     <operatorKind="None">
                     <signature="func copyBytes(to: Swift.UnsafeMutableBufferPointer(???), from: ???) -> Int">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.UnsafeMutableBufferPointer(???)" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: ???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="copyBytes">
                     <operatorKind="None">
                     <signature="func copyBytes(to: Swift.UnsafeMutableRawBufferPointer, from: ???) -> Int">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.UnsafeMutableRawBufferPointer" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="from: ???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="copyBytes">
                     <operatorKind="None">
                     <signature="func copyBytes(to: Swift.UnsafeMutableBufferPointer(???), count: Int) -> Int">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.UnsafeMutableBufferPointer(???)" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="copyBytes">
                     <operatorKind="None">
                     <signature="func copyBytes(to: Swift.UnsafeMutableRawBufferPointer, count: Int) -> Int">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="to: Swift.UnsafeMutableRawBufferPointer" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="count: Int" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Int">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="firstRange">
                     <operatorKind="None">
                     <signature="func firstRange(of: ???, in: ???) -> Swift.Range(Self.Index)?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: ???" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: ???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.Range<Self.Index>>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="lastRange">
                     <operatorKind="None">
                     <signature="func lastRange(of: ???, in: ???) -> Swift.Range(Self.Index)?">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="of: ???" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: ???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Optional<Swift.Range<Self.Index>>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="regions">
                     <operatorKind="None">
                     <signature="func regions() -> Self.Regions">
                     <isStatic="False">
                     <returnType="Self.Regions">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Foundation.LocalizedError">
                  <func>
                     <name="errorDescription">
                     <operatorKind="None">
                     <signature="func errorDescription() -> Swift.String?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.String>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="failureReason">
                     <operatorKind="None">
                     <signature="func failureReason() -> Swift.String?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.String>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="helpAnchor">
                     <operatorKind="None">
                     <signature="func helpAnchor() -> Swift.String?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.String>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="recoverySuggestion">
                     <operatorKind="None">
                     <signature="func recoverySuggestion() -> Swift.String?">
                     <isStatic="False">
                     <returnType="Swift.Optional<Swift.String>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Foundation.MutableDataProtocol">
                  <func>
                     <name="resetBytes">
                     <operatorKind="None">
                     <signature="func resetBytes(in: ???)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="in: ???" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Foundation.NSKeyValueObservingCustomization">
                  <func>
                     <name="automaticallyNotifiesObservers">
                     <operatorKind="None">
                     <signature="func automaticallyNotifiesObservers(for: Swift.AnyKeyPath) -> Bool">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="for: Swift.AnyKeyPath" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="keyPathsAffectingValue">
                     <operatorKind="None">
                     <signature="func keyPathsAffectingValue(for: Swift.AnyKeyPath) -> Swift.Set(Swift.AnyKeyPath)">
                     <isStatic="True">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="for: Swift.AnyKeyPath" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Swift.Set<Swift.AnyKeyPath>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Foundation.RecoverableError">
                  <func>
                     <name="attemptRecovery">
                     <operatorKind="None">
                     <signature="func attemptRecovery(optionIndex: Int, resultHandler: Bool)">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="optionIndex: Int" type="Named"> isVariadic="False"
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="resultHandler: Bool" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="()">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="attemptRecovery">
                     <operatorKind="None">
                     <signature="func attemptRecovery(optionIndex: Int) -> Bool">
                     <isStatic="False">
                     <parameterlist index="0">
                        <!-- parameter type & private name are not found -->
                        <parameter publicName="optionIndex: Int" type="Named"> isVariadic="False"
                     </parameterlist>
                     <returnType="Bool">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
                  <func>
                     <name="recoveryOptions">
                     <operatorKind="None">
                     <signature="func recoveryOptions() -> Swift.Array(Swift.String)">
                     <isStatic="False">
                     <returnType="Swift.Array<Swift.String>">
                     <hasThrows="False">
                     <!-- protocol func elements not yet found -->
                     <accessibility="Public">
                     <isProperty="False">
                     <isFinal="False">
                     <isDeprecated="False">
                     <isUnavailable="False">
                     <isOptional="False">
                     <isRequired="False">
                     <isConvenienceInit="False">
                     <!-- protocol func elements still working on -->
                     <objcSelector="">
                  </func>
               </Protocol>
               <Protocol name="Foundation.ReferenceConvertible">
               </Protocol>
            </innerprotocols>
         </typedeclaration>
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libswiftSwiftOnoneSupport" swiftVersion="??">
      </Module>
      <!-- swiftVersion not yet found -->
      <Module name="libclang_rt" swiftVersion="??">
      </Module>
   </modulelist>
</xamreflect>
